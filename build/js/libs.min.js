!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(S,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],_=S.document,s=Object.getPrototypeOf,a=t.slice,v=t.concat,l=t.push,n=t.indexOf,i={},o=i.toString,g=i.hasOwnProperty,r=g.toString,d=r.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},h={type:!0,src:!0,nonce:!0,noModule:!0};function w(e,t,i){var s,n,o=(i=i||_).createElement("script");if(o.text=e,t)for(s in h)(n=t[s]||t.getAttribute&&t.getAttribute(s))&&o.setAttribute(s,n);i.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[o.call(e)]||"object":typeof e}var c="3.4.1",C=function(e,t){return new C.fn.init(e,t)},p=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function u(e){var t=!!e&&"length"in e&&e.length,i=x(e);return!b(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}C.fn=C.prototype={jquery:c,constructor:C,length:0,toArray:function(){return a.call(this)},get:function(e){return null==e?a.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=C.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return C.each(this,e)},map:function(i){return this.pushStack(C.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},C.extend=C.fn.extend=function(){var e,t,i,s,n,o,r=arguments[0]||{},a=1,l=arguments.length,d=!1;for("boolean"==typeof r&&(d=r,r=arguments[a]||{},a++),"object"==typeof r||b(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(e=arguments[a]))for(t in e)s=e[t],"__proto__"!==t&&r!==s&&(d&&s&&(C.isPlainObject(s)||(n=Array.isArray(s)))?(i=r[t],o=n&&!Array.isArray(i)?[]:n||C.isPlainObject(i)?i:{},n=!1,r[t]=C.extend(d,o,s)):void 0!==s&&(r[t]=s));return r},C.extend({expando:"jQuery"+(c+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==o.call(e))&&(!(t=s(e))||"function"==typeof(i=g.call(t,"constructor")&&t.constructor)&&r.call(i)===d)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){w(e,{nonce:t&&t.nonce})},each:function(e,t){var i,s=0;if(u(e))for(i=e.length;s<i&&!1!==t.call(e[s],s,e[s]);s++);else for(s in e)if(!1===t.call(e[s],s,e[s]))break;return e},trim:function(e){return null==e?"":(e+"").replace(p,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(u(Object(e))?C.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:n.call(t,e,i)},merge:function(e,t){for(var i=+t.length,s=0,n=e.length;s<i;s++)e[n++]=t[s];return e.length=n,e},grep:function(e,t,i){for(var s=[],n=0,o=e.length,r=!i;n<o;n++)!t(e[n],n)!=r&&s.push(e[n]);return s},map:function(e,t,i){var s,n,o=0,r=[];if(u(e))for(s=e.length;o<s;o++)null!=(n=t(e[o],o,i))&&r.push(n);else for(o in e)null!=(n=t(e[o],o,i))&&r.push(n);return v.apply([],r)},guid:1,support:y}),"function"==typeof Symbol&&(C.fn[Symbol.iterator]=t[Symbol.iterator]),C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var f=function(i){function c(e,t,i){var s="0x"+t-65536;return s!=s||i?t:s<0?String.fromCharCode(65536+s):String.fromCharCode(s>>10|55296,1023&s|56320)}function n(){T()}var e,u,w,o,r,f,p,m,x,l,d,T,S,a,_,v,h,g,y,C="sizzle"+ +new Date,b=i.document,k=0,s=0,E=le(),$=le(),M=le(),P=le(),A=function(e,t){return e===t&&(d=!0),0},L={}.hasOwnProperty,t=[],z=t.pop,D=t.push,O=t.push,I=t.slice,N=function(e,t){for(var i=0,s=e.length;i<s;i++)if(e[i]===t)return i;return-1},H="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",j="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",q="\\["+j+"*("+F+")(?:"+j+"*([*^$|!~]?=)"+j+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+F+"))|)"+j+"*\\]",W=":("+F+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+q+")*)|.*)\\)|)",B=new RegExp(j+"+","g"),R=new RegExp("^"+j+"+|((?:^|[^\\\\])(?:\\\\.)*)"+j+"+$","g"),G=new RegExp("^"+j+"*,"+j+"*"),X=new RegExp("^"+j+"*([>+~]|"+j+")"+j+"*"),V=new RegExp(j+"|>"),Y=new RegExp(W),U=new RegExp("^"+F+"$"),K={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),TAG:new RegExp("^("+F+"|[*])"),ATTR:new RegExp("^"+q),PSEUDO:new RegExp("^"+W),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+j+"*(even|odd|(([+-]|)(\\d*)n|)"+j+"*(?:([+-]|)"+j+"*(\\d+)|))"+j+"*\\)|)","i"),bool:new RegExp("^(?:"+H+")$","i"),needsContext:new RegExp("^"+j+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+j+"*((?:-\\d)?\\d*)"+j+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,J=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,se=new RegExp("\\\\([\\da-f]{1,6}"+j+"?|("+j+")|.)","ig"),ne=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,oe=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},re=we(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{O.apply(t=I.call(b.childNodes),b.childNodes),t[b.childNodes.length].nodeType}catch(e){O={apply:t.length?function(e,t){D.apply(e,I.call(t))}:function(e,t){for(var i=e.length,s=0;e[i++]=t[s++];);e.length=i-1}}}function ae(t,e,i,s){var n,o,r,a,l,d,h,c=e&&e.ownerDocument,p=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return i;if(!s&&((e?e.ownerDocument||e:b)!==S&&T(e),e=e||S,_)){if(11!==p&&(l=te.exec(t)))if(n=l[1]){if(9===p){if(!(r=e.getElementById(n)))return i;if(r.id===n)return i.push(r),i}else if(c&&(r=c.getElementById(n))&&y(e,r)&&r.id===n)return i.push(r),i}else{if(l[2])return O.apply(i,e.getElementsByTagName(t)),i;if((n=l[3])&&u.getElementsByClassName&&e.getElementsByClassName)return O.apply(i,e.getElementsByClassName(n)),i}if(u.qsa&&!P[t+" "]&&(!v||!v.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(h=t,c=e,1===p&&V.test(t)){for((a=e.getAttribute("id"))?a=a.replace(ne,oe):e.setAttribute("id",a=C),o=(d=f(t)).length;o--;)d[o]="#"+a+" "+be(d[o]);h=d.join(","),c=ie.test(t)&&ge(e.parentNode)||e}try{return O.apply(i,c.querySelectorAll(h)),i}catch(e){P(t,!0)}finally{a===C&&e.removeAttribute("id")}}}return m(t.replace(R,"$1"),e,i,s)}function le(){var s=[];return function e(t,i){return s.push(t+" ")>w.cacheLength&&delete e[s.shift()],e[t+" "]=i}}function de(e){return e[C]=!0,e}function he(e){var t=S.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ce(e,t){for(var i=e.split("|"),s=i.length;s--;)w.attrHandle[i[s]]=t}function pe(e,t){var i=t&&e,s=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(s)return s;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function ue(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function me(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&re(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ve(r){return de(function(o){return o=+o,de(function(e,t){for(var i,s=r([],e.length,o),n=s.length;n--;)e[i=s[n]]&&(e[i]=!(t[i]=e[i]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in u=ae.support={},r=ae.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Q.test(t||i&&i.nodeName||"HTML")},T=ae.setDocument=function(e){var t,i,s=e?e.ownerDocument||e:b;return s!==S&&9===s.nodeType&&s.documentElement&&(a=(S=s).documentElement,_=!r(S),b!==S&&(i=S.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",n,!1):i.attachEvent&&i.attachEvent("onunload",n)),u.attributes=he(function(e){return e.className="i",!e.getAttribute("className")}),u.getElementsByTagName=he(function(e){return e.appendChild(S.createComment("")),!e.getElementsByTagName("*").length}),u.getElementsByClassName=ee.test(S.getElementsByClassName),u.getById=he(function(e){return a.appendChild(e).id=C,!S.getElementsByName||!S.getElementsByName(C).length}),u.getById?(w.filter.ID=function(e){var t=e.replace(se,c);return function(e){return e.getAttribute("id")===t}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&_){var i=t.getElementById(e);return i?[i]:[]}}):(w.filter.ID=function(e){var i=e.replace(se,c);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&_){var i,s,n,o=t.getElementById(e);if(o){if((i=o.getAttributeNode("id"))&&i.value===e)return[o];for(n=t.getElementsByName(e),s=0;o=n[s++];)if((i=o.getAttributeNode("id"))&&i.value===e)return[o]}return[]}}),w.find.TAG=u.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):u.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,s=[],n=0,o=t.getElementsByTagName(e);if("*"!==e)return o;for(;i=o[n++];)1===i.nodeType&&s.push(i);return s},w.find.CLASS=u.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&_)return t.getElementsByClassName(e)},h=[],v=[],(u.qsa=ee.test(S.querySelectorAll))&&(he(function(e){a.appendChild(e).innerHTML="<a id='"+C+"'></a><select id='"+C+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+j+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+j+"*(?:value|"+H+")"),e.querySelectorAll("[id~="+C+"-]").length||v.push("~="),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+C+"+*").length||v.push(".#.+[+~]")}),he(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=S.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+j+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(u.matchesSelector=ee.test(g=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&he(function(e){u.disconnectedMatch=g.call(e,"*"),g.call(e,"[s!='']:x"),h.push("!=",W)}),v=v.length&&new RegExp(v.join("|")),h=h.length&&new RegExp(h.join("|")),t=ee.test(a.compareDocumentPosition),y=t||ee.test(a.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,s=t&&t.parentNode;return e===s||!(!s||1!==s.nodeType||!(i.contains?i.contains(s):e.compareDocumentPosition&&16&e.compareDocumentPosition(s)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},A=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!u.sortDetached&&t.compareDocumentPosition(e)===i?e===S||e.ownerDocument===b&&y(b,e)?-1:t===S||t.ownerDocument===b&&y(b,t)?1:l?N(l,e)-N(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,s=0,n=e.parentNode,o=t.parentNode,r=[e],a=[t];if(!n||!o)return e===S?-1:t===S?1:n?-1:o?1:l?N(l,e)-N(l,t):0;if(n===o)return pe(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)a.unshift(i);for(;r[s]===a[s];)s++;return s?pe(r[s],a[s]):r[s]===b?-1:a[s]===b?1:0}),S},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if((e.ownerDocument||e)!==S&&T(e),u.matchesSelector&&_&&!P[t+" "]&&(!h||!h.test(t))&&(!v||!v.test(t)))try{var i=g.call(e,t);if(i||u.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){P(t,!0)}return 0<ae(t,S,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!==S&&T(e),y(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!==S&&T(e);var i=w.attrHandle[t.toLowerCase()],s=i&&L.call(w.attrHandle,t.toLowerCase())?i(e,t,!_):void 0;return void 0!==s?s:u.attributes||!_?e.getAttribute(t):(s=e.getAttributeNode(t))&&s.specified?s.value:null},ae.escape=function(e){return(e+"").replace(ne,oe)},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,i=[],s=0,n=0;if(d=!u.detectDuplicates,l=!u.sortStable&&e.slice(0),e.sort(A),d){for(;t=e[n++];)t===e[n]&&(s=i.push(n));for(;s--;)e.splice(i[s],1)}return l=null,e},o=ae.getText=function(e){var t,i="",s=0,n=e.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=o(e)}else if(3===n||4===n)return e.nodeValue}else for(;t=e[s++];)i+=o(t);return i},(w=ae.selectors={cacheLength:50,createPseudo:de,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(se,c),e[3]=(e[3]||e[4]||e[5]||"").replace(se,c),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&Y.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(se,c).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=E[e+" "];return t||(t=new RegExp("(^|"+j+")"+e+"("+j+"|$)"))&&E(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,s,n){return function(e){var t=ae.attr(e,i);return null==t?"!="===s:!s||(t+="","="===s?t===n:"!="===s?t!==n:"^="===s?n&&0===t.indexOf(n):"*="===s?n&&-1<t.indexOf(n):"$="===s?n&&t.slice(-n.length)===n:"~="===s?-1<(" "+t.replace(B," ")+" ").indexOf(n):"|="===s&&(t===n||t.slice(0,n.length+1)===n+"-"))}},CHILD:function(f,e,t,m,v){var g="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===v?function(e){return!!e.parentNode}:function(e,t,i){var s,n,o,r,a,l,d=g!=y?"nextSibling":"previousSibling",h=e.parentNode,c=b&&e.nodeName.toLowerCase(),p=!i&&!b,u=!1;if(h){if(g){for(;d;){for(r=e;r=r[d];)if(b?r.nodeName.toLowerCase()===c:1===r.nodeType)return!1;l=d="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?h.firstChild:h.lastChild],y&&p){for(u=(a=(s=(n=(o=(r=h)[C]||(r[C]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]||[])[0]===k&&s[1])&&s[2],r=a&&h.childNodes[a];r=++a&&r&&r[d]||(u=a=0)||l.pop();)if(1===r.nodeType&&++u&&r===e){n[f]=[k,a,u];break}}else if(p&&(u=a=(s=(n=(o=(r=e)[C]||(r[C]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]||[])[0]===k&&s[1]),!1===u)for(;(r=++a&&r&&r[d]||(u=a=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==c:1!==r.nodeType)||!++u||(p&&((n=(o=r[C]||(r[C]={}))[r.uniqueID]||(o[r.uniqueID]={}))[f]=[k,u]),r!==e)););return(u-=v)===m||u%m==0&&0<=u/m}}},PSEUDO:function(e,o){var t,r=w.pseudos[e]||w.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return r[C]?r(o):1<r.length?(t=[e,e,"",o],w.setFilters.hasOwnProperty(e.toLowerCase())?de(function(e,t){for(var i,s=r(e,o),n=s.length;n--;)e[i=N(e,s[n])]=!(t[i]=s[n])}):function(e){return r(e,0,t)}):r}},pseudos:{not:de(function(e){var s=[],n=[],a=p(e.replace(R,"$1"));return a[C]?de(function(e,t,i,s){for(var n,o=a(e,null,s,[]),r=e.length;r--;)(n=o[r])&&(e[r]=!(t[r]=n))}):function(e,t,i){return s[0]=e,a(s,null,i,n),s[0]=null,!n.pop()}}),has:de(function(t){return function(e){return 0<ae(t,e).length}}),contains:de(function(t){return t=t.replace(se,c),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:de(function(i){return U.test(i||"")||ae.error("unsupported lang: "+i),i=i.replace(se,c).toLowerCase(),function(e){var t;do{if(t=_?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===S.activeElement&&(!S.hasFocus||S.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return Z.test(e.nodeName)},input:function(e){return J.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,i){return[i<0?i+t:i]}),even:ve(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ve(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ve(function(e,t,i){for(var s=i<0?i+t:t<i?t:i;0<=--s;)e.push(s);return e}),gt:ve(function(e,t,i){for(var s=i<0?i+t:i;++s<t;)e.push(s);return e})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[e]=ue(e);for(e in{submit:!0,reset:!0})w.pseudos[e]=fe(e);function ye(){}function be(e){for(var t=0,i=e.length,s="";t<i;t++)s+=e[t].value;return s}function we(a,e,t){var l=e.dir,d=e.next,h=d||l,c=t&&"parentNode"===h,p=s++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||c)return a(e,t,i);return!1}:function(e,t,i){var s,n,o,r=[k,p];if(i){for(;e=e[l];)if((1===e.nodeType||c)&&a(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||c)if(n=(o=e[C]||(e[C]={}))[e.uniqueID]||(o[e.uniqueID]={}),d&&d===e.nodeName.toLowerCase())e=e[l]||e;else{if((s=n[h])&&s[0]===k&&s[1]===p)return r[2]=s[2];if((n[h]=r)[2]=a(e,t,i))return!0}return!1}}function xe(n){return 1<n.length?function(e,t,i){for(var s=n.length;s--;)if(!n[s](e,t,i))return!1;return!0}:n[0]}function Te(e,t,i,s,n){for(var o,r=[],a=0,l=e.length,d=null!=t;a<l;a++)(o=e[a])&&(i&&!i(o,s,n)||(r.push(o),d&&t.push(a)));return r}function Se(u,f,m,v,g,e){return v&&!v[C]&&(v=Se(v)),g&&!g[C]&&(g=Se(g,e)),de(function(e,t,i,s){var n,o,r,a=[],l=[],d=t.length,h=e||function(e,t,i){for(var s=0,n=t.length;s<n;s++)ae(e,t[s],i);return i}(f||"*",i.nodeType?[i]:i,[]),c=!u||!e&&f?h:Te(h,a,u,i,s),p=m?g||(e?u:d||v)?[]:t:c;if(m&&m(c,p,i,s),v)for(n=Te(p,l),v(n,[],i,s),o=n.length;o--;)(r=n[o])&&(p[l[o]]=!(c[l[o]]=r));if(e){if(g||u){if(g){for(n=[],o=p.length;o--;)(r=p[o])&&n.push(c[o]=r);g(null,p=[],n,s)}for(o=p.length;o--;)(r=p[o])&&-1<(n=g?N(e,r):a[o])&&(e[n]=!(t[n]=r))}}else p=Te(p===t?p.splice(d,p.length):p),g?g(null,t,p,s):O.apply(t,p)})}function _e(e){for(var n,t,i,s=e.length,o=w.relative[e[0].type],r=o||w.relative[" "],a=o?1:0,l=we(function(e){return e===n},r,!0),d=we(function(e){return-1<N(n,e)},r,!0),h=[function(e,t,i){var s=!o&&(i||t!==x)||((n=t).nodeType?l:d)(e,t,i);return n=null,s}];a<s;a++)if(t=w.relative[e[a].type])h=[we(xe(h),t)];else{if((t=w.filter[e[a].type].apply(null,e[a].matches))[C]){for(i=++a;i<s&&!w.relative[e[i].type];i++);return Se(1<a&&xe(h),1<a&&be(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(R,"$1"),t,a<i&&_e(e.slice(a,i)),i<s&&_e(e=e.slice(i)),i<s&&be(e))}h.push(t)}return xe(h)}function Ce(v,g){function e(e,t,i,s,n){var o,r,a,l=0,d="0",h=e&&[],c=[],p=x,u=e||b&&w.find.TAG("*",n),f=k+=null==p?1:Math.random()||.1,m=u.length;for(n&&(x=t===S||t||n);d!==m&&null!=(o=u[d]);d++){if(b&&o){for(r=0,t||o.ownerDocument===S||(T(o),i=!_);a=v[r++];)if(a(o,t||S,i)){s.push(o);break}n&&(k=f)}y&&((o=!a&&o)&&l--,e&&h.push(o))}if(l+=d,y&&d!==l){for(r=0;a=g[r++];)a(h,c,t,i);if(e){if(0<l)for(;d--;)h[d]||c[d]||(c[d]=z.call(s));c=Te(c)}O.apply(s,c),n&&!e&&0<c.length&&1<l+g.length&&ae.uniqueSort(s)}return n&&(k=f,x=p),h}var y=0<g.length,b=0<v.length;return y?de(e):e}return ye.prototype=w.filters=w.pseudos,w.setFilters=new ye,f=ae.tokenize=function(e,t){var i,s,n,o,r,a,l,d=$[e+" "];if(d)return t?0:d.slice(0);for(r=e,a=[],l=w.preFilter;r;){for(o in i&&!(s=G.exec(r))||(s&&(r=r.slice(s[0].length)||r),a.push(n=[])),i=!1,(s=X.exec(r))&&(i=s.shift(),n.push({value:i,type:s[0].replace(R," ")}),r=r.slice(i.length)),w.filter)!(s=K[o].exec(r))||l[o]&&!(s=l[o](s))||(i=s.shift(),n.push({value:i,type:o,matches:s}),r=r.slice(i.length));if(!i)break}return t?r.length:r?ae.error(e):$(e,a).slice(0)},p=ae.compile=function(e,t){var i,s=[],n=[],o=M[e+" "];if(!o){for(i=(t=t||f(e)).length;i--;)(o=_e(t[i]))[C]?s.push(o):n.push(o);(o=M(e,Ce(n,s))).selector=e}return o},m=ae.select=function(e,t,i,s){var n,o,r,a,l,d="function"==typeof e&&e,h=!s&&f(e=d.selector||e);if(i=i||[],1===h.length){if(2<(o=h[0]=h[0].slice(0)).length&&"ID"===(r=o[0]).type&&9===t.nodeType&&_&&w.relative[o[1].type]){if(!(t=(w.find.ID(r.matches[0].replace(se,c),t)||[])[0]))return i;d&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(n=K.needsContext.test(e)?0:o.length;n--&&(r=o[n],!w.relative[a=r.type]);)if((l=w.find[a])&&(s=l(r.matches[0].replace(se,c),ie.test(o[0].type)&&ge(t.parentNode)||t))){if(o.splice(n,1),!(e=s.length&&be(o)))return O.apply(i,s),i;break}}return(d||p(e,h))(s,t,!_,i,!t||ie.test(e)&&ge(t.parentNode)||t),i},u.sortStable=C.split("").sort(A).join("")===C,u.detectDuplicates=!!d,T(),u.sortDetached=he(function(e){return 1&e.compareDocumentPosition(S.createElement("fieldset"))}),he(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ce("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),u.attributes&&he(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ce("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),he(function(e){return null==e.getAttribute("disabled")})||ce(H,function(e,t,i){var s;if(!i)return!0===e[t]?t.toLowerCase():(s=e.getAttributeNode(t))&&s.specified?s.value:null}),ae}(S);C.find=f,C.expr=f.selectors,C.expr[":"]=C.expr.pseudos,C.uniqueSort=C.unique=f.uniqueSort,C.text=f.getText,C.isXMLDoc=f.isXML,C.contains=f.contains,C.escapeSelector=f.escape;function T(e,t,i){for(var s=[],n=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(n&&C(e).is(i))break;s.push(e)}return s}function k(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var E=C.expr.match.needsContext;function $(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var M=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function P(e,i,s){return b(i)?C.grep(e,function(e,t){return!!i.call(e,t,e)!==s}):i.nodeType?C.grep(e,function(e){return e===i!==s}):"string"!=typeof i?C.grep(e,function(e){return-1<n.call(i,e)!==s}):C.filter(i,e,s)}C.filter=function(e,t,i){var s=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===s.nodeType?C.find.matchesSelector(s,e)?[s]:[]:C.find.matches(e,C.grep(t,function(e){return 1===e.nodeType}))},C.fn.extend({find:function(e){var t,i,s=this.length,n=this;if("string"!=typeof e)return this.pushStack(C(e).filter(function(){for(t=0;t<s;t++)if(C.contains(n[t],this))return!0}));for(i=this.pushStack([]),t=0;t<s;t++)C.find(e,n[t],i);return 1<s?C.uniqueSort(i):i},filter:function(e){return this.pushStack(P(this,e||[],!1))},not:function(e){return this.pushStack(P(this,e||[],!0))},is:function(e){return!!P(this,"string"==typeof e&&E.test(e)?C(e):e||[],!1).length}});var A,L=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(C.fn.init=function(e,t,i){var s,n;if(!e)return this;if(i=i||A,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==i.ready?i.ready(e):e(C):C.makeArray(e,this);if(!(s="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:L.exec(e))||!s[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(s[1]){if(t=t instanceof C?t[0]:t,C.merge(this,C.parseHTML(s[1],t&&t.nodeType?t.ownerDocument||t:_,!0)),M.test(s[1])&&C.isPlainObject(t))for(s in t)b(this[s])?this[s](t[s]):this.attr(s,t[s]);return this}return(n=_.getElementById(s[2]))&&(this[0]=n,this.length=1),this}).prototype=C.fn,A=C(_);var z=/^(?:parents|prev(?:Until|All))/,D={children:!0,contents:!0,next:!0,prev:!0};function O(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}C.fn.extend({has:function(e){var t=C(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(C.contains(this,t[e]))return!0})},closest:function(e,t){var i,s=0,n=this.length,o=[],r="string"!=typeof e&&C(e);if(!E.test(e))for(;s<n;s++)for(i=this[s];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&C.find.matchesSelector(i,e))){o.push(i);break}return this.pushStack(1<o.length?C.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?n.call(C(e),this[0]):n.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(C.uniqueSort(C.merge(this.get(),C(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),C.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return T(e,"parentNode")},parentsUntil:function(e,t,i){return T(e,"parentNode",i)},next:function(e){return O(e,"nextSibling")},prev:function(e){return O(e,"previousSibling")},nextAll:function(e){return T(e,"nextSibling")},prevAll:function(e){return T(e,"previousSibling")},nextUntil:function(e,t,i){return T(e,"nextSibling",i)},prevUntil:function(e,t,i){return T(e,"previousSibling",i)},siblings:function(e){return k((e.parentNode||{}).firstChild,e)},children:function(e){return k(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:($(e,"template")&&(e=e.content||e),C.merge([],e.childNodes))}},function(s,n){C.fn[s]=function(e,t){var i=C.map(this,n,e);return"Until"!==s.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=C.filter(t,i)),1<this.length&&(D[s]||C.uniqueSort(i),z.test(s)&&i.reverse()),this.pushStack(i)}});var I=/[^\x20\t\r\n\f]+/g;function N(e){return e}function H(e){throw e}function j(e,t,i,s){var n;try{e&&b(n=e.promise)?n.call(e).done(t).fail(i):e&&b(n=e.then)?n.call(e,t,i):t.apply(void 0,[e].slice(s))}catch(e){i.apply(void 0,[e])}}C.Callbacks=function(s){var e,i;s="string"==typeof s?(e=s,i={},C.each(e.match(I)||[],function(e,t){i[t]=!0}),i):C.extend({},s);function n(){for(a=a||s.once,r=o=!0;d.length;h=-1)for(t=d.shift();++h<l.length;)!1===l[h].apply(t[0],t[1])&&s.stopOnFalse&&(h=l.length,t=!1);s.memory||(t=!1),o=!1,a&&(l=t?[]:"")}var o,t,r,a,l=[],d=[],h=-1,c={add:function(){return l&&(t&&!o&&(h=l.length-1,d.push(t)),function i(e){C.each(e,function(e,t){b(t)?s.unique&&c.has(t)||l.push(t):t&&t.length&&"string"!==x(t)&&i(t)})}(arguments),t&&!o&&n()),this},remove:function(){return C.each(arguments,function(e,t){for(var i;-1<(i=C.inArray(t,l,i));)l.splice(i,1),i<=h&&h--}),this},has:function(e){return e?-1<C.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return a=d=[],l=t="",this},disabled:function(){return!l},lock:function(){return a=d=[],t||o||(l=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],d.push(t),o||n()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},C.extend({Deferred:function(e){var o=[["notify","progress",C.Callbacks("memory"),C.Callbacks("memory"),2],["resolve","done",C.Callbacks("once memory"),C.Callbacks("once memory"),0,"resolved"],["reject","fail",C.Callbacks("once memory"),C.Callbacks("once memory"),1,"rejected"]],n="pending",r={state:function(){return n},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var n=arguments;return C.Deferred(function(s){C.each(o,function(e,t){var i=b(n[t[4]])&&n[t[4]];a[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(s.notify).done(s.resolve).fail(s.reject):s[t[0]+"With"](this,i?[e]:arguments)})}),n=null}).promise()},then:function(t,i,s){var l=0;function d(n,o,r,a){return function(){function e(){var e,t;if(!(n<l)){if((e=r.apply(i,s))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?a?t.call(e,d(l,o,N,a),d(l,o,H,a)):(l++,t.call(e,d(l,o,N,a),d(l,o,H,a),d(l,o,N,o.notifyWith))):(r!==N&&(i=void 0,s=[e]),(a||o.resolveWith)(i,s))}}var i=this,s=arguments,t=a?e:function(){try{e()}catch(e){C.Deferred.exceptionHook&&C.Deferred.exceptionHook(e,t.stackTrace),l<=n+1&&(r!==H&&(i=void 0,s=[e]),o.rejectWith(i,s))}};n?t():(C.Deferred.getStackHook&&(t.stackTrace=C.Deferred.getStackHook()),S.setTimeout(t))}}return C.Deferred(function(e){o[0][3].add(d(0,e,b(s)?s:N,e.notifyWith)),o[1][3].add(d(0,e,b(t)?t:N)),o[2][3].add(d(0,e,b(i)?i:H))}).promise()},promise:function(e){return null!=e?C.extend(e,r):r}},a={};return C.each(o,function(e,t){var i=t[2],s=t[5];r[t[1]]=i.add,s&&i.add(function(){n=s},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),i.add(t[3].fire),a[t[0]]=function(){return a[t[0]+"With"](this===a?void 0:this,arguments),this},a[t[0]+"With"]=i.fireWith}),r.promise(a),e&&e.call(a,a),a},when:function(e){function t(t){return function(e){n[t]=this,o[t]=1<arguments.length?a.call(arguments):e,--i||r.resolveWith(n,o)}}var i=arguments.length,s=i,n=Array(s),o=a.call(arguments),r=C.Deferred();if(i<=1&&(j(e,r.done(t(s)).resolve,r.reject,!i),"pending"===r.state()||b(o[s]&&o[s].then)))return r.then();for(;s--;)j(o[s],t(s),r.reject);return r.promise()}});var F=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;C.Deferred.exceptionHook=function(e,t){S.console&&S.console.warn&&e&&F.test(e.name)&&S.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},C.readyException=function(e){S.setTimeout(function(){throw e})};var q=C.Deferred();function W(){_.removeEventListener("DOMContentLoaded",W),S.removeEventListener("load",W),C.ready()}C.fn.ready=function(e){return q.then(e).catch(function(e){C.readyException(e)}),this},C.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--C.readyWait:C.isReady)||(C.isReady=!0)!==e&&0<--C.readyWait||q.resolveWith(_,[C])}}),C.ready.then=q.then,"complete"===_.readyState||"loading"!==_.readyState&&!_.documentElement.doScroll?S.setTimeout(C.ready):(_.addEventListener("DOMContentLoaded",W),S.addEventListener("load",W));var B=function(e,t,i,s,n,o,r){var a=0,l=e.length,d=null==i;if("object"===x(i))for(a in n=!0,i)B(e,t,a,i[a],!0,o,r);else if(void 0!==s&&(n=!0,b(s)||(r=!0),d&&(t=r?(t.call(e,s),null):(d=t,function(e,t,i){return d.call(C(e),i)})),t))for(;a<l;a++)t(e[a],i,r?s:s.call(e[a],a,t(e[a],i)));return n?e:d?t.call(e):l?t(e[0],i):o},R=/^-ms-/,G=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function V(e){return e.replace(R,"ms-").replace(G,X)}function Y(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function U(){this.expando=C.expando+U.uid++}U.uid=1,U.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var s,n=this.cache(e);if("string"==typeof t)n[V(t)]=i;else for(s in t)n[V(s)]=t[s];return n},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][V(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,s=e[this.expando];if(void 0!==s){if(void 0!==t){i=(t=Array.isArray(t)?t.map(V):(t=V(t))in s?[t]:t.match(I)||[]).length;for(;i--;)delete s[t[i]]}void 0!==t&&!C.isEmptyObject(s)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!C.isEmptyObject(t)}};var K=new U,Q=new U,J=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function ee(e,t,i){var s,n;if(void 0===i&&1===e.nodeType)if(s="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(s))){try{i="true"===(n=i)||"false"!==n&&("null"===n?null:n===+n+""?+n:J.test(n)?JSON.parse(n):n)}catch(e){}Q.set(e,t,i)}else i=void 0;return i}C.extend({hasData:function(e){return Q.hasData(e)||K.hasData(e)},data:function(e,t,i){return Q.access(e,t,i)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,i){return K.access(e,t,i)},_removeData:function(e,t){K.remove(e,t)}}),C.fn.extend({data:function(i,e){var t,s,n,o=this[0],r=o&&o.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){Q.set(this,i)}):B(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,i))||void 0!==(t=ee(o,i))?t:void 0;this.each(function(){Q.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(n=Q.get(o),1===o.nodeType&&!K.get(o,"hasDataAttrs"))){for(t=r.length;t--;)r[t]&&0===(s=r[t].name).indexOf("data-")&&(s=V(s.slice(5)),ee(o,s,n[s]));K.set(o,"hasDataAttrs",!0)}return n},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),C.extend({queue:function(e,t,i){var s;if(e)return t=(t||"fx")+"queue",s=K.get(e,t),i&&(!s||Array.isArray(i)?s=K.access(e,t,C.makeArray(i)):s.push(i)),s||[]},dequeue:function(e,t){t=t||"fx";var i=C.queue(e,t),s=i.length,n=i.shift(),o=C._queueHooks(e,t);"inprogress"===n&&(n=i.shift(),s--),n&&("fx"===t&&i.unshift("inprogress"),delete o.stop,n.call(e,function(){C.dequeue(e,t)},o)),!s&&o&&o.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return K.get(e,i)||K.access(e,i,{empty:C.Callbacks("once memory").add(function(){K.remove(e,[t+"queue",i])})})}}),C.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?C.queue(this[0],t):void 0===i?this:this.each(function(){var e=C.queue(this,t,i);C._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&C.dequeue(this,t)})},dequeue:function(e){return this.each(function(){C.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--n||o.resolveWith(r,[r])}var s,n=1,o=C.Deferred(),r=this,a=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(s=K.get(r[a],e+"queueHooks"))&&s.empty&&(n++,s.empty.add(i));return i(),o.promise(t)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ie=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),se=["Top","Right","Bottom","Left"],ne=_.documentElement,oe=function(e){return C.contains(e.ownerDocument,e)},re={composed:!0};ne.getRootNode&&(oe=function(e){return C.contains(e.ownerDocument,e)||e.getRootNode(re)===e.ownerDocument});function ae(e,t,i,s){var n,o,r={};for(o in t)r[o]=e.style[o],e.style[o]=t[o];for(o in n=i.apply(e,s||[]),t)e.style[o]=r[o];return n}var le=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===C.css(e,"display")};function de(e,t,i,s){var n,o,r=20,a=s?function(){return s.cur()}:function(){return C.css(e,t,"")},l=a(),d=i&&i[3]||(C.cssNumber[t]?"":"px"),h=e.nodeType&&(C.cssNumber[t]||"px"!==d&&+l)&&ie.exec(C.css(e,t));if(h&&h[3]!==d){for(l/=2,d=d||h[3],h=+l||1;r--;)C.style(e,t,h+d),(1-o)*(1-(o=a()/l||.5))<=0&&(r=0),h/=o;h*=2,C.style(e,t,h+d),i=i||[]}return i&&(h=+h||+l||0,n=i[1]?h+(i[1]+1)*i[2]:+i[2],s&&(s.unit=d,s.start=h,s.end=n)),n}var he={};function ce(e,t){for(var i,s,n,o,r,a,l,d=[],h=0,c=e.length;h<c;h++)(s=e[h]).style&&(i=s.style.display,t?("none"===i&&(d[h]=K.get(s,"display")||null,d[h]||(s.style.display="")),""===s.style.display&&le(s)&&(d[h]=(l=r=o=void 0,r=(n=s).ownerDocument,a=n.nodeName,(l=he[a])||(o=r.body.appendChild(r.createElement(a)),l=C.css(o,"display"),o.parentNode.removeChild(o),"none"===l&&(l="block"),he[a]=l)))):"none"!==i&&(d[h]="none",K.set(s,"display",i)));for(h=0;h<c;h++)null!=d[h]&&(e[h].style.display=d[h]);return e}C.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){le(this)?C(this).show():C(this).hide()})}});var pe=/^(?:checkbox|radio)$/i,ue=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i,me={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ve(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&$(e,t)?C.merge([e],i):i}function ge(e,t){for(var i=0,s=e.length;i<s;i++)K.set(e[i],"globalEval",!t||K.get(t[i],"globalEval"))}me.optgroup=me.option,me.tbody=me.tfoot=me.colgroup=me.caption=me.thead,me.th=me.td;var ye,be,we=/<|&#?\w+;/;function xe(e,t,i,s,n){for(var o,r,a,l,d,h,c=t.createDocumentFragment(),p=[],u=0,f=e.length;u<f;u++)if((o=e[u])||0===o)if("object"===x(o))C.merge(p,o.nodeType?[o]:o);else if(we.test(o)){for(r=r||c.appendChild(t.createElement("div")),a=(ue.exec(o)||["",""])[1].toLowerCase(),l=me[a]||me._default,r.innerHTML=l[1]+C.htmlPrefilter(o)+l[2],h=l[0];h--;)r=r.lastChild;C.merge(p,r.childNodes),(r=c.firstChild).textContent=""}else p.push(t.createTextNode(o));for(c.textContent="",u=0;o=p[u++];)if(s&&-1<C.inArray(o,s))n&&n.push(o);else if(d=oe(o),r=ve(c.appendChild(o),"script"),d&&ge(r),i)for(h=0;o=r[h++];)fe.test(o.type||"")&&i.push(o);return c}ye=_.createDocumentFragment().appendChild(_.createElement("div")),(be=_.createElement("input")).setAttribute("type","radio"),be.setAttribute("checked","checked"),be.setAttribute("name","t"),ye.appendChild(be),y.checkClone=ye.cloneNode(!0).cloneNode(!0).lastChild.checked,ye.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ye.cloneNode(!0).lastChild.defaultValue;var Te=/^key/,Se=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,_e=/^([^.]*)(?:\.(.+)|)/;function Ce(){return!0}function ke(){return!1}function Ee(e,t){return e===function(){try{return _.activeElement}catch(e){}}()==("focus"===t)}function $e(e,t,i,s,n,o){var r,a;if("object"==typeof t){for(a in"string"!=typeof i&&(s=s||i,i=void 0),t)$e(e,a,i,s,t[a],o);return e}if(null==s&&null==n?(n=i,s=i=void 0):null==n&&("string"==typeof i?(n=s,s=void 0):(n=s,s=i,i=void 0)),!1===n)n=ke;else if(!n)return e;return 1===o&&(r=n,(n=function(e){return C().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=C.guid++)),e.each(function(){C.event.add(this,t,n,s,i)})}function Me(e,n,o){o?(K.set(e,n,!1),C.event.add(e,n,{namespace:!1,handler:function(e){var t,i,s=K.get(this,n);if(1&e.isTrigger&&this[n]){if(s.length)(C.event.special[n]||{}).delegateType&&e.stopPropagation();else if(s=a.call(arguments),K.set(this,n,s),t=o(this,n),this[n](),s!==(i=K.get(this,n))||t?K.set(this,n,!1):i={},s!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else s.length&&(K.set(this,n,{value:C.event.trigger(C.extend(s[0],C.Event.prototype),s.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===K.get(e,n)&&C.event.add(e,n,Ce)}C.event={global:{},add:function(t,e,i,s,n){var o,r,a,l,d,h,c,p,u,f,m,v=K.get(t);if(v)for(i.handler&&(i=(o=i).handler,n=o.selector),n&&C.find.matchesSelector(ne,n),i.guid||(i.guid=C.guid++),(l=v.events)||(l=v.events={}),(r=v.handle)||(r=v.handle=function(e){return void 0!==C&&C.event.triggered!==e.type?C.event.dispatch.apply(t,arguments):void 0}),d=(e=(e||"").match(I)||[""]).length;d--;)u=m=(a=_e.exec(e[d])||[])[1],f=(a[2]||"").split(".").sort(),u&&(c=C.event.special[u]||{},u=(n?c.delegateType:c.bindType)||u,c=C.event.special[u]||{},h=C.extend({type:u,origType:m,data:s,handler:i,guid:i.guid,selector:n,needsContext:n&&C.expr.match.needsContext.test(n),namespace:f.join(".")},o),(p=l[u])||((p=l[u]=[]).delegateCount=0,c.setup&&!1!==c.setup.call(t,s,f,r)||t.addEventListener&&t.addEventListener(u,r)),c.add&&(c.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),n?p.splice(p.delegateCount++,0,h):p.push(h),C.event.global[u]=!0)},remove:function(e,t,i,s,n){var o,r,a,l,d,h,c,p,u,f,m,v=K.hasData(e)&&K.get(e);if(v&&(l=v.events)){for(d=(t=(t||"").match(I)||[""]).length;d--;)if(u=m=(a=_e.exec(t[d])||[])[1],f=(a[2]||"").split(".").sort(),u){for(c=C.event.special[u]||{},p=l[u=(s?c.delegateType:c.bindType)||u]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=o=p.length;o--;)h=p[o],!n&&m!==h.origType||i&&i.guid!==h.guid||a&&!a.test(h.namespace)||s&&s!==h.selector&&("**"!==s||!h.selector)||(p.splice(o,1),h.selector&&p.delegateCount--,c.remove&&c.remove.call(e,h));r&&!p.length&&(c.teardown&&!1!==c.teardown.call(e,f,v.handle)||C.removeEvent(e,u,v.handle),delete l[u])}else for(u in l)C.event.remove(e,u+t[d],i,s,!0);C.isEmptyObject(l)&&K.remove(e,"handle events")}},dispatch:function(e){var t,i,s,n,o,r,a=C.event.fix(e),l=new Array(arguments.length),d=(K.get(this,"events")||{})[a.type]||[],h=C.event.special[a.type]||{};for(l[0]=a,t=1;t<arguments.length;t++)l[t]=arguments[t];if(a.delegateTarget=this,!h.preDispatch||!1!==h.preDispatch.call(this,a)){for(r=C.event.handlers.call(this,a,d),t=0;(n=r[t++])&&!a.isPropagationStopped();)for(a.currentTarget=n.elem,i=0;(o=n.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==o.namespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(s=((C.event.special[o.origType]||{}).handle||o.handler).apply(n.elem,l))&&!1===(a.result=s)&&(a.preventDefault(),a.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,a),a.result}},handlers:function(e,t){var i,s,n,o,r,a=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&1<=e.button))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(o=[],r={},i=0;i<l;i++)void 0===r[n=(s=t[i]).selector+" "]&&(r[n]=s.needsContext?-1<C(n,this).index(d):C.find(n,this,null,[d]).length),r[n]&&o.push(s);o.length&&a.push({elem:d,handlers:o})}return d=this,l<t.length&&a.push({elem:d,handlers:t.slice(l)}),a},addProp:function(t,e){Object.defineProperty(C.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[C.expando]?e:new C.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&$(t,"input")&&Me(t,"click",Ce),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&$(t,"input")&&Me(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&$(t,"input")&&K.get(t,"click")||$(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},C.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},C.Event=function(e,t){if(!(this instanceof C.Event))return new C.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ce:ke,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&C.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[C.expando]=!0},C.Event.prototype={constructor:C.Event,isDefaultPrevented:ke,isPropagationStopped:ke,isImmediatePropagationStopped:ke,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ce,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ce,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ce,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},C.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Te.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Se.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},C.event.addProp),C.each({focus:"focusin",blur:"focusout"},function(e,t){C.event.special[e]={setup:function(){return Me(this,e,Ee),!1},trigger:function(){return Me(this,e),!0},delegateType:t}}),C.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,n){C.event.special[e]={delegateType:n,bindType:n,handle:function(e){var t,i=e.relatedTarget,s=e.handleObj;return i&&(i===this||C.contains(this,i))||(e.type=s.origType,t=s.handler.apply(this,arguments),e.type=n),t}}}),C.fn.extend({on:function(e,t,i,s){return $e(this,e,t,i,s)},one:function(e,t,i,s){return $e(this,e,t,i,s,1)},off:function(e,t,i){var s,n;if(e&&e.preventDefault&&e.handleObj)return s=e.handleObj,C(e.delegateTarget).off(s.namespace?s.origType+"."+s.namespace:s.origType,s.selector,s.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=ke),this.each(function(){C.event.remove(this,e,i,t)});for(n in e)this.off(n,t,e[n]);return this}});var Pe=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Ae=/<script|<style|<link/i,Le=/checked\s*(?:[^=]|=\s*.checked.)/i,ze=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function De(e,t){return $(e,"table")&&$(11!==t.nodeType?t:t.firstChild,"tr")&&C(e).children("tbody")[0]||e}function Oe(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ie(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Ne(e,t){var i,s,n,o,r,a,l,d;if(1===t.nodeType){if(K.hasData(e)&&(o=K.access(e),r=K.set(t,o),d=o.events))for(n in delete r.handle,r.events={},d)for(i=0,s=d[n].length;i<s;i++)C.event.add(t,n,d[n][i]);Q.hasData(e)&&(a=Q.access(e),l=C.extend({},a),Q.set(t,l))}}function He(i,s,n,o){s=v.apply([],s);var e,t,r,a,l,d,h=0,c=i.length,p=c-1,u=s[0],f=b(u);if(f||1<c&&"string"==typeof u&&!y.checkClone&&Le.test(u))return i.each(function(e){var t=i.eq(e);f&&(s[0]=u.call(this,e,t.html())),He(t,s,n,o)});if(c&&(t=(e=xe(s,i[0].ownerDocument,!1,i,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(a=(r=C.map(ve(e,"script"),Oe)).length;h<c;h++)l=e,h!==p&&(l=C.clone(l,!0,!0),a&&C.merge(r,ve(l,"script"))),n.call(i[h],l,h);if(a)for(d=r[r.length-1].ownerDocument,C.map(r,Ie),h=0;h<a;h++)l=r[h],fe.test(l.type||"")&&!K.access(l,"globalEval")&&C.contains(d,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?C._evalUrl&&!l.noModule&&C._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):w(l.textContent.replace(ze,""),l,d))}return i}function je(e,t,i){for(var s,n=t?C.filter(t,e):e,o=0;null!=(s=n[o]);o++)i||1!==s.nodeType||C.cleanData(ve(s)),s.parentNode&&(i&&oe(s)&&ge(ve(s,"script")),s.parentNode.removeChild(s));return e}C.extend({htmlPrefilter:function(e){return e.replace(Pe,"<$1></$2>")},clone:function(e,t,i){var s,n,o,r,a,l,d,h=e.cloneNode(!0),c=oe(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||C.isXMLDoc(e)))for(r=ve(h),s=0,n=(o=ve(e)).length;s<n;s++)a=o[s],l=r[s],"input"===(d=l.nodeName.toLowerCase())&&pe.test(a.type)?l.checked=a.checked:"input"!==d&&"textarea"!==d||(l.defaultValue=a.defaultValue);if(t)if(i)for(o=o||ve(e),r=r||ve(h),s=0,n=o.length;s<n;s++)Ne(o[s],r[s]);else Ne(e,h);return 0<(r=ve(h,"script")).length&&ge(r,!c&&ve(e,"script")),h},cleanData:function(e){for(var t,i,s,n=C.event.special,o=0;void 0!==(i=e[o]);o++)if(Y(i)){if(t=i[K.expando]){if(t.events)for(s in t.events)n[s]?C.event.remove(i,s):C.removeEvent(i,s,t.handle);i[K.expando]=void 0}i[Q.expando]&&(i[Q.expando]=void 0)}}}),C.fn.extend({detach:function(e){return je(this,e,!0)},remove:function(e){return je(this,e)},text:function(e){return B(this,function(e){return void 0===e?C.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return He(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||De(this,e).appendChild(e)})},prepend:function(){return He(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=De(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(C.cleanData(ve(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return C.clone(this,e,t)})},html:function(e){return B(this,function(e){var t=this[0]||{},i=0,s=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ae.test(e)&&!me[(ue.exec(e)||["",""])[1].toLowerCase()]){e=C.htmlPrefilter(e);try{for(;i<s;i++)1===(t=this[i]||{}).nodeType&&(C.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return He(this,arguments,function(e){var t=this.parentNode;C.inArray(this,i)<0&&(C.cleanData(ve(this)),t&&t.replaceChild(e,this))},i)}}),C.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,r){C.fn[e]=function(e){for(var t,i=[],s=C(e),n=s.length-1,o=0;o<=n;o++)t=o===n?this:this.clone(!0),C(s[o])[r](t),l.apply(i,t.get());return this.pushStack(i)}});var Fe,qe,We,Be,Re,Ge,Xe,Ve=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),Ye=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=S),t.getComputedStyle(e)},Ue=new RegExp(se.join("|"),"i");function Ke(){if(Xe){Ge.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Xe.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(Ge).appendChild(Xe);var e=S.getComputedStyle(Xe);Fe="1%"!==e.top,Re=12===Qe(e.marginLeft),Xe.style.right="60%",Be=36===Qe(e.right),qe=36===Qe(e.width),Xe.style.position="absolute",We=12===Qe(Xe.offsetWidth/3),ne.removeChild(Ge),Xe=null}}function Qe(e){return Math.round(parseFloat(e))}function Je(e,t,i){var s,n,o,r,a=e.style;return(i=i||Ye(e))&&(""!==(r=i.getPropertyValue(t)||i[t])||oe(e)||(r=C.style(e,t)),!y.pixelBoxStyles()&&Ve.test(r)&&Ue.test(t)&&(s=a.width,n=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=i.width,a.width=s,a.minWidth=n,a.maxWidth=o)),void 0!==r?r+"":r}function Ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}Ge=_.createElement("div"),(Xe=_.createElement("div")).style&&(Xe.style.backgroundClip="content-box",Xe.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Xe.style.backgroundClip,C.extend(y,{boxSizingReliable:function(){return Ke(),qe},pixelBoxStyles:function(){return Ke(),Be},pixelPosition:function(){return Ke(),Fe},reliableMarginLeft:function(){return Ke(),Re},scrollboxSize:function(){return Ke(),We}}));var et=["Webkit","Moz","ms"],tt=_.createElement("div").style,it={};function st(e){var t=C.cssProps[e]||it[e];return t||(e in tt?e:it[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=et.length;i--;)if((e=et[i]+t)in tt)return e}(e)||e)}var nt=/^(none|table(?!-c[ea]).+)/,ot=/^--/,rt={position:"absolute",visibility:"hidden",display:"block"},at={letterSpacing:"0",fontWeight:"400"};function lt(e,t,i){var s=ie.exec(t);return s?Math.max(0,s[2]-(i||0))+(s[3]||"px"):t}function dt(e,t,i,s,n,o){var r="width"===t?1:0,a=0,l=0;if(i===(s?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=C.css(e,i+se[r],!0,n)),s?("content"===i&&(l-=C.css(e,"padding"+se[r],!0,n)),"margin"!==i&&(l-=C.css(e,"border"+se[r]+"Width",!0,n))):(l+=C.css(e,"padding"+se[r],!0,n),"padding"!==i?l+=C.css(e,"border"+se[r]+"Width",!0,n):a+=C.css(e,"border"+se[r]+"Width",!0,n));return!s&&0<=o&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-l-a-.5))||0),l}function ht(e,t,i){var s=Ye(e),n=(!y.boxSizingReliable()||i)&&"border-box"===C.css(e,"boxSizing",!1,s),o=n,r=Je(e,t,s),a="offset"+t[0].toUpperCase()+t.slice(1);if(Ve.test(r)){if(!i)return r;r="auto"}return(!y.boxSizingReliable()&&n||"auto"===r||!parseFloat(r)&&"inline"===C.css(e,"display",!1,s))&&e.getClientRects().length&&(n="border-box"===C.css(e,"boxSizing",!1,s),(o=a in e)&&(r=e[a])),(r=parseFloat(r)||0)+dt(e,t,i||(n?"border":"content"),o,s,r)+"px"}function ct(e,t,i,s,n){return new ct.prototype.init(e,t,i,s,n)}C.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Je(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,s){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var n,o,r,a=V(t),l=ot.test(t),d=e.style;if(l||(t=st(a)),r=C.cssHooks[t]||C.cssHooks[a],void 0===i)return r&&"get"in r&&void 0!==(n=r.get(e,!1,s))?n:d[t];"string"===(o=typeof i)&&(n=ie.exec(i))&&n[1]&&(i=de(e,t,n),o="number"),null!=i&&i==i&&("number"!==o||l||(i+=n&&n[3]||(C.cssNumber[a]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(d[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,s))||(l?d.setProperty(t,i):d[t]=i))}},css:function(e,t,i,s){var n,o,r,a=V(t);return ot.test(t)||(t=st(a)),(r=C.cssHooks[t]||C.cssHooks[a])&&"get"in r&&(n=r.get(e,!0,i)),void 0===n&&(n=Je(e,t,s)),"normal"===n&&t in at&&(n=at[t]),""===i||i?(o=parseFloat(n),!0===i||isFinite(o)?o||0:n):n}}),C.each(["height","width"],function(e,l){C.cssHooks[l]={get:function(e,t,i){if(t)return!nt.test(C.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ht(e,l,i):ae(e,rt,function(){return ht(e,l,i)})},set:function(e,t,i){var s,n=Ye(e),o=!y.scrollboxSize()&&"absolute"===n.position,r=(o||i)&&"border-box"===C.css(e,"boxSizing",!1,n),a=i?dt(e,l,i,r,n):0;return r&&o&&(a-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(n[l])-dt(e,l,"border",!1,n)-.5)),a&&(s=ie.exec(t))&&"px"!==(s[3]||"px")&&(e.style[l]=t,t=C.css(e,l)),lt(0,t,a)}}}),C.cssHooks.marginLeft=Ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Je(e,"marginLeft"))||e.getBoundingClientRect().left-ae(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),C.each({margin:"",padding:"",border:"Width"},function(n,o){C.cssHooks[n+o]={expand:function(e){for(var t=0,i={},s="string"==typeof e?e.split(" "):[e];t<4;t++)i[n+se[t]+o]=s[t]||s[t-2]||s[0];return i}},"margin"!==n&&(C.cssHooks[n+o].set=lt)}),C.fn.extend({css:function(e,t){return B(this,function(e,t,i){var s,n,o={},r=0;if(Array.isArray(t)){for(s=Ye(e),n=t.length;r<n;r++)o[t[r]]=C.css(e,t[r],!1,s);return o}return void 0!==i?C.style(e,t,i):C.css(e,t)},e,t,1<arguments.length)}}),((C.Tween=ct).prototype={constructor:ct,init:function(e,t,i,s,n,o){this.elem=e,this.prop=i,this.easing=n||C.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=s,this.unit=o||(C.cssNumber[i]?"":"px")},cur:function(){var e=ct.propHooks[this.prop];return e&&e.get?e.get(this):ct.propHooks._default.get(this)},run:function(e){var t,i=ct.propHooks[this.prop];return this.options.duration?this.pos=t=C.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):ct.propHooks._default.set(this),this}}).init.prototype=ct.prototype,(ct.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=C.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){C.fx.step[e.prop]?C.fx.step[e.prop](e):1!==e.elem.nodeType||!C.cssHooks[e.prop]&&null==e.elem.style[st(e.prop)]?e.elem[e.prop]=e.now:C.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=ct.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},C.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},C.fx=ct.prototype.init,C.fx.step={};var pt,ut,ft,mt,vt=/^(?:toggle|show|hide)$/,gt=/queueHooks$/;function yt(){ut&&(!1===_.hidden&&S.requestAnimationFrame?S.requestAnimationFrame(yt):S.setTimeout(yt,C.fx.interval),C.fx.tick())}function bt(){return S.setTimeout(function(){pt=void 0}),pt=Date.now()}function wt(e,t){var i,s=0,n={height:e};for(t=t?1:0;s<4;s+=2-t)n["margin"+(i=se[s])]=n["padding"+i]=e;return t&&(n.opacity=n.width=e),n}function xt(e,t,i){for(var s,n=(Tt.tweeners[t]||[]).concat(Tt.tweeners["*"]),o=0,r=n.length;o<r;o++)if(s=n[o].call(i,t,e))return s}function Tt(o,e,t){var i,r,s=0,n=Tt.prefilters.length,a=C.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=pt||bt(),t=Math.max(0,d.startTime+d.duration-e),i=1-(t/d.duration||0),s=0,n=d.tweens.length;s<n;s++)d.tweens[s].run(i);return a.notifyWith(o,[d,i,t]),i<1&&n?t:(n||a.notifyWith(o,[d,1,0]),a.resolveWith(o,[d]),!1)},d=a.promise({elem:o,props:C.extend({},e),opts:C.extend(!0,{specialEasing:{},easing:C.easing._default},t),originalProperties:e,originalOptions:t,startTime:pt||bt(),duration:t.duration,tweens:[],createTween:function(e,t){var i=C.Tween(o,d.opts,e,t,d.opts.specialEasing[e]||d.opts.easing);return d.tweens.push(i),i},stop:function(e){var t=0,i=e?d.tweens.length:0;if(r)return this;for(r=!0;t<i;t++)d.tweens[t].run(1);return e?(a.notifyWith(o,[d,1,0]),a.resolveWith(o,[d,e])):a.rejectWith(o,[d,e]),this}}),h=d.props;for(!function(e,t){var i,s,n,o,r;for(i in e)if(n=t[s=V(i)],o=e[i],Array.isArray(o)&&(n=o[1],o=e[i]=o[0]),i!==s&&(e[s]=o,delete e[i]),(r=C.cssHooks[s])&&"expand"in r)for(i in o=r.expand(o),delete e[s],o)i in e||(e[i]=o[i],t[i]=n);else t[s]=n}(h,d.opts.specialEasing);s<n;s++)if(i=Tt.prefilters[s].call(d,o,h,d.opts))return b(i.stop)&&(C._queueHooks(d.elem,d.opts.queue).stop=i.stop.bind(i)),i;return C.map(h,xt,d),b(d.opts.start)&&d.opts.start.call(o,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),C.fx.timer(C.extend(l,{elem:o,anim:d,queue:d.opts.queue})),d}C.Animation=C.extend(Tt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return de(i.elem,e,ie.exec(t),i),i}]},tweener:function(e,t){for(var i,s=0,n=(e=b(e)?(t=e,["*"]):e.match(I)).length;s<n;s++)i=e[s],Tt.tweeners[i]=Tt.tweeners[i]||[],Tt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var s,n,o,r,a,l,d,h,c="width"in t||"height"in t,p=this,u={},f=e.style,m=e.nodeType&&le(e),v=K.get(e,"fxshow");for(s in i.queue||(null==(r=C._queueHooks(e,"fx")).unqueued&&(r.unqueued=0,a=r.empty.fire,r.empty.fire=function(){r.unqueued||a()}),r.unqueued++,p.always(function(){p.always(function(){r.unqueued--,C.queue(e,"fx").length||r.empty.fire()})})),t)if(n=t[s],vt.test(n)){if(delete t[s],o=o||"toggle"===n,n===(m?"hide":"show")){if("show"!==n||!v||void 0===v[s])continue;m=!0}u[s]=v&&v[s]||C.style(e,s)}if((l=!C.isEmptyObject(t))||!C.isEmptyObject(u))for(s in c&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(d=v&&v.display)&&(d=K.get(e,"display")),"none"===(h=C.css(e,"display"))&&(d?h=d:(ce([e],!0),d=e.style.display||d,h=C.css(e,"display"),ce([e]))),("inline"===h||"inline-block"===h&&null!=d)&&"none"===C.css(e,"float")&&(l||(p.done(function(){f.display=d}),null==d&&(h=f.display,d="none"===h?"":h)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",p.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,u)l||(v?"hidden"in v&&(m=v.hidden):v=K.access(e,"fxshow",{display:d}),o&&(v.hidden=!m),m&&ce([e],!0),p.done(function(){for(s in m||ce([e]),K.remove(e,"fxshow"),u)C.style(e,s,u[s])})),l=xt(m?v[s]:0,s,p),s in v||(v[s]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?Tt.prefilters.unshift(e):Tt.prefilters.push(e)}}),C.speed=function(e,t,i){var s=e&&"object"==typeof e?C.extend({},e):{complete:i||!i&&t||b(e)&&e,duration:e,easing:i&&t||t&&!b(t)&&t};return C.fx.off?s.duration=0:"number"!=typeof s.duration&&(s.duration in C.fx.speeds?s.duration=C.fx.speeds[s.duration]:s.duration=C.fx.speeds._default),null!=s.queue&&!0!==s.queue||(s.queue="fx"),s.old=s.complete,s.complete=function(){b(s.old)&&s.old.call(this),s.queue&&C.dequeue(this,s.queue)},s},C.fn.extend({fadeTo:function(e,t,i,s){return this.filter(le).css("opacity",0).show().end().animate({opacity:t},e,i,s)},animate:function(t,e,i,s){function n(){var e=Tt(this,C.extend({},t),r);(o||K.get(this,"finish"))&&e.stop(!0)}var o=C.isEmptyObject(t),r=C.speed(e,i,s);return n.finish=n,o||!1===r.queue?this.each(n):this.queue(r.queue,n)},stop:function(n,e,o){function r(e){var t=e.stop;delete e.stop,t(o)}return"string"!=typeof n&&(o=e,e=n,n=void 0),e&&!1!==n&&this.queue(n||"fx",[]),this.each(function(){var e=!0,t=null!=n&&n+"queueHooks",i=C.timers,s=K.get(this);if(t)s[t]&&s[t].stop&&r(s[t]);else for(t in s)s[t]&&s[t].stop&&gt.test(t)&&r(s[t]);for(t=i.length;t--;)i[t].elem!==this||null!=n&&i[t].queue!==n||(i[t].anim.stop(o),e=!1,i.splice(t,1));!e&&o||C.dequeue(this,n)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var e,t=K.get(this),i=t[r+"queue"],s=t[r+"queueHooks"],n=C.timers,o=i?i.length:0;for(t.finish=!0,C.queue(this,r,[]),s&&s.stop&&s.stop.call(this,!0),e=n.length;e--;)n[e].elem===this&&n[e].queue===r&&(n[e].anim.stop(!0),n.splice(e,1));for(e=0;e<o;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),C.each(["toggle","show","hide"],function(e,s){var n=C.fn[s];C.fn[s]=function(e,t,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(wt(s,!0),e,t,i)}}),C.each({slideDown:wt("show"),slideUp:wt("hide"),slideToggle:wt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,s){C.fn[e]=function(e,t,i){return this.animate(s,e,t,i)}}),C.timers=[],C.fx.tick=function(){var e,t=0,i=C.timers;for(pt=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||C.fx.stop(),pt=void 0},C.fx.timer=function(e){C.timers.push(e),C.fx.start()},C.fx.interval=13,C.fx.start=function(){ut||(ut=!0,yt())},C.fx.stop=function(){ut=null},C.fx.speeds={slow:600,fast:200,_default:400},C.fn.delay=function(s,e){return s=C.fx&&C.fx.speeds[s]||s,e=e||"fx",this.queue(e,function(e,t){var i=S.setTimeout(e,s);t.stop=function(){S.clearTimeout(i)}})},ft=_.createElement("input"),mt=_.createElement("select").appendChild(_.createElement("option")),ft.type="checkbox",y.checkOn=""!==ft.value,y.optSelected=mt.selected,(ft=_.createElement("input")).value="t",ft.type="radio",y.radioValue="t"===ft.value;var St,_t=C.expr.attrHandle;C.fn.extend({attr:function(e,t){return B(this,C.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){C.removeAttr(this,e)})}}),C.extend({attr:function(e,t,i){var s,n,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===e.getAttribute?C.prop(e,t,i):(1===o&&C.isXMLDoc(e)||(n=C.attrHooks[t.toLowerCase()]||(C.expr.match.bool.test(t)?St:void 0)),void 0!==i?null===i?void C.removeAttr(e,t):n&&"set"in n&&void 0!==(s=n.set(e,i,t))?s:(e.setAttribute(t,i+""),i):!(n&&"get"in n&&null!==(s=n.get(e,t)))&&null==(s=C.find.attr(e,t))?void 0:s)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&$(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,s=0,n=t&&t.match(I);if(n&&1===e.nodeType)for(;i=n[s++];)e.removeAttribute(i)}}),St={set:function(e,t,i){return!1===t?C.removeAttr(e,i):e.setAttribute(i,i),i}},C.each(C.expr.match.bool.source.match(/\w+/g),function(e,t){var r=_t[t]||C.find.attr;_t[t]=function(e,t,i){var s,n,o=t.toLowerCase();return i||(n=_t[o],_t[o]=s,s=null!=r(e,t,i)?o:null,_t[o]=n),s}});var Ct=/^(?:input|select|textarea|button)$/i,kt=/^(?:a|area)$/i;function Et(e){return(e.match(I)||[]).join(" ")}function $t(e){return e.getAttribute&&e.getAttribute("class")||""}function Mt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(I)||[]}C.fn.extend({prop:function(e,t){return B(this,C.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[C.propFix[e]||e]})}}),C.extend({prop:function(e,t,i){var s,n,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&C.isXMLDoc(e)||(t=C.propFix[t]||t,n=C.propHooks[t]),void 0!==i?n&&"set"in n&&void 0!==(s=n.set(e,i,t))?s:e[t]=i:n&&"get"in n&&null!==(s=n.get(e,t))?s:e[t]},propHooks:{tabIndex:{get:function(e){var t=C.find.attr(e,"tabindex");return t?parseInt(t,10):Ct.test(e.nodeName)||kt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(C.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),C.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){C.propFix[this.toLowerCase()]=this}),C.fn.extend({addClass:function(t){var e,i,s,n,o,r,a,l=0;if(b(t))return this.each(function(e){C(this).addClass(t.call(this,e,$t(this)))});if((e=Mt(t)).length)for(;i=this[l++];)if(n=$t(i),s=1===i.nodeType&&" "+Et(n)+" "){for(r=0;o=e[r++];)s.indexOf(" "+o+" ")<0&&(s+=o+" ");n!==(a=Et(s))&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,s,n,o,r,a,l=0;if(b(t))return this.each(function(e){C(this).removeClass(t.call(this,e,$t(this)))});if(!arguments.length)return this.attr("class","");if((e=Mt(t)).length)for(;i=this[l++];)if(n=$t(i),s=1===i.nodeType&&" "+Et(n)+" "){for(r=0;o=e[r++];)for(;-1<s.indexOf(" "+o+" ");)s=s.replace(" "+o+" "," ");n!==(a=Et(s))&&i.setAttribute("class",a)}return this},toggleClass:function(n,t){var o=typeof n,r="string"==o||Array.isArray(n);return"boolean"==typeof t&&r?t?this.addClass(n):this.removeClass(n):b(n)?this.each(function(e){C(this).toggleClass(n.call(this,e,$t(this),t),t)}):this.each(function(){var e,t,i,s;if(r)for(t=0,i=C(this),s=Mt(n);e=s[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==n&&"boolean"!=o||((e=$t(this))&&K.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==n&&K.get(this,"__className__")||""))})},hasClass:function(e){var t,i,s=0;for(t=" "+e+" ";i=this[s++];)if(1===i.nodeType&&-1<(" "+Et($t(i))+" ").indexOf(t))return!0;return!1}});var Pt=/\r/g;C.fn.extend({val:function(i){var s,e,n,t=this[0];return arguments.length?(n=b(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=n?i.call(this,e,C(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=C.map(t,function(e){return null==e?"":e+""})),(s=C.valHooks[this.type]||C.valHooks[this.nodeName.toLowerCase()])&&"set"in s&&void 0!==s.set(this,t,"value")||(this.value=t))})):t?(s=C.valHooks[t.type]||C.valHooks[t.nodeName.toLowerCase()])&&"get"in s&&void 0!==(e=s.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Pt,""):null==e?"":e:void 0}}),C.extend({valHooks:{option:{get:function(e){var t=C.find.attr(e,"value");return null!=t?t:Et(C.text(e))}},select:{get:function(e){var t,i,s,n=e.options,o=e.selectedIndex,r="select-one"===e.type,a=r?null:[],l=r?o+1:n.length;for(s=o<0?l:r?o:0;s<l;s++)if(((i=n[s]).selected||s===o)&&!i.disabled&&(!i.parentNode.disabled||!$(i.parentNode,"optgroup"))){if(t=C(i).val(),r)return t;a.push(t)}return a},set:function(e,t){for(var i,s,n=e.options,o=C.makeArray(t),r=n.length;r--;)((s=n[r]).selected=-1<C.inArray(C.valHooks.option.get(s),o))&&(i=!0);return i||(e.selectedIndex=-1),o}}}}),C.each(["radio","checkbox"],function(){C.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<C.inArray(C(e).val(),t)}},y.checkOn||(C.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in S;function At(e){e.stopPropagation()}var Lt=/^(?:focusinfocus|focusoutblur)$/;C.extend(C.event,{trigger:function(e,t,i,s){var n,o,r,a,l,d,h,c,p=[i||_],u=g.call(e,"type")?e.type:e,f=g.call(e,"namespace")?e.namespace.split("."):[];if(o=c=r=i=i||_,3!==i.nodeType&&8!==i.nodeType&&!Lt.test(u+C.event.triggered)&&(-1<u.indexOf(".")&&(u=(f=u.split(".")).shift(),f.sort()),l=u.indexOf(":")<0&&"on"+u,(e=e[C.expando]?e:new C.Event(u,"object"==typeof e&&e)).isTrigger=s?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:C.makeArray(t,[e]),h=C.event.special[u]||{},s||!h.trigger||!1!==h.trigger.apply(i,t))){if(!s&&!h.noBubble&&!m(i)){for(a=h.delegateType||u,Lt.test(a+u)||(o=o.parentNode);o;o=o.parentNode)p.push(o),r=o;r===(i.ownerDocument||_)&&p.push(r.defaultView||r.parentWindow||S)}for(n=0;(o=p[n++])&&!e.isPropagationStopped();)c=o,e.type=1<n?a:h.bindType||u,(d=(K.get(o,"events")||{})[e.type]&&K.get(o,"handle"))&&d.apply(o,t),(d=l&&o[l])&&d.apply&&Y(o)&&(e.result=d.apply(o,t),!1===e.result&&e.preventDefault());return e.type=u,s||e.isDefaultPrevented()||h._default&&!1!==h._default.apply(p.pop(),t)||!Y(i)||l&&b(i[u])&&!m(i)&&((r=i[l])&&(i[l]=null),C.event.triggered=u,e.isPropagationStopped()&&c.addEventListener(u,At),i[u](),e.isPropagationStopped()&&c.removeEventListener(u,At),C.event.triggered=void 0,r&&(i[l]=r)),e.result}},simulate:function(e,t,i){var s=C.extend(new C.Event,i,{type:e,isSimulated:!0});C.event.trigger(s,null,t)}}),C.fn.extend({trigger:function(e,t){return this.each(function(){C.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return C.event.trigger(e,t,i,!0)}}),y.focusin||C.each({focus:"focusin",blur:"focusout"},function(i,s){function n(e){C.event.simulate(s,e.target,C.event.fix(e))}C.event.special[s]={setup:function(){var e=this.ownerDocument||this,t=K.access(e,s);t||e.addEventListener(i,n,!0),K.access(e,s,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=K.access(e,s)-1;t?K.access(e,s,t):(e.removeEventListener(i,n,!0),K.remove(e,s))}}});var zt=S.location,Dt=Date.now(),Ot=/\?/;C.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new S.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||C.error("Invalid XML: "+e),t};var It=/\[\]$/,Nt=/\r?\n/g,Ht=/^(?:submit|button|image|reset|file)$/i,jt=/^(?:input|select|textarea|keygen)/i;function Ft(i,e,s,n){var t;if(Array.isArray(e))C.each(e,function(e,t){s||It.test(i)?n(i,t):Ft(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,s,n)});else if(s||"object"!==x(e))n(i,e);else for(t in e)Ft(i+"["+t+"]",e[t],s,n)}C.param=function(e,t){function i(e,t){var i=b(t)?t():t;n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var s,n=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!C.isPlainObject(e))C.each(e,function(){i(this.name,this.value)});else for(s in e)Ft(s,e[s],t,i);return n.join("&")},C.fn.extend({serialize:function(){return C.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=C.prop(this,"elements");return e?C.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!C(this).is(":disabled")&&jt.test(this.nodeName)&&!Ht.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var i=C(this).val();return null==i?null:Array.isArray(i)?C.map(i,function(e){return{name:t.name,value:e.replace(Nt,"\r\n")}}):{name:t.name,value:i.replace(Nt,"\r\n")}}).get()}});var qt=/%20/g,Wt=/#.*$/,Bt=/([?&])_=[^&]*/,Rt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Gt=/^(?:GET|HEAD)$/,Xt=/^\/\//,Vt={},Yt={},Ut="*/".concat("*"),Kt=_.createElement("a");function Qt(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,s=0,n=e.toLowerCase().match(I)||[];if(b(t))for(;i=n[s++];)"+"===i[0]?(i=i.slice(1)||"*",(o[i]=o[i]||[]).unshift(t)):(o[i]=o[i]||[]).push(t)}}function Jt(t,n,o,r){var a={},l=t===Yt;function d(e){var s;return a[e]=!0,C.each(t[e]||[],function(e,t){var i=t(n,o,r);return"string"!=typeof i||l||a[i]?l?!(s=i):void 0:(n.dataTypes.unshift(i),d(i),!1)}),s}return d(n.dataTypes[0])||!a["*"]&&d("*")}function Zt(e,t){var i,s,n=C.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((n[i]?e:s=s||{})[i]=t[i]);return s&&C.extend(!0,e,s),e}Kt.href=zt.href,C.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(zt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ut,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":C.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Zt(Zt(e,C.ajaxSettings),t):Zt(C.ajaxSettings,e)},ajaxPrefilter:Qt(Vt),ajaxTransport:Qt(Yt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var h,c,p,i,u,s,f,m,n,o,v=C.ajaxSetup({},t),g=v.context||v,y=v.context&&(g.nodeType||g.jquery)?C(g):C.event,b=C.Deferred(),w=C.Callbacks("once memory"),x=v.statusCode||{},r={},a={},l="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(f){if(!i)for(i={};t=Rt.exec(p);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?p:null},setRequestHeader:function(e,t){return null==f&&(e=a[e.toLowerCase()]=a[e.toLowerCase()]||e,r[e]=t),this},overrideMimeType:function(e){return null==f&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)T.always(e[T.status]);else for(t in e)x[t]=[x[t],e[t]];return this},abort:function(e){var t=e||l;return h&&h.abort(t),d(0,t),this}};if(b.promise(T),v.url=((e||v.url||zt.href)+"").replace(Xt,zt.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(I)||[""],null==v.crossDomain){s=_.createElement("a");try{s.href=v.url,s.href=s.href,v.crossDomain=Kt.protocol+"//"+Kt.host!=s.protocol+"//"+s.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=C.param(v.data,v.traditional)),Jt(Vt,v,t,T),f)return T;for(n in(m=C.event&&v.global)&&0==C.active++&&C.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Gt.test(v.type),c=v.url.replace(Wt,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(qt,"+")):(o=v.url.slice(c.length),v.data&&(v.processData||"string"==typeof v.data)&&(c+=(Ot.test(c)?"&":"?")+v.data,delete v.data),!1===v.cache&&(c=c.replace(Bt,"$1"),o=(Ot.test(c)?"&":"?")+"_="+Dt+++o),v.url=c+o),v.ifModified&&(C.lastModified[c]&&T.setRequestHeader("If-Modified-Since",C.lastModified[c]),C.etag[c]&&T.setRequestHeader("If-None-Match",C.etag[c])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+Ut+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(n,v.headers[n]);if(v.beforeSend&&(!1===v.beforeSend.call(g,T,v)||f))return T.abort();if(l="abort",w.add(v.complete),T.done(v.success),T.fail(v.error),h=Jt(Yt,v,t,T)){if(T.readyState=1,m&&y.trigger("ajaxSend",[T,v]),f)return T;v.async&&0<v.timeout&&(u=S.setTimeout(function(){T.abort("timeout")},v.timeout));try{f=!1,h.send(r,d)}catch(e){if(f)throw e;d(-1,e)}}else d(-1,"No Transport");function d(e,t,i,s){var n,o,r,a,l,d=t;f||(f=!0,u&&S.clearTimeout(u),h=void 0,p=s||"",T.readyState=0<e?4:0,n=200<=e&&e<300||304===e,i&&(a=function(e,t,i){for(var s,n,o,r,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===s&&(s=e.mimeType||t.getResponseHeader("Content-Type"));if(s)for(n in a)if(a[n]&&a[n].test(s)){l.unshift(n);break}if(l[0]in i)o=l[0];else{for(n in i){if(!l[0]||e.converters[n+" "+l[0]]){o=n;break}r=r||n}o=o||r}if(o)return o!==l[0]&&l.unshift(o),i[o]}(v,T,i)),a=function(e,t,i,s){var n,o,r,a,l,d={},h=e.dataTypes.slice();if(h[1])for(r in e.converters)d[r.toLowerCase()]=e.converters[r];for(o=h.shift();o;)if(e.responseFields[o]&&(i[e.responseFields[o]]=t),!l&&s&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=h.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(r=d[l+" "+o]||d["* "+o]))for(n in d)if((a=n.split(" "))[1]===o&&(r=d[l+" "+a[0]]||d["* "+a[0]])){!0===r?r=d[n]:!0!==d[n]&&(o=a[0],h.unshift(a[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}(v,a,T,n),n?(v.ifModified&&((l=T.getResponseHeader("Last-Modified"))&&(C.lastModified[c]=l),(l=T.getResponseHeader("etag"))&&(C.etag[c]=l)),204===e||"HEAD"===v.type?d="nocontent":304===e?d="notmodified":(d=a.state,o=a.data,n=!(r=a.error))):(r=d,!e&&d||(d="error",e<0&&(e=0))),T.status=e,T.statusText=(t||d)+"",n?b.resolveWith(g,[o,d,T]):b.rejectWith(g,[T,d,r]),T.statusCode(x),x=void 0,m&&y.trigger(n?"ajaxSuccess":"ajaxError",[T,v,n?o:r]),w.fireWith(g,[T,d]),m&&(y.trigger("ajaxComplete",[T,v]),--C.active||C.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,i){return C.get(e,t,i,"json")},getScript:function(e,t){return C.get(e,void 0,t,"script")}}),C.each(["get","post"],function(e,n){C[n]=function(e,t,i,s){return b(t)&&(s=s||i,i=t,t=void 0),C.ajax(C.extend({url:e,type:n,dataType:s,data:t,success:i},C.isPlainObject(e)&&e))}}),C._evalUrl=function(e,t){return C.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){C.globalEval(e,t)}})},C.fn.extend({wrapAll:function(e){var t;return this[0]&&(b(e)&&(e=e.call(this[0])),t=C(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return b(i)?this.each(function(e){C(this).wrapInner(i.call(this,e))}):this.each(function(){var e=C(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=b(t);return this.each(function(e){C(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){C(this).replaceWith(this.childNodes)}),this}}),C.expr.pseudos.hidden=function(e){return!C.expr.pseudos.visible(e)},C.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},C.ajaxSettings.xhr=function(){try{return new S.XMLHttpRequest}catch(e){}};var ei={0:200,1223:204},ti=C.ajaxSettings.xhr();y.cors=!!ti&&"withCredentials"in ti,y.ajax=ti=!!ti,C.ajaxTransport(function(n){var o,r;if(y.cors||ti&&!n.crossDomain)return{send:function(e,t){var i,s=n.xhr();if(s.open(n.type,n.url,n.async,n.username,n.password),n.xhrFields)for(i in n.xhrFields)s[i]=n.xhrFields[i];for(i in n.mimeType&&s.overrideMimeType&&s.overrideMimeType(n.mimeType),n.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)s.setRequestHeader(i,e[i]);o=function(e){return function(){o&&(o=r=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?t(0,"error"):t(s.status,s.statusText):t(ei[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=o(),r=s.onerror=s.ontimeout=o("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&S.setTimeout(function(){o&&r()})},o=o("abort");try{s.send(n.hasContent&&n.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),C.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),C.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return C.globalEval(e),e}}}),C.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),C.ajaxTransport("script",function(i){var s,n;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){s=C("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",n=function(e){s.remove(),n=null,e&&t("error"===e.type?404:200,e.type)}),_.head.appendChild(s[0])},abort:function(){n&&n()}}});var ii,si=[],ni=/(=)\?(?=&|$)|\?\?/;C.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=si.pop()||C.expando+"_"+Dt++;return this[e]=!0,e}}),C.ajaxPrefilter("json jsonp",function(e,t,i){var s,n,o,r=!1!==e.jsonp&&(ni.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&ni.test(e.data)&&"data");if(r||"jsonp"===e.dataTypes[0])return s=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(ni,"$1"+s):!1!==e.jsonp&&(e.url+=(Ot.test(e.url)?"&":"?")+e.jsonp+"="+s),e.converters["script json"]=function(){return o||C.error(s+" was not called"),o[0]},e.dataTypes[0]="json",n=S[s],S[s]=function(){o=arguments},i.always(function(){void 0===n?C(S).removeProp(s):S[s]=n,e[s]&&(e.jsonpCallback=t.jsonpCallback,si.push(s)),o&&b(n)&&n(o[0]),o=n=void 0}),"script"}),y.createHTMLDocument=((ii=_.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ii.childNodes.length),C.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((s=(t=_.implementation.createHTMLDocument("")).createElement("base")).href=_.location.href,t.head.appendChild(s)):t=_),o=!i&&[],(n=M.exec(e))?[t.createElement(n[1])]:(n=xe([e],t,o),o&&o.length&&C(o).remove(),C.merge([],n.childNodes)));var s,n,o},C.fn.load=function(e,t,i){var s,n,o,r=this,a=e.indexOf(" ");return-1<a&&(s=Et(e.slice(a)),e=e.slice(0,a)),b(t)?(i=t,t=void 0):t&&"object"==typeof t&&(n="POST"),0<r.length&&C.ajax({url:e,type:n||"GET",dataType:"html",data:t}).done(function(e){o=arguments,r.html(s?C("<div>").append(C.parseHTML(e)).find(s):e)}).always(i&&function(e,t){r.each(function(){i.apply(this,o||[e.responseText,t,e])})}),this},C.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){C.fn[t]=function(e){return this.on(t,e)}}),C.expr.pseudos.animated=function(t){return C.grep(C.timers,function(e){return t===e.elem}).length},C.offset={setOffset:function(e,t,i){var s,n,o,r,a,l,d=C.css(e,"position"),h=C(e),c={};"static"===d&&(e.style.position="relative"),a=h.offset(),o=C.css(e,"top"),l=C.css(e,"left"),n=("absolute"===d||"fixed"===d)&&-1<(o+l).indexOf("auto")?(r=(s=h.position()).top,s.left):(r=parseFloat(o)||0,parseFloat(l)||0),b(t)&&(t=t.call(e,i,C.extend({},a))),null!=t.top&&(c.top=t.top-a.top+r),null!=t.left&&(c.left=t.left-a.left+n),"using"in t?t.using.call(e,c):h.css(c)}},C.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){C.offset.setOffset(this,t,e)});var e,i,s=this[0];return s?s.getClientRects().length?(e=s.getBoundingClientRect(),i=s.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,s=this[0],n={top:0,left:0};if("fixed"===C.css(s,"position"))t=s.getBoundingClientRect();else{for(t=this.offset(),i=s.ownerDocument,e=s.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===C.css(e,"position");)e=e.parentNode;e&&e!==s&&1===e.nodeType&&((n=C(e).offset()).top+=C.css(e,"borderTopWidth",!0),n.left+=C.css(e,"borderLeftWidth",!0))}return{top:t.top-n.top-C.css(s,"marginTop",!0),left:t.left-n.left-C.css(s,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===C.css(e,"position");)e=e.offsetParent;return e||ne})}}),C.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var o="pageYOffset"===n;C.fn[t]=function(e){return B(this,function(e,t,i){var s;if(m(e)?s=e:9===e.nodeType&&(s=e.defaultView),void 0===i)return s?s[n]:e[t];s?s.scrollTo(o?s.pageXOffset:i,o?i:s.pageYOffset):e[t]=i},t,e,arguments.length)}}),C.each(["top","left"],function(e,i){C.cssHooks[i]=Ze(y.pixelPosition,function(e,t){if(t)return t=Je(e,i),Ve.test(t)?C(e).position()[i]+"px":t})}),C.each({Height:"height",Width:"width"},function(r,a){C.each({padding:"inner"+r,content:a,"":"outer"+r},function(s,o){C.fn[o]=function(e,t){var i=arguments.length&&(s||"boolean"!=typeof e),n=s||(!0===e||!0===t?"margin":"border");return B(this,function(e,t,i){var s;return m(e)?0===o.indexOf("outer")?e["inner"+r]:e.document.documentElement["client"+r]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+r],s["scroll"+r],e.body["offset"+r],s["offset"+r],s["client"+r])):void 0===i?C.css(e,t,n):C.style(e,t,i,n)},a,i?e:void 0,i)}})}),C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){C.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}}),C.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),C.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,s){return this.on(t,e,i,s)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),C.proxy=function(e,t){var i,s,n;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return s=a.call(arguments,2),(n=function(){return e.apply(t||this,s.concat(a.call(arguments)))}).guid=e.guid=e.guid||C.guid++,n},C.holdReady=function(e){e?C.readyWait++:C.ready(!0)},C.isArray=Array.isArray,C.parseJSON=JSON.parse,C.nodeName=$,C.isFunction=b,C.isWindow=m,C.camelCase=V,C.type=x,C.now=Date.now,C.isNumeric=function(e){var t=C.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return C});var oi=S.jQuery,ri=S.$;return C.noConflict=function(e){return S.$===C&&(S.$=ri),e&&S.jQuery===C&&(S.jQuery=oi),C},e||(S.jQuery=S.$=C),C}),function(t){"undefined"!=typeof jQuery&&jQuery||"function"!=typeof define||!define.amd?"undefined"!=typeof jQuery&&jQuery||"object"!=typeof exports?t(jQuery,document,window,navigator):t(require("jquery"),document,window,navigator):define(["jquery"],function(e){return t(e,document,window,navigator)})}(function(l,d,h,e,c){"use strict";var t,i,s=0,n=(i=/msie\s\d+/i,0<(t=e.userAgent).search(i)&&i.exec(t).toString().split(" ")[1]<9&&(l("html").addClass("lt-ie9"),!0));function o(e,t,i){this.VERSION="2.3.1",this.input=e,this.plugin_count=i,this.current_plugin=0,this.calc_count=0,this.update_tm=0,this.old_from=0,this.old_to=0,this.old_min_interval=null,this.raf_id=null,this.dragging=!1,this.force_redraw=!1,this.no_diapason=!1,this.has_tab_index=!0,this.is_key=!1,this.is_update=!1,this.is_start=!0,this.is_finish=!1,this.is_active=!1,this.is_resize=!1,this.is_click=!1,t=t||{},this.$cache={win:l(h),body:l(d.body),input:l(e),cont:null,rs:null,min:null,max:null,from:null,to:null,single:null,bar:null,line:null,s_single:null,s_from:null,s_to:null,shad_single:null,shad_from:null,shad_to:null,edge:null,grid:null,grid_labels:[]},this.coords={x_gap:0,x_pointer:0,w_rs:0,w_rs_old:0,w_handle:0,p_gap:0,p_gap_left:0,p_gap_right:0,p_step:0,p_pointer:0,p_handle:0,p_single_fake:0,p_single_real:0,p_from_fake:0,p_from_real:0,p_to_fake:0,p_to_real:0,p_bar_x:0,p_bar_w:0,grid_gap:0,big_num:0,big:[],big_w:[],big_p:[],big_x:[]},this.labels={w_min:0,w_max:0,w_from:0,w_to:0,w_single:0,p_min:0,p_max:0,p_from_fake:0,p_from_left:0,p_to_fake:0,p_to_left:0,p_single_fake:0,p_single_left:0};var s,n,o,r=this.$cache.input,a=r.prop("value");for(o in s={skin:"flat",type:"single",min:10,max:100,from:null,to:null,step:1,min_interval:0,max_interval:0,drag_interval:!1,values:[],p_values:[],from_fixed:!1,from_min:null,from_max:null,from_shadow:!1,to_fixed:!1,to_min:null,to_max:null,to_shadow:!1,prettify_enabled:!0,prettify_separator:" ",prettify:null,force_edges:!1,keyboard:!0,grid:!1,grid_margin:!0,grid_num:4,grid_snap:!1,hide_min_max:!1,hide_from_to:!1,prefix:"",postfix:"",max_postfix:"",decorate_both:!0,values_separator:" â ",input_values_separator:";",disable:!1,block:!1,extra_classes:"",scope:null,onStart:null,onChange:null,onFinish:null,onUpdate:null},"INPUT"!==r[0].nodeName&&console&&console.warn&&console.warn("Base element should be <input>!",r[0]),(n={skin:r.data("skin"),type:r.data("type"),min:r.data("min"),max:r.data("max"),from:r.data("from"),to:r.data("to"),step:r.data("step"),min_interval:r.data("minInterval"),max_interval:r.data("maxInterval"),drag_interval:r.data("dragInterval"),values:r.data("values"),from_fixed:r.data("fromFixed"),from_min:r.data("fromMin"),from_max:r.data("fromMax"),from_shadow:r.data("fromShadow"),to_fixed:r.data("toFixed"),to_min:r.data("toMin"),to_max:r.data("toMax"),to_shadow:r.data("toShadow"),prettify_enabled:r.data("prettifyEnabled"),prettify_separator:r.data("prettifySeparator"),force_edges:r.data("forceEdges"),keyboard:r.data("keyboard"),grid:r.data("grid"),grid_margin:r.data("gridMargin"),grid_num:r.data("gridNum"),grid_snap:r.data("gridSnap"),hide_min_max:r.data("hideMinMax"),hide_from_to:r.data("hideFromTo"),prefix:r.data("prefix"),postfix:r.data("postfix"),max_postfix:r.data("maxPostfix"),decorate_both:r.data("decorateBoth"),values_separator:r.data("valuesSeparator"),input_values_separator:r.data("inputValuesSeparator"),disable:r.data("disable"),block:r.data("block"),extra_classes:r.data("extraClasses")}).values=n.values&&n.values.split(","),n)n.hasOwnProperty(o)&&(n[o]!==c&&""!==n[o]||delete n[o]);a!==c&&""!==a&&((a=a.split(n.input_values_separator||t.input_values_separator||";"))[0]&&a[0]==+a[0]&&(a[0]=+a[0]),a[1]&&a[1]==+a[1]&&(a[1]=+a[1]),t&&t.values&&t.values.length?(s.from=a[0]&&t.values.indexOf(a[0]),s.to=a[1]&&t.values.indexOf(a[1])):(s.from=a[0]&&+a[0],s.to=a[1]&&+a[1])),l.extend(s,t),l.extend(s,n),this.options=s,this.update_check={},this.validate(),this.result={input:this.$cache.input,slider:null,min:this.options.min,max:this.options.max,from:this.options.from,from_percent:0,from_value:null,to:this.options.to,to_percent:0,to_value:null},this.init()}Function.prototype.bind||(Function.prototype.bind=function(s){var n=this,o=[].slice;if("function"!=typeof n)throw new TypeError;var r=o.call(arguments,1),a=function(){if(this instanceof a){var e=function(){};e.prototype=n.prototype;var t=new e,i=n.apply(t,r.concat(o.call(arguments)));return Object(i)===i?i:t}return n.apply(s,r.concat(o.call(arguments)))};return a}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e,t){var i;if(null==this)throw new TypeError('"this" is null or not defined');var s=Object(this),n=s.length>>>0;if(0==n)return-1;var o=+t||0;if(Math.abs(o)===1/0&&(o=0),n<=o)return-1;for(i=Math.max(0<=o?o:n-Math.abs(o),0);i<n;){if(i in s&&s[i]===e)return i;i++}return-1}),o.prototype={init:function(e){this.no_diapason=!1,this.coords.p_step=this.convertToPercent(this.options.step,!0),this.target="base",this.toggleInput(),this.append(),this.setMinMax(),e?(this.force_redraw=!0,this.calc(!0),this.callOnUpdate()):(this.force_redraw=!0,this.calc(!0),this.callOnStart()),this.updateScene()},append:function(){var e='<span class="irs irs--'+this.options.skin+" js-irs-"+this.plugin_count+" "+this.options.extra_classes+'"></span>';this.$cache.input.before(e),this.$cache.input.prop("readonly",!0),this.$cache.cont=this.$cache.input.prev(),this.result.slider=this.$cache.cont,this.$cache.cont.html('<span class="irs"><span class="irs-line" tabindex="0"></span><span class="irs-min">0</span><span class="irs-max">1</span><span class="irs-from">0</span><span class="irs-to">0</span><span class="irs-single">0</span></span><span class="irs-grid"></span>'),this.$cache.rs=this.$cache.cont.find(".irs"),this.$cache.min=this.$cache.cont.find(".irs-min"),this.$cache.max=this.$cache.cont.find(".irs-max"),this.$cache.from=this.$cache.cont.find(".irs-from"),this.$cache.to=this.$cache.cont.find(".irs-to"),this.$cache.single=this.$cache.cont.find(".irs-single"),this.$cache.line=this.$cache.cont.find(".irs-line"),this.$cache.grid=this.$cache.cont.find(".irs-grid"),"single"===this.options.type?(this.$cache.cont.append('<span class="irs-bar irs-bar--single"></span><span class="irs-shadow shadow-single"></span><span class="irs-handle single"><i></i><i></i><i></i></span>'),this.$cache.bar=this.$cache.cont.find(".irs-bar"),this.$cache.edge=this.$cache.cont.find(".irs-bar-edge"),this.$cache.s_single=this.$cache.cont.find(".single"),this.$cache.from[0].style.visibility="hidden",this.$cache.to[0].style.visibility="hidden",this.$cache.shad_single=this.$cache.cont.find(".shadow-single")):(this.$cache.cont.append('<span class="irs-bar"></span><span class="irs-shadow shadow-from"></span><span class="irs-shadow shadow-to"></span><span class="irs-handle from"><i></i><i></i><i></i></span><span class="irs-handle to"><i></i><i></i><i></i></span>'),this.$cache.bar=this.$cache.cont.find(".irs-bar"),this.$cache.s_from=this.$cache.cont.find(".from"),this.$cache.s_to=this.$cache.cont.find(".to"),this.$cache.shad_from=this.$cache.cont.find(".shadow-from"),this.$cache.shad_to=this.$cache.cont.find(".shadow-to"),this.setTopHandler()),this.options.hide_from_to&&(this.$cache.from[0].style.display="none",this.$cache.to[0].style.display="none",this.$cache.single[0].style.display="none"),this.appendGrid(),this.options.disable?(this.appendDisableMask(),this.$cache.input[0].disabled=!0):(this.$cache.input[0].disabled=!1,this.removeDisableMask(),this.bindEvents()),this.options.disable||(this.options.block?this.appendDisableMask():this.removeDisableMask()),this.options.drag_interval&&(this.$cache.bar[0].style.cursor="ew-resize")},setTopHandler:function(){var e=this.options.min,t=this.options.max,i=this.options.from,s=this.options.to;e<i&&s===t?this.$cache.s_from.addClass("type_last"):s<t&&this.$cache.s_to.addClass("type_last")},changeLevel:function(e){switch(e){case"single":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_single_fake),this.$cache.s_single.addClass("state_hover");break;case"from":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_from_fake),this.$cache.s_from.addClass("state_hover"),this.$cache.s_from.addClass("type_last"),this.$cache.s_to.removeClass("type_last");break;case"to":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_to_fake),this.$cache.s_to.addClass("state_hover"),this.$cache.s_to.addClass("type_last"),this.$cache.s_from.removeClass("type_last");break;case"both":this.coords.p_gap_left=this.toFixed(this.coords.p_pointer-this.coords.p_from_fake),this.coords.p_gap_right=this.toFixed(this.coords.p_to_fake-this.coords.p_pointer),this.$cache.s_to.removeClass("type_last"),this.$cache.s_from.removeClass("type_last")}},appendDisableMask:function(){this.$cache.cont.append('<span class="irs-disable-mask"></span>'),this.$cache.cont.addClass("irs-disabled")},removeDisableMask:function(){this.$cache.cont.remove(".irs-disable-mask"),this.$cache.cont.removeClass("irs-disabled")},remove:function(){this.$cache.cont.remove(),this.$cache.cont=null,this.$cache.line.off("keydown.irs_"+this.plugin_count),this.$cache.body.off("touchmove.irs_"+this.plugin_count),this.$cache.body.off("mousemove.irs_"+this.plugin_count),this.$cache.win.off("touchend.irs_"+this.plugin_count),this.$cache.win.off("mouseup.irs_"+this.plugin_count),n&&(this.$cache.body.off("mouseup.irs_"+this.plugin_count),this.$cache.body.off("mouseleave.irs_"+this.plugin_count)),this.$cache.grid_labels=[],this.coords.big=[],this.coords.big_w=[],this.coords.big_p=[],this.coords.big_x=[],cancelAnimationFrame(this.raf_id)},bindEvents:function(){this.no_diapason||(this.$cache.body.on("touchmove.irs_"+this.plugin_count,this.pointerMove.bind(this)),this.$cache.body.on("mousemove.irs_"+this.plugin_count,this.pointerMove.bind(this)),this.$cache.win.on("touchend.irs_"+this.plugin_count,this.pointerUp.bind(this)),this.$cache.win.on("mouseup.irs_"+this.plugin_count,this.pointerUp.bind(this)),this.$cache.line.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.line.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.line.on("focus.irs_"+this.plugin_count,this.pointerFocus.bind(this)),this.options.drag_interval&&"double"===this.options.type?(this.$cache.bar.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"both")),this.$cache.bar.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"both"))):(this.$cache.bar.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.bar.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click"))),"single"===this.options.type?(this.$cache.single.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"single")),this.$cache.s_single.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"single")),this.$cache.shad_single.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.single.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"single")),this.$cache.s_single.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"single")),this.$cache.edge.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.shad_single.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click"))):(this.$cache.single.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,null)),this.$cache.single.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,null)),this.$cache.from.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"from")),this.$cache.s_from.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"from")),this.$cache.to.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"to")),this.$cache.s_to.on("touchstart.irs_"+this.plugin_count,this.pointerDown.bind(this,"to")),this.$cache.shad_from.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.shad_to.on("touchstart.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.from.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"from")),this.$cache.s_from.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"from")),this.$cache.to.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"to")),this.$cache.s_to.on("mousedown.irs_"+this.plugin_count,this.pointerDown.bind(this,"to")),this.$cache.shad_from.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click")),this.$cache.shad_to.on("mousedown.irs_"+this.plugin_count,this.pointerClick.bind(this,"click"))),this.options.keyboard&&this.$cache.line.on("keydown.irs_"+this.plugin_count,this.key.bind(this,"keyboard")),n&&(this.$cache.body.on("mouseup.irs_"+this.plugin_count,this.pointerUp.bind(this)),this.$cache.body.on("mouseleave.irs_"+this.plugin_count,this.pointerUp.bind(this))))},pointerFocus:function(e){var t,i;this.target||(t=(i="single"===this.options.type?this.$cache.single:this.$cache.from).offset().left,t+=i.width()/2-1,this.pointerClick("single",{preventDefault:function(){},pageX:t}))},pointerMove:function(e){if(this.dragging){var t=e.pageX||e.originalEvent.touches&&e.originalEvent.touches[0].pageX;this.coords.x_pointer=t-this.coords.x_gap,this.calc()}},pointerUp:function(e){this.current_plugin===this.plugin_count&&this.is_active&&(this.is_active=!1,this.$cache.cont.find(".state_hover").removeClass("state_hover"),this.force_redraw=!0,n&&l("*").prop("unselectable",!1),this.updateScene(),this.restoreOriginalMinInterval(),(l.contains(this.$cache.cont[0],e.target)||this.dragging)&&this.callOnFinish(),this.dragging=!1)},pointerDown:function(e,t){t.preventDefault();var i=t.pageX||t.originalEvent.touches&&t.originalEvent.touches[0].pageX;2!==t.button&&("both"===e&&this.setTempMinInterval(),e=e||this.target||"from",this.current_plugin=this.plugin_count,this.target=e,this.is_active=!0,this.dragging=!0,this.coords.x_gap=this.$cache.rs.offset().left,this.coords.x_pointer=i-this.coords.x_gap,this.calcPointerPercent(),this.changeLevel(e),n&&l("*").prop("unselectable",!0),this.$cache.line.trigger("focus"),this.updateScene())},pointerClick:function(e,t){t.preventDefault();var i=t.pageX||t.originalEvent.touches&&t.originalEvent.touches[0].pageX;2!==t.button&&(this.current_plugin=this.plugin_count,this.target=e,this.is_click=!0,this.coords.x_gap=this.$cache.rs.offset().left,this.coords.x_pointer=+(i-this.coords.x_gap).toFixed(),this.force_redraw=!0,this.calc(),this.$cache.line.trigger("focus"))},key:function(e,t){if(!(this.current_plugin!==this.plugin_count||t.altKey||t.ctrlKey||t.shiftKey||t.metaKey)){switch(t.which){case 83:case 65:case 40:case 37:t.preventDefault(),this.moveByKey(!1);break;case 87:case 68:case 38:case 39:t.preventDefault(),this.moveByKey(!0)}return!0}},moveByKey:function(e){var t=this.coords.p_pointer,i=(this.options.max-this.options.min)/100;i=this.options.step/i,e?t+=i:t-=i,this.coords.x_pointer=this.toFixed(this.coords.w_rs/100*t),this.is_key=!0,this.calc()},setMinMax:function(){if(this.options){if(this.options.hide_min_max)return this.$cache.min[0].style.display="none",void(this.$cache.max[0].style.display="none");if(this.options.values.length)this.$cache.min.html(this.decorate(this.options.p_values[this.options.min])),this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]));else{var e=this._prettify(this.options.min),t=this._prettify(this.options.max);this.result.min_pretty=e,this.result.max_pretty=t,this.$cache.min.html(this.decorate(e,this.options.min)),this.$cache.max.html(this.decorate(t,this.options.max))}this.labels.w_min=this.$cache.min.outerWidth(!1),this.labels.w_max=this.$cache.max.outerWidth(!1)}},setTempMinInterval:function(){var e=this.result.to-this.result.from;null===this.old_min_interval&&(this.old_min_interval=this.options.min_interval),this.options.min_interval=e},restoreOriginalMinInterval:function(){null!==this.old_min_interval&&(this.options.min_interval=this.old_min_interval,this.old_min_interval=null)},calc:function(e){if(this.options&&(this.calc_count++,10!==this.calc_count&&!e||(this.calc_count=0,this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.calcHandlePercent()),this.coords.w_rs)){this.calcPointerPercent();var t=this.getHandleX();switch("both"===this.target&&(this.coords.p_gap=0,t=this.getHandleX()),"click"===this.target&&(this.coords.p_gap=this.coords.p_handle/2,t=this.getHandleX(),this.options.drag_interval?this.target="both_one":this.target=this.chooseHandle(t)),this.target){case"base":var i=(this.options.max-this.options.min)/100,s=(this.result.from-this.options.min)/i,n=(this.result.to-this.options.min)/i;this.coords.p_single_real=this.toFixed(s),this.coords.p_from_real=this.toFixed(s),this.coords.p_to_real=this.toFixed(n),this.coords.p_single_real=this.checkDiapason(this.coords.p_single_real,this.options.from_min,this.options.from_max),this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max),this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max),this.coords.p_single_fake=this.convertToFakePercent(this.coords.p_single_real),this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real),this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real),this.target=null;break;case"single":if(this.options.from_fixed)break;this.coords.p_single_real=this.convertToRealPercent(t),this.coords.p_single_real=this.calcWithStep(this.coords.p_single_real),this.coords.p_single_real=this.checkDiapason(this.coords.p_single_real,this.options.from_min,this.options.from_max),this.coords.p_single_fake=this.convertToFakePercent(this.coords.p_single_real);break;case"from":if(this.options.from_fixed)break;this.coords.p_from_real=this.convertToRealPercent(t),this.coords.p_from_real=this.calcWithStep(this.coords.p_from_real),this.coords.p_from_real>this.coords.p_to_real&&(this.coords.p_from_real=this.coords.p_to_real),this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max),this.coords.p_from_real=this.checkMinInterval(this.coords.p_from_real,this.coords.p_to_real,"from"),this.coords.p_from_real=this.checkMaxInterval(this.coords.p_from_real,this.coords.p_to_real,"from"),this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real);break;case"to":if(this.options.to_fixed)break;this.coords.p_to_real=this.convertToRealPercent(t),this.coords.p_to_real=this.calcWithStep(this.coords.p_to_real),this.coords.p_to_real<this.coords.p_from_real&&(this.coords.p_to_real=this.coords.p_from_real),this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max),this.coords.p_to_real=this.checkMinInterval(this.coords.p_to_real,this.coords.p_from_real,"to"),this.coords.p_to_real=this.checkMaxInterval(this.coords.p_to_real,this.coords.p_from_real,"to"),this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real);break;case"both":if(this.options.from_fixed||this.options.to_fixed)break;t=this.toFixed(t+.001*this.coords.p_handle),this.coords.p_from_real=this.convertToRealPercent(t)-this.coords.p_gap_left,this.coords.p_from_real=this.calcWithStep(this.coords.p_from_real),this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max),this.coords.p_from_real=this.checkMinInterval(this.coords.p_from_real,this.coords.p_to_real,"from"),this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real),this.coords.p_to_real=this.convertToRealPercent(t)+this.coords.p_gap_right,this.coords.p_to_real=this.calcWithStep(this.coords.p_to_real),this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max),this.coords.p_to_real=this.checkMinInterval(this.coords.p_to_real,this.coords.p_from_real,"to"),this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real);break;case"both_one":if(this.options.from_fixed||this.options.to_fixed)break;var o=this.convertToRealPercent(t),r=this.result.from_percent,a=this.result.to_percent-r,l=a/2,d=o-l,h=o+l;d<0&&(h=(d=0)+a),100<h&&(d=(h=100)-a),this.coords.p_from_real=this.calcWithStep(d),this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max),this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real),this.coords.p_to_real=this.calcWithStep(h),this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max),this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real)}"single"===this.options.type?(this.coords.p_bar_x=this.coords.p_handle/2,this.coords.p_bar_w=this.coords.p_single_fake,this.result.from_percent=this.coords.p_single_real,this.result.from=this.convertToValue(this.coords.p_single_real),this.result.from_pretty=this._prettify(this.result.from),this.options.values.length&&(this.result.from_value=this.options.values[this.result.from])):(this.coords.p_bar_x=this.toFixed(this.coords.p_from_fake+this.coords.p_handle/2),this.coords.p_bar_w=this.toFixed(this.coords.p_to_fake-this.coords.p_from_fake),this.result.from_percent=this.coords.p_from_real,this.result.from=this.convertToValue(this.coords.p_from_real),this.result.from_pretty=this._prettify(this.result.from),this.result.to_percent=this.coords.p_to_real,this.result.to=this.convertToValue(this.coords.p_to_real),this.result.to_pretty=this._prettify(this.result.to),this.options.values.length&&(this.result.from_value=this.options.values[this.result.from],this.result.to_value=this.options.values[this.result.to])),this.calcMinMax(),this.calcLabels()}},calcPointerPercent:function(){this.coords.w_rs?(this.coords.x_pointer<0||isNaN(this.coords.x_pointer)?this.coords.x_pointer=0:this.coords.x_pointer>this.coords.w_rs&&(this.coords.x_pointer=this.coords.w_rs),this.coords.p_pointer=this.toFixed(this.coords.x_pointer/this.coords.w_rs*100)):this.coords.p_pointer=0},convertToRealPercent:function(e){return e/(100-this.coords.p_handle)*100},convertToFakePercent:function(e){return e/100*(100-this.coords.p_handle)},getHandleX:function(){var e=100-this.coords.p_handle,t=this.toFixed(this.coords.p_pointer-this.coords.p_gap);return t<0?t=0:e<t&&(t=e),t},calcHandlePercent:function(){"single"===this.options.type?this.coords.w_handle=this.$cache.s_single.outerWidth(!1):this.coords.w_handle=this.$cache.s_from.outerWidth(!1),this.coords.p_handle=this.toFixed(this.coords.w_handle/this.coords.w_rs*100)},chooseHandle:function(e){return"single"===this.options.type?"single":this.coords.p_from_real+(this.coords.p_to_real-this.coords.p_from_real)/2<=e?this.options.to_fixed?"from":"to":this.options.from_fixed?"to":"from"},calcMinMax:function(){this.coords.w_rs&&(this.labels.p_min=this.labels.w_min/this.coords.w_rs*100,this.labels.p_max=this.labels.w_max/this.coords.w_rs*100)},calcLabels:function(){this.coords.w_rs&&!this.options.hide_from_to&&("single"===this.options.type?(this.labels.w_single=this.$cache.single.outerWidth(!1),this.labels.p_single_fake=this.labels.w_single/this.coords.w_rs*100,this.labels.p_single_left=this.coords.p_single_fake+this.coords.p_handle/2-this.labels.p_single_fake/2):(this.labels.w_from=this.$cache.from.outerWidth(!1),this.labels.p_from_fake=this.labels.w_from/this.coords.w_rs*100,this.labels.p_from_left=this.coords.p_from_fake+this.coords.p_handle/2-this.labels.p_from_fake/2,this.labels.p_from_left=this.toFixed(this.labels.p_from_left),this.labels.p_from_left=this.checkEdges(this.labels.p_from_left,this.labels.p_from_fake),this.labels.w_to=this.$cache.to.outerWidth(!1),this.labels.p_to_fake=this.labels.w_to/this.coords.w_rs*100,this.labels.p_to_left=this.coords.p_to_fake+this.coords.p_handle/2-this.labels.p_to_fake/2,this.labels.p_to_left=this.toFixed(this.labels.p_to_left),this.labels.p_to_left=this.checkEdges(this.labels.p_to_left,this.labels.p_to_fake),this.labels.w_single=this.$cache.single.outerWidth(!1),this.labels.p_single_fake=this.labels.w_single/this.coords.w_rs*100,this.labels.p_single_left=(this.labels.p_from_left+this.labels.p_to_left+this.labels.p_to_fake)/2-this.labels.p_single_fake/2,this.labels.p_single_left=this.toFixed(this.labels.p_single_left)),this.labels.p_single_left=this.checkEdges(this.labels.p_single_left,this.labels.p_single_fake))},updateScene:function(){this.raf_id&&(cancelAnimationFrame(this.raf_id),this.raf_id=null),clearTimeout(this.update_tm),this.update_tm=null,this.options&&(this.drawHandles(),this.is_active?this.raf_id=requestAnimationFrame(this.updateScene.bind(this)):this.update_tm=setTimeout(this.updateScene.bind(this),300))},drawHandles:function(){this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.coords.w_rs&&(this.coords.w_rs!==this.coords.w_rs_old&&(this.target="base",this.is_resize=!0),this.coords.w_rs===this.coords.w_rs_old&&!this.force_redraw||(this.setMinMax(),this.calc(!0),this.drawLabels(),this.options.grid&&(this.calcGridMargin(),this.calcGridLabels()),this.force_redraw=!0,this.coords.w_rs_old=this.coords.w_rs,this.drawShadow()),this.coords.w_rs&&(this.dragging||this.force_redraw||this.is_key)&&((this.old_from!==this.result.from||this.old_to!==this.result.to||this.force_redraw||this.is_key)&&(this.drawLabels(),this.$cache.bar[0].style.left=this.coords.p_bar_x+"%",this.$cache.bar[0].style.width=this.coords.p_bar_w+"%","single"===this.options.type?(this.$cache.bar[0].style.left=0,this.$cache.bar[0].style.width=this.coords.p_bar_w+this.coords.p_bar_x+"%",this.$cache.s_single[0].style.left=this.coords.p_single_fake+"%"):(this.$cache.s_from[0].style.left=this.coords.p_from_fake+"%",this.$cache.s_to[0].style.left=this.coords.p_to_fake+"%",this.old_from===this.result.from&&!this.force_redraw||(this.$cache.from[0].style.left=this.labels.p_from_left+"%"),this.old_to===this.result.to&&!this.force_redraw||(this.$cache.to[0].style.left=this.labels.p_to_left+"%")),this.$cache.single[0].style.left=this.labels.p_single_left+"%",this.writeToInput(),this.old_from===this.result.from&&this.old_to===this.result.to||this.is_start||(this.$cache.input.trigger("change"),this.$cache.input.trigger("input")),this.old_from=this.result.from,this.old_to=this.result.to,this.is_resize||this.is_update||this.is_start||this.is_finish||this.callOnChange(),(this.is_key||this.is_click)&&(this.is_key=!1,this.is_click=!1,this.callOnFinish()),this.is_update=!1,this.is_resize=!1,this.is_finish=!1),this.is_start=!1,this.is_key=!1,this.is_click=!1,this.force_redraw=!1))},drawLabels:function(){if(this.options){var e,t,i,s,n,o=this.options.values.length,r=this.options.p_values;if(!this.options.hide_from_to)if("single"===this.options.type)e=o?this.decorate(r[this.result.from]):(s=this._prettify(this.result.from),this.decorate(s,this.result.from)),this.$cache.single.html(e),this.calcLabels(),this.labels.p_single_left<this.labels.p_min+1?this.$cache.min[0].style.visibility="hidden":this.$cache.min[0].style.visibility="visible",this.labels.p_single_left+this.labels.p_single_fake>100-this.labels.p_max-1?this.$cache.max[0].style.visibility="hidden":this.$cache.max[0].style.visibility="visible";else{i=o?(this.options.decorate_both?(e=this.decorate(r[this.result.from]),e+=this.options.values_separator,e+=this.decorate(r[this.result.to])):e=this.decorate(r[this.result.from]+this.options.values_separator+r[this.result.to]),t=this.decorate(r[this.result.from]),this.decorate(r[this.result.to])):(s=this._prettify(this.result.from),n=this._prettify(this.result.to),this.options.decorate_both?(e=this.decorate(s,this.result.from),e+=this.options.values_separator,e+=this.decorate(n,this.result.to)):e=this.decorate(s+this.options.values_separator+n,this.result.to),t=this.decorate(s,this.result.from),this.decorate(n,this.result.to)),this.$cache.single.html(e),this.$cache.from.html(t),this.$cache.to.html(i),this.calcLabels();var a=Math.min(this.labels.p_single_left,this.labels.p_from_left),l=this.labels.p_single_left+this.labels.p_single_fake,d=this.labels.p_to_left+this.labels.p_to_fake,h=Math.max(l,d);this.labels.p_from_left+this.labels.p_from_fake>=this.labels.p_to_left?(this.$cache.from[0].style.visibility="hidden",this.$cache.to[0].style.visibility="hidden",this.$cache.single[0].style.visibility="visible",h=this.result.from===this.result.to?("from"===this.target?this.$cache.from[0].style.visibility="visible":"to"===this.target?this.$cache.to[0].style.visibility="visible":this.target||(this.$cache.from[0].style.visibility="visible"),this.$cache.single[0].style.visibility="hidden",d):(this.$cache.from[0].style.visibility="hidden",this.$cache.to[0].style.visibility="hidden",this.$cache.single[0].style.visibility="visible",Math.max(l,d))):(this.$cache.from[0].style.visibility="visible",this.$cache.to[0].style.visibility="visible",this.$cache.single[0].style.visibility="hidden"),a<this.labels.p_min+1?this.$cache.min[0].style.visibility="hidden":this.$cache.min[0].style.visibility="visible",h>100-this.labels.p_max-1?this.$cache.max[0].style.visibility="hidden":this.$cache.max[0].style.visibility="visible"}}},drawShadow:function(){var e,t,i,s,n=this.options,o=this.$cache,r="number"==typeof n.from_min&&!isNaN(n.from_min),a="number"==typeof n.from_max&&!isNaN(n.from_max),l="number"==typeof n.to_min&&!isNaN(n.to_min),d="number"==typeof n.to_max&&!isNaN(n.to_max);"single"===n.type?n.from_shadow&&(r||a)?(e=this.convertToPercent(r?n.from_min:n.min),t=this.convertToPercent(a?n.from_max:n.max)-e,e=this.toFixed(e-this.coords.p_handle/100*e),t=this.toFixed(t-this.coords.p_handle/100*t),e+=this.coords.p_handle/2,o.shad_single[0].style.display="block",o.shad_single[0].style.left=e+"%",o.shad_single[0].style.width=t+"%"):o.shad_single[0].style.display="none":(n.from_shadow&&(r||a)?(e=this.convertToPercent(r?n.from_min:n.min),t=this.convertToPercent(a?n.from_max:n.max)-e,e=this.toFixed(e-this.coords.p_handle/100*e),t=this.toFixed(t-this.coords.p_handle/100*t),e+=this.coords.p_handle/2,o.shad_from[0].style.display="block",o.shad_from[0].style.left=e+"%",o.shad_from[0].style.width=t+"%"):o.shad_from[0].style.display="none",n.to_shadow&&(l||d)?(i=this.convertToPercent(l?n.to_min:n.min),s=this.convertToPercent(d?n.to_max:n.max)-i,i=this.toFixed(i-this.coords.p_handle/100*i),s=this.toFixed(s-this.coords.p_handle/100*s),i+=this.coords.p_handle/2,o.shad_to[0].style.display="block",o.shad_to[0].style.left=i+"%",o.shad_to[0].style.width=s+"%"):o.shad_to[0].style.display="none")},writeToInput:function(){"single"===this.options.type?(this.options.values.length?this.$cache.input.prop("value",this.result.from_value):this.$cache.input.prop("value",this.result.from),this.$cache.input.data("from",this.result.from)):(this.options.values.length?this.$cache.input.prop("value",this.result.from_value+this.options.input_values_separator+this.result.to_value):this.$cache.input.prop("value",this.result.from+this.options.input_values_separator+this.result.to),this.$cache.input.data("from",this.result.from),this.$cache.input.data("to",this.result.to))},callOnStart:function(){this.writeToInput(),this.options.onStart&&"function"==typeof this.options.onStart&&(this.options.scope?this.options.onStart.call(this.options.scope,this.result):this.options.onStart(this.result))},callOnChange:function(){this.writeToInput(),this.options.onChange&&"function"==typeof this.options.onChange&&(this.options.scope?this.options.onChange.call(this.options.scope,this.result):this.options.onChange(this.result))},callOnFinish:function(){this.writeToInput(),this.options.onFinish&&"function"==typeof this.options.onFinish&&(this.options.scope?this.options.onFinish.call(this.options.scope,this.result):this.options.onFinish(this.result))},callOnUpdate:function(){this.writeToInput(),this.options.onUpdate&&"function"==typeof this.options.onUpdate&&(this.options.scope?this.options.onUpdate.call(this.options.scope,this.result):this.options.onUpdate(this.result))},toggleInput:function(){this.$cache.input.toggleClass("irs-hidden-input"),this.has_tab_index?this.$cache.input.prop("tabindex",-1):this.$cache.input.removeProp("tabindex"),this.has_tab_index=!this.has_tab_index},convertToPercent:function(e,t){var i,s=this.options.max-this.options.min,n=s/100;return s?(i=(t?e:e-this.options.min)/n,this.toFixed(i)):(this.no_diapason=!0,0)},convertToValue:function(e){var t,i,s=this.options.min,n=this.options.max,o=s.toString().split(".")[1],r=n.toString().split(".")[1],a=0,l=0;if(0===e)return this.options.min;if(100===e)return this.options.max;o&&(a=t=o.length),r&&(a=i=r.length),t&&i&&(a=i<=t?t:i),s<0&&(s=+(s+(l=Math.abs(s))).toFixed(a),n=+(n+l).toFixed(a));var d,h=(n-s)/100*e+s,c=this.options.step.toString().split(".")[1];return h=c?+h.toFixed(c.length):(h/=this.options.step,+(h*=this.options.step).toFixed(0)),l&&(h-=l),(d=c?+h.toFixed(c.length):this.toFixed(h))<this.options.min?d=this.options.min:d>this.options.max&&(d=this.options.max),d},calcWithStep:function(e){var t=Math.round(e/this.coords.p_step)*this.coords.p_step;return 100<t&&(t=100),100===e&&(t=100),this.toFixed(t)},checkMinInterval:function(e,t,i){var s,n,o=this.options;return o.min_interval?(s=this.convertToValue(e),n=this.convertToValue(t),"from"===i?n-s<o.min_interval&&(s=n-o.min_interval):s-n<o.min_interval&&(s=n+o.min_interval),this.convertToPercent(s)):e},checkMaxInterval:function(e,t,i){var s,n,o=this.options;return o.max_interval?(s=this.convertToValue(e),n=this.convertToValue(t),"from"===i?n-s>o.max_interval&&(s=n-o.max_interval):s-n>o.max_interval&&(s=n+o.max_interval),this.convertToPercent(s)):e},checkDiapason:function(e,t,i){var s=this.convertToValue(e),n=this.options;return"number"!=typeof t&&(t=n.min),"number"!=typeof i&&(i=n.max),s<t&&(s=t),i<s&&(s=i),this.convertToPercent(s)},toFixed:function(e){return+e.toFixed(20)},_prettify:function(e){return this.options.prettify_enabled?this.options.prettify&&"function"==typeof this.options.prettify?this.options.prettify(e):this.prettify(e):e},prettify:function(e){return e.toString().replace(/(\d{1,3}(?=(?:\d\d\d)+(?!\d)))/g,"$1"+this.options.prettify_separator)},checkEdges:function(e,t){return this.options.force_edges&&(e<0?e=0:100-t<e&&(e=100-t)),this.toFixed(e)},validate:function(){var e,t,i=this.options,s=this.result,n=i.values,o=n.length;if("string"==typeof i.min&&(i.min=+i.min),"string"==typeof i.max&&(i.max=+i.max),"string"==typeof i.from&&(i.from=+i.from),"string"==typeof i.to&&(i.to=+i.to),"string"==typeof i.step&&(i.step=+i.step),"string"==typeof i.from_min&&(i.from_min=+i.from_min),"string"==typeof i.from_max&&(i.from_max=+i.from_max),"string"==typeof i.to_min&&(i.to_min=+i.to_min),"string"==typeof i.to_max&&(i.to_max=+i.to_max),"string"==typeof i.grid_num&&(i.grid_num=+i.grid_num),i.max<i.min&&(i.max=i.min),o)for(i.p_values=[],i.min=0,i.max=o-1,i.step=1,i.grid_num=i.max,i.grid_snap=!0,t=0;t<o;t++)e=+n[t],e=isNaN(e)?n[t]:(n[t]=e,this._prettify(e)),i.p_values.push(e);"number"==typeof i.from&&!isNaN(i.from)||(i.from=i.min),"number"==typeof i.to&&!isNaN(i.to)||(i.to=i.max),"single"===i.type?(i.from<i.min&&(i.from=i.min),i.from>i.max&&(i.from=i.max)):(i.from<i.min&&(i.from=i.min),i.from>i.max&&(i.from=i.max),i.to<i.min&&(i.to=i.min),i.to>i.max&&(i.to=i.max),this.update_check.from&&(this.update_check.from!==i.from&&i.from>i.to&&(i.from=i.to),this.update_check.to!==i.to&&i.to<i.from&&(i.to=i.from)),i.from>i.to&&(i.from=i.to),i.to<i.from&&(i.to=i.from)),("number"!=typeof i.step||isNaN(i.step)||!i.step||i.step<0)&&(i.step=1),"number"==typeof i.from_min&&i.from<i.from_min&&(i.from=i.from_min),"number"==typeof i.from_max&&i.from>i.from_max&&(i.from=i.from_max),"number"==typeof i.to_min&&i.to<i.to_min&&(i.to=i.to_min),"number"==typeof i.to_max&&i.from>i.to_max&&(i.to=i.to_max),s&&(s.min!==i.min&&(s.min=i.min),s.max!==i.max&&(s.max=i.max),(s.from<s.min||s.from>s.max)&&(s.from=i.from),(s.to<s.min||s.to>s.max)&&(s.to=i.to)),("number"!=typeof i.min_interval||isNaN(i.min_interval)||!i.min_interval||i.min_interval<0)&&(i.min_interval=0),("number"!=typeof i.max_interval||isNaN(i.max_interval)||!i.max_interval||i.max_interval<0)&&(i.max_interval=0),i.min_interval&&i.min_interval>i.max-i.min&&(i.min_interval=i.max-i.min),i.max_interval&&i.max_interval>i.max-i.min&&(i.max_interval=i.max-i.min)},decorate:function(e,t){var i="",s=this.options;return s.prefix&&(i+=s.prefix),i+=e,s.max_postfix&&(s.values.length&&e===s.p_values[s.max]||t===s.max)&&(i+=s.max_postfix,s.postfix&&(i+=" ")),s.postfix&&(i+=s.postfix),i},updateFrom:function(){this.result.from=this.options.from,this.result.from_percent=this.convertToPercent(this.result.from),this.result.from_pretty=this._prettify(this.result.from),this.options.values&&(this.result.from_value=this.options.values[this.result.from])},updateTo:function(){this.result.to=this.options.to,this.result.to_percent=this.convertToPercent(this.result.to),this.result.to_pretty=this._prettify(this.result.to),this.options.values&&(this.result.to_value=this.options.values[this.result.to])},updateResult:function(){this.result.min=this.options.min,this.result.max=this.options.max,this.updateFrom(),this.updateTo()},appendGrid:function(){if(this.options.grid){var e,t,i,s,n,o,r=this.options,a=r.max-r.min,l=r.grid_num,d=0,h=4,c="";for(this.calcGridMargin(),r.grid_snap&&(l=a/r.step),50<l&&(l=50),i=this.toFixed(100/l),4<l&&(h=3),7<l&&(h=2),14<l&&(h=1),28<l&&(h=0),e=0;e<l+1;e++){for(s=h,100<(d=this.toFixed(i*e))&&(d=100),n=((this.coords.big[e]=d)-i*(e-1))/(s+1),t=1;t<=s&&0!==d;t++)c+='<span class="irs-grid-pol small" style="left: '+this.toFixed(d-n*t)+'%"></span>';c+='<span class="irs-grid-pol" style="left: '+d+'%"></span>',o=this.convertToValue(d),c+='<span class="irs-grid-text js-grid-text-'+e+'" style="left: '+d+'%">'+(o=r.values.length?r.p_values[o]:this._prettify(o))+"</span>"}this.coords.big_num=Math.ceil(l+1),this.$cache.cont.addClass("irs-with-grid"),this.$cache.grid.html(c),this.cacheGridLabels()}},cacheGridLabels:function(){var e,t,i=this.coords.big_num;for(t=0;t<i;t++)e=this.$cache.grid.find(".js-grid-text-"+t),this.$cache.grid_labels.push(e);this.calcGridLabels()},calcGridLabels:function(){var e,t,i=[],s=[],n=this.coords.big_num;for(e=0;e<n;e++)this.coords.big_w[e]=this.$cache.grid_labels[e].outerWidth(!1),this.coords.big_p[e]=this.toFixed(this.coords.big_w[e]/this.coords.w_rs*100),this.coords.big_x[e]=this.toFixed(this.coords.big_p[e]/2),i[e]=this.toFixed(this.coords.big[e]-this.coords.big_x[e]),s[e]=this.toFixed(i[e]+this.coords.big_p[e]);for(this.options.force_edges&&(i[0]<-this.coords.grid_gap&&(i[0]=-this.coords.grid_gap,s[0]=this.toFixed(i[0]+this.coords.big_p[0]),this.coords.big_x[0]=this.coords.grid_gap),s[n-1]>100+this.coords.grid_gap&&(s[n-1]=100+this.coords.grid_gap,i[n-1]=this.toFixed(s[n-1]-this.coords.big_p[n-1]),this.coords.big_x[n-1]=this.toFixed(this.coords.big_p[n-1]-this.coords.grid_gap))),this.calcGridCollision(2,i,s),this.calcGridCollision(4,i,s),e=0;e<n;e++)t=this.$cache.grid_labels[e][0],this.coords.big_x[e]!==Number.POSITIVE_INFINITY&&(t.style.marginLeft=-this.coords.big_x[e]+"%")},calcGridCollision:function(e,t,i){var s,n,o,r=this.coords.big_num;for(s=0;s<r&&!(r<=(n=s+e/2));s+=e)o=this.$cache.grid_labels[n][0],i[s]<=t[n]?o.style.visibility="visible":o.style.visibility="hidden"},calcGridMargin:function(){this.options.grid_margin&&(this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.coords.w_rs&&("single"===this.options.type?this.coords.w_handle=this.$cache.s_single.outerWidth(!1):this.coords.w_handle=this.$cache.s_from.outerWidth(!1),this.coords.p_handle=this.toFixed(this.coords.w_handle/this.coords.w_rs*100),this.coords.grid_gap=this.toFixed(this.coords.p_handle/2-.1),this.$cache.grid[0].style.width=this.toFixed(100-this.coords.p_handle)+"%",this.$cache.grid[0].style.left=this.coords.grid_gap+"%"))},update:function(e){this.input&&(this.is_update=!0,this.options.from=this.result.from,this.options.to=this.result.to,this.update_check.from=this.result.from,this.update_check.to=this.result.to,this.options=l.extend(this.options,e),this.validate(),this.updateResult(e),this.toggleInput(),this.remove(),this.init(!0))},reset:function(){this.input&&(this.updateResult(),this.update())},destroy:function(){this.input&&(this.toggleInput(),this.$cache.input.prop("readonly",!1),l.data(this.input,"ionRangeSlider",null),this.remove(),this.input=null,this.options=null)}},l.fn.ionRangeSlider=function(e){return this.each(function(){l.data(this,"ionRangeSlider")||l.data(this,"ionRangeSlider",new o(this,e,s++))})},function(){for(var o=0,e=["ms","moz","webkit","o"],t=0;t<e.length&&!h.requestAnimationFrame;++t)h.requestAnimationFrame=h[e[t]+"RequestAnimationFrame"],h.cancelAnimationFrame=h[e[t]+"CancelAnimationFrame"]||h[e[t]+"CancelRequestAnimationFrame"];h.requestAnimationFrame||(h.requestAnimationFrame=function(e,t){var i=(new Date).getTime(),s=Math.max(0,16-(i-o)),n=h.setTimeout(function(){e(i+s)},s);return o=i+s,n}),h.cancelAnimationFrame||(h.cancelAnimationFrame=function(e){clearTimeout(e)})}()}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(d){"use strict";var n,r=window.Slick||{};n=0,(r=function(e,t){var i,s=this;s.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(e),appendDots:d(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return d('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},s.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(s,s.initials),s.activeBreakpoint=null,s.animType=null,s.animProp=null,s.breakpoints=[],s.breakpointSettings=[],s.cssTransitions=!1,s.focussed=!1,s.interrupted=!1,s.hidden="hidden",s.paused=!0,s.positionProp=null,s.respondTo=null,s.rowCount=1,s.shouldClick=!0,s.$slider=d(e),s.$slidesCache=null,s.transformType=null,s.transitionType=null,s.visibilityChange="visibilitychange",s.windowWidth=0,s.windowTimer=null,i=d(e).data("slick")||{},s.options=d.extend({},s.defaults,t,i),s.currentSlide=s.options.initialSlide,s.originalSettings=s.options,void 0!==document.mozHidden?(s.hidden="mozHidden",s.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(s.hidden="webkitHidden",s.visibilityChange="webkitvisibilitychange"),s.autoPlay=d.proxy(s.autoPlay,s),s.autoPlayClear=d.proxy(s.autoPlayClear,s),s.autoPlayIterator=d.proxy(s.autoPlayIterator,s),s.changeSlide=d.proxy(s.changeSlide,s),s.clickHandler=d.proxy(s.clickHandler,s),s.selectHandler=d.proxy(s.selectHandler,s),s.setPosition=d.proxy(s.setPosition,s),s.swipeHandler=d.proxy(s.swipeHandler,s),s.dragHandler=d.proxy(s.dragHandler,s),s.keyHandler=d.proxy(s.keyHandler,s),s.instanceUid=n++,s.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,s.registerBreakpoints(),s.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(e,t,i){var s=this;if("boolean"==typeof t)i=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?d(e).appendTo(s.$slideTrack):i?d(e).insertBefore(s.$slides.eq(t)):d(e).insertAfter(s.$slides.eq(t)):!0===i?d(e).prependTo(s.$slideTrack):d(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){d(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},r.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:t},e.options.speed)}},r.prototype.animateSlide=function(e,t){var i={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),d({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(e){e=Math.ceil(e),!1===s.options.vertical?i[s.animType]="translate("+e+"px, 0px)":i[s.animType]="translate(0px,"+e+"px)",s.$slideTrack.css(i)},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?i[s.animType]="translate3d("+e+"px, 0px, 0px)":i[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(i),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},r.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=d(e).not(this.$slider)),e},r.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=d(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},r.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},r.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},r.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=d(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=d(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var e,t,i=this;if(!0===i.options.dots){for(i.$slider.addClass("slick-dotted"),t=d("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)t.append(d("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=t.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){d(t).attr("data-slick-index",e).data("originalStyling",d(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?d('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),d("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},r.prototype.buildRows=function(){var e,t,i,s,n,o,r,a=this;if(s=document.createDocumentFragment(),o=a.$slider.children(),1<a.options.rows){for(r=a.options.slidesPerRow*a.options.rows,n=Math.ceil(o.length/r),e=0;e<n;e++){var l=document.createElement("div");for(t=0;t<a.options.rows;t++){var d=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var h=e*r+(t*a.options.slidesPerRow+i);o.get(h)&&d.appendChild(o.get(h))}l.appendChild(d)}s.appendChild(l)}a.$slider.empty().append(s),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(e,t){var i,s,n,o=this,r=!1,a=o.$slider.width(),l=window.innerWidth||d(window).width();if("window"===o.respondTo?n=l:"slider"===o.respondTo?n=a:"min"===o.respondTo&&(n=Math.min(l,a)),o.options.responsive&&o.options.responsive.length&&null!==o.options.responsive){for(i in s=null,o.breakpoints)o.breakpoints.hasOwnProperty(i)&&(!1===o.originalSettings.mobileFirst?n<o.breakpoints[i]&&(s=o.breakpoints[i]):n>o.breakpoints[i]&&(s=o.breakpoints[i]));null!==s?null!==o.activeBreakpoint&&s===o.activeBreakpoint&&!t||(o.activeBreakpoint=s,"unslick"===o.breakpointSettings[s]?o.unslick(s):(o.options=d.extend({},o.originalSettings,o.breakpointSettings[s]),!0===e&&(o.currentSlide=o.options.initialSlide),o.refresh(e)),r=s):null!==o.activeBreakpoint&&(o.activeBreakpoint=null,o.options=o.originalSettings,!0===e&&(o.currentSlide=o.options.initialSlide),o.refresh(e),r=s),e||!1===r||o.$slider.trigger("breakpoint",[o,r])}},r.prototype.changeSlide=function(e,t){var i,s,n=this,o=d(e.currentTarget);switch(o.is("a")&&e.preventDefault(),o.is("li")||(o=o.closest("li")),i=n.slideCount%n.options.slidesToScroll!=0?0:(n.slideCount-n.currentSlide)%n.options.slidesToScroll,e.data.message){case"previous":s=0==i?n.options.slidesToScroll:n.options.slidesToShow-i,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide-s,!1,t);break;case"next":s=0==i?n.options.slidesToScroll:i,n.slideCount>n.options.slidesToShow&&n.slideHandler(n.currentSlide+s,!1,t);break;case"index":var r=0===e.data.index?0:e.data.index||o.index()*n.options.slidesToScroll;n.slideHandler(n.checkNavigable(r),!1,t),o.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(e){var t,i;if(i=0,e>(t=this.getNavigableIndexes())[t.length-1])e=t[t.length-1];else for(var s in t){if(e<t[s]){e=i;break}i=t[s]}return e},r.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(d("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",d.proxy(e.interrupt,e,!0)).off("mouseleave.slick",d.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),d(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().off("click.slick",e.selectHandler),d(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),d(window).off("resize.slick.slick-"+e.instanceUid,e.resize),d("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),d(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},r.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.cleanUpRows=function(){var e;1<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},r.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},r.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),d(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},r.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},r.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},r.prototype.fadeSlideOut=function(e){var t=this;!1===t.cssTransitions?t.$slides.eq(e).animate({opacity:0,zIndex:t.options.zIndex-2},t.options.speed,t.options.easing):(t.applyTransition(e),t.$slides.eq(e).css({opacity:0,zIndex:t.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(e){var t=this;null!==e&&(t.$slidesCache=t.$slides,t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.filter(e).appendTo(t.$slideTrack),t.reinit())},r.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=d(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=t.is(":focus"),i.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var e=this,t=0,i=0,s=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++s;else for(;t<e.slideCount;)++s,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)s=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++s,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else s=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return s-1},r.prototype.getLeft=function(e){var t,i,s,n,o=this,r=0;return o.slideOffset=0,i=o.$slides.first().outerHeight(!0),!0===o.options.infinite?(o.slideCount>o.options.slidesToShow&&(o.slideOffset=o.slideWidth*o.options.slidesToShow*-1,n=-1,!0===o.options.vertical&&!0===o.options.centerMode&&(2===o.options.slidesToShow?n=-1.5:1===o.options.slidesToShow&&(n=-2)),r=i*o.options.slidesToShow*n),o.slideCount%o.options.slidesToScroll!=0&&e+o.options.slidesToScroll>o.slideCount&&o.slideCount>o.options.slidesToShow&&(r=e>o.slideCount?(o.slideOffset=(o.options.slidesToShow-(e-o.slideCount))*o.slideWidth*-1,(o.options.slidesToShow-(e-o.slideCount))*i*-1):(o.slideOffset=o.slideCount%o.options.slidesToScroll*o.slideWidth*-1,o.slideCount%o.options.slidesToScroll*i*-1))):e+o.options.slidesToShow>o.slideCount&&(o.slideOffset=(e+o.options.slidesToShow-o.slideCount)*o.slideWidth,r=(e+o.options.slidesToShow-o.slideCount)*i),o.slideCount<=o.options.slidesToShow&&(r=o.slideOffset=0),!0===o.options.centerMode&&o.slideCount<=o.options.slidesToShow?o.slideOffset=o.slideWidth*Math.floor(o.options.slidesToShow)/2-o.slideWidth*o.slideCount/2:!0===o.options.centerMode&&!0===o.options.infinite?o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)-o.slideWidth:!0===o.options.centerMode&&(o.slideOffset=0,o.slideOffset+=o.slideWidth*Math.floor(o.options.slidesToShow/2)),t=!1===o.options.vertical?e*o.slideWidth*-1+o.slideOffset:e*i*-1+r,!0===o.options.variableWidth&&(s=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow),t=!0===o.options.rtl?s[0]?-1*(o.$slideTrack.width()-s[0].offsetLeft-s.width()):0:s[0]?-1*s[0].offsetLeft:0,!0===o.options.centerMode&&(s=o.slideCount<=o.options.slidesToShow||!1===o.options.infinite?o.$slideTrack.children(".slick-slide").eq(e):o.$slideTrack.children(".slick-slide").eq(e+o.options.slidesToShow+1),t=!0===o.options.rtl?s[0]?-1*(o.$slideTrack.width()-s[0].offsetLeft-s.width()):0:s[0]?-1*s[0].offsetLeft:0,t+=(o.$list.width()-s.outerWidth())/2)),t},r.prototype.getOption=r.prototype.slickGetOption=function(e){return this.options[e]},r.prototype.getNavigableIndexes=function(){var e,t=this,i=0,s=0,n=[];for(e=!1===t.options.infinite?t.slideCount:(i=-1*t.options.slidesToScroll,s=-1*t.options.slidesToScroll,2*t.slideCount);i<e;)n.push(i),i=s+t.options.slidesToScroll,s+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;return n},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var i,s,n=this;return s=!0===n.options.centerMode?n.slideWidth*Math.floor(n.options.slidesToShow/2):0,!0===n.options.swipeToSlide?(n.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-s+d(t).outerWidth()/2>-1*n.swipeLeft)return i=t,!1}),Math.abs(d(i).attr("data-slick-index")-n.currentSlide)||1):n.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},r.prototype.init=function(e){var t=this;d(t.$slider).hasClass("slick-initialized")||(d(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},r.prototype.initADA=function(){var i=this,s=Math.ceil(i.slideCount/i.options.slidesToShow),n=i.getNavigableIndexes().filter(function(e){return 0<=e&&e<i.slideCount});i.$slides.add(i.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==i.$dots&&(i.$slides.not(i.$slideTrack.find(".slick-cloned")).each(function(e){var t=n.indexOf(e);d(this).attr({role:"tabpanel",id:"slick-slide"+i.instanceUid+e,tabindex:-1}),-1!==t&&d(this).attr({"aria-describedby":"slick-slide-control"+i.instanceUid+t})}),i.$dots.attr("role","tablist").find("li").each(function(e){var t=n[e];d(this).attr({role:"presentation"}),d(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+i.instanceUid+e,"aria-controls":"slick-slide"+i.instanceUid+t,"aria-label":e+1+" of "+s,"aria-selected":null,tabindex:"-1"})}).eq(i.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=i.currentSlide,t=e+i.options.slidesToShow;e<t;e++)i.$slides.eq(e).attr("tabindex",0);i.activateADA()},r.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},r.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(d("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&d("li",e.$dots).on("mouseenter.slick",d.proxy(e.interrupt,e,!0)).on("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",d.proxy(e.interrupt,e,!1)))},r.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),d(document).on(e.visibilityChange,d.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),d(window).on("orientationchange.slick.slick-"+e.instanceUid,d.proxy(e.orientationChange,e)),d(window).on("resize.slick.slick-"+e.instanceUid,d.proxy(e.resize,e)),d("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),d(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),d(e.setPosition)},r.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},r.prototype.keyHandler=function(e){var t=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===t.options.accessibility?t.changeSlide({data:{message:!0===t.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===t.options.accessibility&&t.changeSlide({data:{message:!0===t.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){function e(e){d("img[data-lazy]",e).each(function(){var e=d(this),t=d(this).attr("data-lazy"),i=d(this).attr("data-srcset"),s=d(this).attr("data-sizes")||o.$slider.attr("data-sizes"),n=document.createElement("img");n.onload=function(){e.animate({opacity:0},100,function(){i&&(e.attr("srcset",i),s&&e.attr("sizes",s)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),o.$slider.trigger("lazyLoaded",[o,e,t])})},n.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),o.$slider.trigger("lazyLoadError",[o,e,t])},n.src=t})}var t,i,s,o=this;if(!0===o.options.centerMode?s=!0===o.options.infinite?(i=o.currentSlide+(o.options.slidesToShow/2+1))+o.options.slidesToShow+2:(i=Math.max(0,o.currentSlide-(o.options.slidesToShow/2+1)),o.options.slidesToShow/2+1+2+o.currentSlide):(i=o.options.infinite?o.options.slidesToShow+o.currentSlide:o.currentSlide,s=Math.ceil(i+o.options.slidesToShow),!0===o.options.fade&&(0<i&&i--,s<=o.slideCount&&s++)),t=o.$slider.find(".slick-slide").slice(i,s),"anticipated"===o.options.lazyLoad)for(var n=i-1,r=s,a=o.$slider.find(".slick-slide"),l=0;l<o.options.slidesToScroll;l++)n<0&&(n=o.slideCount-1),t=(t=t.add(a.eq(n))).add(a.eq(r)),n--,r++;e(t),o.slideCount<=o.options.slidesToShow?e(o.$slider.find(".slick-slide")):o.currentSlide>=o.slideCount-o.options.slidesToShow?e(o.$slider.find(".slick-cloned").slice(0,o.options.slidesToShow)):0===o.currentSlide&&e(o.$slider.find(".slick-cloned").slice(-1*o.options.slidesToShow))},r.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},r.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&d(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(e){e.preventDefault()},r.prototype.progressiveLazyLoad=function(e){e=e||1;var t,i,s,n,o,r=this,a=d("img[data-lazy]",r.$slider);a.length?(t=a.first(),i=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||r.$slider.attr("data-sizes"),(o=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,t,i]),r.progressiveLazyLoad()},o.onerror=function(){e<3?setTimeout(function(){r.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,i]),r.progressiveLazyLoad())},o.src=i):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(e){var t,i,s=this;i=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>i&&(s.currentSlide=i),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),d.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},r.prototype.registerBreakpoints=function(){var e,t,i,s=this,n=s.options.responsive||null;if("array"===d.type(n)&&n.length){for(e in s.respondTo=s.options.respondTo||"window",n)if(i=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;0<=i;)s.breakpoints[i]&&s.breakpoints[i]===t&&s.breakpoints.splice(i,1),i--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(e,t){return s.options.mobileFirst?e-t:t-e})}},r.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},r.prototype.resize=function(){var e=this;d(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=d(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(e,t,i){var s=this;if(e="boolean"==typeof e?!0===(t=e)?0:s.slideCount-1:!0===t?--e:e,s.slideCount<1||e<0||e>s.slideCount-1)return!1;s.unload(),!0===i?s.$slideTrack.children().remove():s.$slideTrack.children(this.options.slide).eq(e).remove(),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slidesCache=s.$slides,s.reinit()},r.prototype.setCSS=function(e){var t,i,s=this,n={};!0===s.options.rtl&&(e=-e),t="left"==s.positionProp?Math.ceil(e)+"px":"0px",i="top"==s.positionProp?Math.ceil(e)+"px":"0px",n[s.positionProp]=e,!1===s.transformsEnabled||(!(n={})===s.cssTransitions?n[s.animType]="translate("+t+", "+i+")":n[s.animType]="translate3d("+t+", "+i+", 0px)"),s.$slideTrack.css(n)},r.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},r.prototype.setFade=function(){var i,s=this;s.$slides.each(function(e,t){i=s.slideWidth*e*-1,!0===s.options.rtl?d(t).css({position:"relative",right:i,top:0,zIndex:s.options.zIndex-2,opacity:0}):d(t).css({position:"relative",left:i,top:0,zIndex:s.options.zIndex-2,opacity:0})}),s.$slides.eq(s.currentSlide).css({zIndex:s.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var t=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",t)}},r.prototype.setOption=r.prototype.slickSetOption=function(){var e,t,i,s,n,o=this,r=!1;if("object"===d.type(arguments[0])?(i=arguments[0],r=arguments[1],n="multiple"):"string"===d.type(arguments[0])&&(s=arguments[1],r=arguments[2],"responsive"===(i=arguments[0])&&"array"===d.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)o.options[i]=s;else if("multiple"===n)d.each(i,function(e,t){o.options[e]=t});else if("responsive"===n)for(t in s)if("array"!==d.type(o.options.responsive))o.options.responsive=[s[t]];else{for(e=o.options.responsive.length-1;0<=e;)o.options.responsive[e].breakpoint===s[t].breakpoint&&o.options.responsive.splice(e,1),e--;o.options.responsive.push(s[t])}r&&(o.unload(),o.reinit())},r.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},r.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},r.prototype.setSlideClasses=function(e){var t,i,s,n,o=this;if(i=o.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),o.$slides.eq(e).addClass("slick-current"),!0===o.options.centerMode){var r=o.options.slidesToShow%2==0?1:0;t=Math.floor(o.options.slidesToShow/2),!0===o.options.infinite&&(t<=e&&e<=o.slideCount-1-t?o.$slides.slice(e-t+r,e+t+1).addClass("slick-active").attr("aria-hidden","false"):(s=o.options.slidesToShow+e,i.slice(s-t+1+r,s+t+2).addClass("slick-active").attr("aria-hidden","false")),0===e?i.eq(i.length-1-o.options.slidesToShow).addClass("slick-center"):e===o.slideCount-1&&i.eq(o.options.slidesToShow).addClass("slick-center")),o.$slides.eq(e).addClass("slick-center")}else 0<=e&&e<=o.slideCount-o.options.slidesToShow?o.$slides.slice(e,e+o.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=o.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(n=o.slideCount%o.options.slidesToShow,s=!0===o.options.infinite?o.options.slidesToShow+e:e,o.options.slidesToShow==o.options.slidesToScroll&&o.slideCount-e<o.options.slidesToShow?i.slice(s-(o.options.slidesToShow-n),s+n).addClass("slick-active").attr("aria-hidden","false"):i.slice(s,s+o.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==o.options.lazyLoad&&"anticipated"!==o.options.lazyLoad||o.lazyLoad()},r.prototype.setupInfinite=function(){var e,t,i,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(i=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-i;--e)t=e-1,d(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<i+s.slideCount;e+=1)t=e,d(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},r.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},r.prototype.selectHandler=function(e){var t=d(e.target).is(".slick-slide")?d(e.target):d(e.target).parents(".slick-slide"),i=parseInt(t.attr("data-slick-index"));i=i||0,this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},r.prototype.slideHandler=function(e,t,i){var s,n,o,r,a,l=null,d=this;if(t=t||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===t&&d.asNavFor(e),s=e,l=d.getLeft(s),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(s=d.currentSlide,!0!==i?d.animateSlide(r,function(){d.postSlide(s)}):d.postSlide(s));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(s=d.currentSlide,!0!==i?d.animateSlide(r,function(){d.postSlide(s)}):d.postSlide(s));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),n=s<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+s:s>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:s-d.slideCount:s,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,n]),o=d.currentSlide,d.currentSlide=n,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(a=(a=d.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==i?(d.fadeSlideOut(o),d.fadeSlide(n,function(){d.postSlide(n)})):d.postSlide(n),void d.animateHeight();!0!==i?d.animateSlide(l,function(){d.postSlide(n)}):d.postSlide(n)}},r.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var e,t,i,s,n=this;return e=n.touchObject.startX-n.touchObject.curX,t=n.touchObject.startY-n.touchObject.curY,i=Math.atan2(t,e),(s=Math.round(180*i/Math.PI))<0&&(s=360-Math.abs(s)),s<=45&&0<=s||s<=360&&315<=s?!1===n.options.rtl?"left":"right":135<=s&&s<=225?!1===n.options.rtl?"right":"left":!0===n.options.verticalSwiping?35<=s&&s<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(e){var t,i,s=this;if(s.dragging=!1,s.swiping=!1,s.scrolling)return s.scrolling=!1;if(s.interrupted=!1,s.shouldClick=!(10<s.touchObject.swipeLength),void 0===s.touchObject.curX)return!1;if(!0===s.touchObject.edgeHit&&s.$slider.trigger("edge",[s,s.swipeDirection()]),s.touchObject.swipeLength>=s.touchObject.minSwipe){switch(i=s.swipeDirection()){case"left":case"down":t=s.options.swipeToSlide?s.checkNavigable(s.currentSlide+s.getSlideCount()):s.currentSlide+s.getSlideCount(),s.currentDirection=0;break;case"right":case"up":t=s.options.swipeToSlide?s.checkNavigable(s.currentSlide-s.getSlideCount()):s.currentSlide-s.getSlideCount(),s.currentDirection=1}"vertical"!=i&&(s.slideHandler(t),s.touchObject={},s.$slider.trigger("swipe",[s,i]))}else s.touchObject.startX!==s.touchObject.curX&&(s.slideHandler(s.currentSlide),s.touchObject={})},r.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},r.prototype.swipeMove=function(e){var t,i,s,n,o,r,a=this;return o=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!a.dragging||a.scrolling||o&&1!==o.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==o?o[0].pageX:e.clientX,a.touchObject.curY=void 0!==o?o[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<r?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==e.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,e.preventDefault()),n=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(n=a.touchObject.curY>a.touchObject.startY?1:-1),s=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(s=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+s*n:a.swipeLeft=t+s*(a.$list.height()/a.listWidth)*n,!0===a.options.verticalSwiping&&(a.swipeLeft=t+s*n),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},r.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},r.prototype.unload=function(){var e=this;d(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},r.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):(e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode||e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode)&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},d.fn.slick=function(){var e,t,i=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),o=i.length;for(e=0;e<o;e++)if("object"==typeof s||void 0===s?i[e].slick=new r(i[e],s):t=i[e].slick[s].apply(i[e].slick,n),void 0!==t)return t;return i}}),function(W){"use strict";var B='<?xml version="1.0" encoding="utf-8"?><svg version="1.1"xmlns="http://www.w3.org/2000/svg"viewBox="0 12.705 512 486.59"x="0px" y="0px"xml:space="preserve"><polygon points="256.814,12.705 317.205,198.566 512.631,198.566 354.529,313.435 414.918,499.295 256.814,384.427 98.713,499.295 159.102,313.435 1,198.566 196.426,198.566 "/></svg>',s={starWidth:"32px",normalFill:"gray",ratedFill:"#f39c12",numStars:5,maxValue:5,precision:1,rating:0,fullStar:!1,halfStar:!1,readOnly:!1,spacing:"0px",rtl:!1,multiColor:null,onInit:null,onChange:null,onSet:null,starSvg:null},R={startColor:"#c0392b",endColor:"#f1c40f"};function G(e,t,i){return e===t?e=t:e===i&&(e=i),e}function X(e){return void 0!==e}var i=/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i,V=function(e){if(!i.test(e))return null;var t=i.exec(e);return{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}};function Y(e,t,i){var s=i/100*(t-e);return 1===(s=Math.round(e+s).toString(16)).length&&(s="0"+s),s}function U(o,u){this.node=o.get(0);var i=this;o.empty().addClass("jq-ry-container");var f,s,m,v,g,e,t=W("<div/>").addClass("jq-ry-group-wrapper").appendTo(o),y=W("<div/>").addClass("jq-ry-normal-group").addClass("jq-ry-group").appendTo(t),n=W("<div/>").addClass("jq-ry-rated-group").addClass("jq-ry-group").appendTo(t),b=0,r=u.rating,a=!1;function l(e){X(e)||(e=u.rating);var t=(r=e)/f,i=t*m;1<t&&(i+=(Math.ceil(t)-1)*g),x(u.ratedFill),(i=u.rtl?100-i:i)<0?i=0:100<i&&(i=100),n.css("width",i+"%")}function d(){e=s*u.numStars+v*(u.numStars-1),m=s/e*100,g=v/e*100,o.width(e),l()}function h(e){var t=u.starWidth=e;return s=window.parseFloat(u.starWidth.replace("px","")),y.find("svg").attr({width:u.starWidth,height:t}),n.find("svg").attr({width:u.starWidth,height:t}),d(),o}function c(e){return u.spacing=e,v=parseFloat(u.spacing.replace("px","")),y.find("svg:not(:first-child)").css({"margin-left":e}),n.find("svg:not(:first-child)").css({"margin-left":e}),d(),o}function p(e){return u.normalFill=e,(u.rtl?n:y).find("svg").attr({fill:u.normalFill}),o}var w=u.ratedFill;function x(e){if(u.multiColor){var t=(r-b)/u.maxValue*100,i=u.multiColor||{};e=function(e,t,i){if(!e||!t)return null;i=X(i)?i:0,e=V(e),t=V(t);var s=Y(e.r,t.r,i),n=Y(e.b,t.b,i);return"#"+s+Y(e.g,t.g,i)+n}(i.startColor||R.startColor,i.endColor||R.endColor,t)}else w=e;return u.ratedFill=e,(u.rtl?y:n).find("svg").attr({fill:u.ratedFill}),o}function T(e){e=!!e,u.rtl=e,p(u.normalFill),l()}function S(e){x((u.multiColor=e)||w)}function _(e){u.numStars=e,f=u.maxValue/u.numStars,y.empty(),n.empty();for(var t=0;t<u.numStars;t++)y.append(W(u.starSvg||B)),n.append(W(u.starSvg||B));return h(u.starWidth),p(u.normalFill),c(u.spacing),l(),o}function C(e){return u.maxValue=e,f=u.maxValue/u.numStars,u.rating>e&&A(e),l(),o}function k(e){return u.precision=e,A(u.rating),o}function E(e){return u.halfStar=e,o}function $(e){return u.fullStar=e,o}function M(e){var t,i,s,n,o,r=y.offset().left,a=r+y.width(),l=u.maxValue,d=e.pageX,h=0;if(d<r)h=b;else if(a<d)h=l;else{var c=(d-r)/(a-r);if(0<v)for(var p=c*=100;0<p;)m<p?(h+=f,p-=m+g):(h+=p/m*f,p=0);else h=c*u.maxValue;i=(t=h)%f,s=f/2,n=u.halfStar,((o=u.fullStar)||n)&&(o||n&&s<i?t+=f-i:(t-=i,0<i&&(t+=s))),h=t}return u.rtl&&(h=l-h),parseFloat(h)}function P(e){return u.readOnly=e,o.attr("readonly",!0),q(),e||(o.removeAttr("readonly"),o.on("mousemove",O).on("mouseenter",O).on("mouseleave",I).on("click",N).on("rateyo.init",H).on("rateyo.change",j).on("rateyo.set",F)),o}function A(e){var t=e,i=u.maxValue;return"string"==typeof t&&("%"===t[t.length-1]&&(t=t.substr(0,t.length-1),C(i=100)),t=parseFloat(t)),function(){if(!(b<=t&&t<=i))throw Error("Invalid Rating, expected value between "+b+" and "+i)}(),t=parseFloat(t.toFixed(u.precision)),G(parseFloat(t),b,i),u.rating=t,l(),a&&o.trigger("rateyo.set",{rating:t}),o}function L(e){return u.onInit=e,o}function z(e){return u.onSet=e,o}function D(e){return u.onChange=e,o}function O(e){var t=M(e).toFixed(u.precision),i=u.maxValue;l(t=G(parseFloat(t),b,i)),o.trigger("rateyo.change",{rating:t})}function I(){var e,t;t=!1,e=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0),t||(l(),o.trigger("rateyo.change",{rating:u.rating}))}function N(e){var t=M(e).toFixed(u.precision);t=parseFloat(t),i.rating(t)}function H(e,t){u.onInit&&"function"==typeof u.onInit&&u.onInit.apply(this,[t.rating,i])}function j(e,t){u.onChange&&"function"==typeof u.onChange&&u.onChange.apply(this,[t.rating,i])}function F(e,t){u.onSet&&"function"==typeof u.onSet&&u.onSet.apply(this,[t.rating,i])}function q(){o.off("mousemove",O).off("mouseenter",O).off("mouseleave",I).off("click",N).off("rateyo.init",H).off("rateyo.change",j).off("rateyo.set",F)}this.rating=function(e){return X(e)?(A(e),o):u.rating},this.destroy=function(){var s,n;return u.readOnly||q(),U.prototype.collection=(s=o.get(0),n=this.collection,W.each(n,function(e){if(s===this.node){var t=n.slice(0,e),i=n.slice(e+1,n.length);return n=t.concat(i),!1}}),n),o.removeClass("jq-ry-container").children().remove(),o},this.method=function(e){if(!e)throw Error("Method name not specified!");if(!X(this[e]))throw Error("Method "+e+" doesn't exist!");var t=Array.prototype.slice.apply(arguments,[]).slice(1);return this[e].apply(this,t)},this.option=function(e,t){if(!X(e))return u;var i;switch(e){case"starWidth":i=h;break;case"numStars":i=_;break;case"normalFill":i=p;break;case"ratedFill":i=x;break;case"multiColor":i=S;break;case"maxValue":i=C;break;case"precision":i=k;break;case"rating":i=A;break;case"halfStar":i=E;break;case"fullStar":i=$;break;case"readOnly":i=P;break;case"spacing":i=c;break;case"rtl":i=T;break;case"onInit":i=L;break;case"onSet":i=z;break;case"onChange":i=D;break;default:throw Error("No such option as "+e)}return X(t)?i(t):u[e]},_(u.numStars),P(u.readOnly),u.rtl&&T(u.rtl),this.collection.push(this),this.rating(u.rating,!0),a=!0,o.trigger("rateyo.init",{rating:u.rating})}function d(e,t){var i;return W.each(t,function(){if(e===this.node)return i=this,!1}),i}U.prototype.collection=[],window.RateYo=U,W.fn.rateYo=function(){return function(i){var o=U.prototype.collection,e=W(this);if(0===e.length)return e;var t=Array.prototype.slice.apply(arguments,[]);if(0===t.length)i=t[0]={};else{if(1!==t.length||"object"!=typeof t[0]){if(1<=t.length&&"string"==typeof t[0]){var r=t[0],a=t.slice(1),l=[];return W.each(e,function(e,t){var i=d(t,o);if(!i)throw Error("Trying to set options before even initialization");var s=i[r];if(!s)throw Error("Method "+r+" does not exist!");var n=s.apply(i,a);l.push(n)}),l=1===l.length?l[0]:l}throw Error("Invalid Arguments")}i=t[0]}return i=W.extend({},s,i),W.each(e,function(){var e=d(this,o);if(e)return e;var t=W(this),s={},n=W.extend({},i);return W.each(t.data(),function(e,t){if(0===e.indexOf("rateyo")){var i=e.replace(/^rateyo/,"");i=i[0].toLowerCase()+i.slice(1),s[i]=t,delete n[i]}}),new U(W(this),W.extend({},s,n))})}.apply(this,Array.prototype.slice.apply(arguments,[]))}}(window.jQuery),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";var m="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,ne="undefined"==typeof window?{document:m,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function P(e,t){var i=[],s=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var n,o,r=e.trim();if(0<=r.indexOf("<")&&0<=r.indexOf(">")){var a="div";for(0===r.indexOf("<li")&&(a="ul"),0===r.indexOf("<tr")&&(a="tbody"),0!==r.indexOf("<td")&&0!==r.indexOf("<th")||(a="tr"),0===r.indexOf("<tbody")&&(a="table"),0===r.indexOf("<option")&&(a="select"),(o=m.createElement(a)).innerHTML=r,s=0;s<o.childNodes.length;s+=1)i.push(o.childNodes[s])}else for(n=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||m).querySelectorAll(e.trim()):[m.getElementById(e.trim().split("#")[1])],s=0;s<n.length;s+=1)n[s]&&i.push(n[s])}else if(e.nodeType||e===ne||e===m)i.push(e);else if(0<e.length&&e[0].nodeType)for(s=0;s<e.length;s+=1)i.push(e[s]);return new l(i)}function o(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}P.fn=l.prototype,P.Class=l,P.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var s=0;s<this.length;s+=1)if(2===i.length)this[s].setAttribute(e,t);else for(var n in e)this[s][n]=e[n],this[s].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var s=0;s<this.length;s+=1)(i=this[s]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0])return i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage?i.dom7ElementDataStorage[e]:i.getAttribute("data-"+e)||void 0},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],o=e[1],r=e[2],s=e[3];function n(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),P(t).is(o))r.apply(t,i);else for(var s=P(t).parents(),n=0;n<s.length;n+=1)P(s[n]).is(o)&&r.apply(s[n],i)}}function a(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"==typeof e[1]&&(i=e[0],r=e[1],s=e[2],o=void 0),s=s||!1;for(var l,d=i.split(" "),h=0;h<this.length;h+=1){var c=this[h];if(o)for(l=0;l<d.length;l+=1){var p=d[l];c.dom7LiveListeners||(c.dom7LiveListeners={}),c.dom7LiveListeners[p]||(c.dom7LiveListeners[p]=[]),c.dom7LiveListeners[p].push({listener:r,proxyListener:n}),c.addEventListener(p,n,s)}else for(l=0;l<d.length;l+=1){var u=d[l];c.dom7Listeners||(c.dom7Listeners={}),c.dom7Listeners[u]||(c.dom7Listeners[u]=[]),c.dom7Listeners[u].push({listener:r,proxyListener:a}),c.addEventListener(u,a,s)}}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],s=e[1],n=e[2],o=e[3];"function"==typeof e[1]&&(i=e[0],n=e[1],o=e[2],s=void 0),o=o||!1;for(var r=i.split(" "),a=0;a<r.length;a+=1)for(var l=r[a],d=0;d<this.length;d+=1){var h=this[d],c=void 0;if(!s&&h.dom7Listeners?c=h.dom7Listeners[l]:s&&h.dom7LiveListeners&&(c=h.dom7LiveListeners[l]),c&&c.length)for(var p=c.length-1;0<=p;--p){var u=c[p];(n&&u.listener===n||n&&u.listener&&u.listener.dom7proxy&&u.listener.dom7proxy===n||!n)&&(h.removeEventListener(l,u.proxyListener,o),c.splice(p,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),s=e[1],n=0;n<i.length;n+=1)for(var o=i[n],r=0;r<this.length;r+=1){var a=this[r],l=void 0;try{l=new ne.CustomEvent(o,{detail:s,bubbles:!0,cancelable:!0})}catch(e){(l=m.createEvent("Event")).initEvent(o,!0,!0),l.detail=s}a.dom7EventData=e.filter(function(e,t){return 0<t}),a.dispatchEvent(l),a.dom7EventData=[],delete a.dom7EventData}return this},transitionEnd:function(t){var i,s=["webkitTransitionEnd","transitionend"],n=this;function o(e){if(e.target===this)for(t.call(this,e),i=0;i<s.length;i+=1)n.off(s[i],o)}if(t)for(i=0;i<s.length;i+=1)n.on(s[i],o);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),i=m.body,s=e.clientTop||i.clientTop||0,n=e.clientLeft||i.clientLeft||0,o=e===ne?ne.scrollY:e.scrollTop,r=e===ne?ne.scrollX:e.scrollLeft;return{top:t.top+o-s,left:t.left+r-n}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var s in e)this[i].style[s]=e[s];return this}if(this[0])return ne.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,s=this[0];if(!s||void 0===e)return!1;if("string"==typeof e){if(s.matches)return s.matches(e);if(s.webkitMatchesSelector)return s.webkitMatchesSelector(e);if(s.msMatchesSelector)return s.msMatchesSelector(e);for(t=P(e),i=0;i<t.length;i+=1)if(t[i]===s)return!0;return!1}if(e===m)return s===m;if(e===ne)return s===ne;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===s)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new l(i-1<e?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(var s=0;s<t.length;s+=1){e=t[s];for(var n=0;n<this.length;n+=1)if("string"==typeof e){var o=m.createElement("div");for(o.innerHTML=e;o.firstChild;)this[n].appendChild(o.firstChild)}else if(e instanceof l)for(var r=0;r<e.length;r+=1)this[n].appendChild(e[r]);else this[n].appendChild(e)}return this},prepend:function(e){var t,i;for(t=0;t<this.length;t+=1)if("string"==typeof e){var s=m.createElement("div");for(s.innerHTML=e,i=s.childNodes.length-1;0<=i;--i)this[t].insertBefore(s.childNodes[i],this[t].childNodes[0])}else if(e instanceof l)for(i=0;i<e.length;i+=1)this[t].insertBefore(e[i],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&P(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.nextElementSibling;){var s=i.nextElementSibling;e&&!P(s).is(e)||t.push(s),i=s}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&P(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.previousElementSibling;){var s=i.previousElementSibling;e&&!P(s).is(e)||t.push(s),i=s}return new l(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null===this[i].parentNode||e&&!P(this[i].parentNode).is(e)||t.push(this[i].parentNode);return P(o(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].parentNode;s;)e&&!P(s).is(e)||t.push(s),s=s.parentNode;return P(o(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].querySelectorAll(e),n=0;n<s.length;n+=1)t.push(s[n]);return new l(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].childNodes,n=0;n<s.length;n+=1)e?1===s[n].nodeType&&P(s[n]).is(e)&&t.push(s[n]):1===s[n].nodeType&&t.push(s[n]);return new l(o(t))},filter:function(e){for(var t=[],i=0;i<this.length;i+=1)e.call(this[i],i,this[i])&&t.push(this[i]);return new l(t)},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s;for(i=0;i<e.length;i+=1){var n=P(e[i]);for(s=0;s<n.length;s+=1)this[this.length]=n[s],this.length+=1}return this},styles:function(){return this[0]?ne.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){P.fn[e]=P.fn[e]||t[e]});function e(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})}var oe={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,s,n;void 0===t&&(t="x");var o=ne.getComputedStyle(e,null);return ne.WebKitCSSMatrix?(6<(s=o.transform||o.webkitTransform).split(",").length&&(s=s.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),n=new ne.WebKitCSSMatrix("none"===s?"":s)):i=(n=o.MozTransform||o.OTransform||o.MsTransform||o.msTransform||o.transform||o.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(s=ne.WebKitCSSMatrix?n.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(s=ne.WebKitCSSMatrix?n.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),s||0},parseUrlQuery:function(e){var t,i,s,n,o={},r=e||ne.location.href;if("string"==typeof r&&r.length)for(n=(i=(r=-1<r.indexOf("?")?r.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<n;t+=1)s=i[t].replace(/#\S+/g,"").split("="),o[decodeURIComponent(s[0])]=void 0===s[1]?void 0:decodeURIComponent(s[1])||"";return o},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),s=1;s<e.length;s+=1){var n=e[s];if(null!=n)for(var o=Object.keys(Object(n)),r=0,a=o.length;r<a;r+=1){var l=o[r],d=Object.getOwnPropertyDescriptor(n,l);void 0!==d&&d.enumerable&&(oe.isObject(i[l])&&oe.isObject(n[l])?oe.extend(i[l],n[l]):!oe.isObject(i[l])&&oe.isObject(n[l])?(i[l]={},oe.extend(i[l],n[l])):i[l]=n[l])}}return i}},C={touch:ne.Modernizr&&!0===ne.Modernizr.touch||!!(0<ne.navigator.maxTouchPoints||"ontouchstart"in ne||ne.DocumentTouch&&m instanceof ne.DocumentTouch),pointerEvents:!!ne.PointerEvent&&"maxTouchPoints"in ne.navigator&&0<ne.navigator.maxTouchPoints,observer:"MutationObserver"in ne||"WebkitMutationObserver"in ne,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});ne.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in ne},i={components:{configurable:!0}};e.prototype.on=function(e,t,i){var s=this;if("function"!=typeof t)return s;var n=i?"unshift":"push";return e.split(" ").forEach(function(e){s.eventsListeners[e]||(s.eventsListeners[e]=[]),s.eventsListeners[e][n](t)}),s},e.prototype.once=function(i,s,e){var n=this;if("function"!=typeof s)return n;function o(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];n.off(i,o),o.f7proxy&&delete o.f7proxy,s.apply(n,e)}return o.f7proxy=s,n.on(i,o,e)},e.prototype.off=function(e,s){var n=this;return n.eventsListeners&&e.split(" ").forEach(function(i){void 0===s?n.eventsListeners[i]=[]:n.eventsListeners[i]&&n.eventsListeners[i].length&&n.eventsListeners[i].forEach(function(e,t){(e===s||e.f7proxy&&e.f7proxy===s)&&n.eventsListeners[i].splice(t,1)})}),n},e.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,n,o=this;return o.eventsListeners&&(n="string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],s=e.slice(1,e.length),o):(i=e[0].events,s=e[0].data,e[0].context||o),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(o.eventsListeners&&o.eventsListeners[e]){var t=[];o.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(n,s)})}})),o},e.prototype.useModulesParams=function(i){var s=this;s.modules&&Object.keys(s.modules).forEach(function(e){var t=s.modules[e];t.params&&oe.extend(i,t.params)})},e.prototype.useModules=function(s){void 0===s&&(s={});var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var i=n.modules[e],t=s[e]||{};i.instance&&Object.keys(i.instance).forEach(function(e){var t=i.instance[e];n[e]="function"==typeof t?t.bind(n):t}),i.on&&n.on&&Object.keys(i.on).forEach(function(e){n.on(e,i.on[e])}),i.create&&i.create.bind(n)(t)})},i.components.set=function(e){this.use&&this.use(e)},e.installModule=function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];var s=this;s.prototype.modules||(s.prototype.modules={});var n=t.name||Object.keys(s.prototype.modules).length+"_"+oe.now();return(s.prototype.modules[n]=t).proto&&Object.keys(t.proto).forEach(function(e){s.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){s[e]=t.static[e]}),t.install&&t.install.apply(s,e),s},e.use=function(e){for(var t=[],i=arguments.length-1;0<i--;)t[i]=arguments[i+1];var s=this;return Array.isArray(e)?(e.forEach(function(e){return s.installModule(e)}),s):s.installModule.apply(s,[e].concat(t))},Object.defineProperties(e,i);var s,n,r,a,d,h,c,p,u,f,v,g,y,b,w,x={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),oe.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var t=this.params,e=this.$wrapperEl,i=this.size,s=this.rtlTranslate,n=this.wrongRTL,o=this.virtual&&t.virtual.enabled,r=o?this.virtual.slides.length:this.slides.length,a=e.children("."+this.params.slideClass),l=o?this.virtual.slides.length:a.length,d=[],h=[],c=[];function p(e){return!t.cssMode||e!==a.length-1}var u=t.slidesOffsetBefore;"function"==typeof u&&(u=t.slidesOffsetBefore.call(this));var f=t.slidesOffsetAfter;"function"==typeof f&&(f=t.slidesOffsetAfter.call(this));var m=this.snapGrid.length,v=this.snapGrid.length,g=t.spaceBetween,y=-u,b=0,w=0;if(void 0!==i){var x,T;"string"==typeof g&&0<=g.indexOf("%")&&(g=parseFloat(g.replace("%",""))/100*i),this.virtualSize=-g,s?a.css({marginLeft:"",marginTop:""}):a.css({marginRight:"",marginBottom:""}),1<t.slidesPerColumn&&(x=Math.floor(l/t.slidesPerColumn)===l/this.params.slidesPerColumn?l:Math.ceil(l/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(x=Math.max(x,t.slidesPerView*t.slidesPerColumn)));for(var S,_=t.slidesPerColumn,C=x/_,k=Math.floor(l/t.slidesPerColumn),E=0;E<l;E+=1){T=0;var $=a.eq(E);if(1<t.slidesPerColumn){var M=void 0,P=void 0,A=void 0;if("row"===t.slidesPerColumnFill&&1<t.slidesPerGroup){var L=Math.floor(E/(t.slidesPerGroup*t.slidesPerColumn)),z=E-t.slidesPerColumn*t.slidesPerGroup*L,D=0===L?t.slidesPerGroup:Math.min(Math.ceil((l-L*_*t.slidesPerGroup)/_),t.slidesPerGroup);M=(P=z-(A=Math.floor(z/D))*D+L*t.slidesPerGroup)+A*x/_,$.css({"-webkit-box-ordinal-group":M,"-moz-box-ordinal-group":M,"-ms-flex-order":M,"-webkit-order":M,order:M})}else"column"===t.slidesPerColumnFill?(A=E-(P=Math.floor(E/_))*_,(k<P||P===k&&A===_-1)&&(A+=1)>=_&&(A=0,P+=1)):P=E-(A=Math.floor(E/C))*C;$.css("margin-"+(this.isHorizontal()?"top":"left"),0!==A&&t.spaceBetween&&t.spaceBetween+"px")}if("none"!==$.css("display")){if("auto"===t.slidesPerView){var O=ne.getComputedStyle($[0],null),I=$[0].style.transform,N=$[0].style.webkitTransform;if(I&&($[0].style.transform="none"),N&&($[0].style.webkitTransform="none"),t.roundLengths)T=this.isHorizontal()?$.outerWidth(!0):$.outerHeight(!0);else if(this.isHorizontal()){var H=parseFloat(O.getPropertyValue("width")),j=parseFloat(O.getPropertyValue("padding-left")),F=parseFloat(O.getPropertyValue("padding-right")),q=parseFloat(O.getPropertyValue("margin-left")),W=parseFloat(O.getPropertyValue("margin-right")),B=O.getPropertyValue("box-sizing");T=B&&"border-box"===B?H+q+W:H+j+F+q+W}else{var R=parseFloat(O.getPropertyValue("height")),G=parseFloat(O.getPropertyValue("padding-top")),X=parseFloat(O.getPropertyValue("padding-bottom")),V=parseFloat(O.getPropertyValue("margin-top")),Y=parseFloat(O.getPropertyValue("margin-bottom")),U=O.getPropertyValue("box-sizing");T=U&&"border-box"===U?R+V+Y:R+G+X+V+Y}I&&($[0].style.transform=I),N&&($[0].style.webkitTransform=N),t.roundLengths&&(T=Math.floor(T))}else T=(i-(t.slidesPerView-1)*g)/t.slidesPerView,t.roundLengths&&(T=Math.floor(T)),a[E]&&(this.isHorizontal()?a[E].style.width=T+"px":a[E].style.height=T+"px");a[E]&&(a[E].swiperSlideSize=T),c.push(T),t.centeredSlides?(y=y+T/2+b/2+g,0===b&&0!==E&&(y=y-i/2-g),0===E&&(y=y-i/2-g),Math.abs(y)<.001&&(y=0),t.roundLengths&&(y=Math.floor(y)),w%t.slidesPerGroup==0&&d.push(y),h.push(y)):(t.roundLengths&&(y=Math.floor(y)),(w-Math.min(this.params.slidesPerGroupSkip,w))%this.params.slidesPerGroup==0&&d.push(y),h.push(y),y=y+T+g),this.virtualSize+=T+g,b=T,w+=1}}if(this.virtualSize=Math.max(this.virtualSize,i)+f,s&&n&&("slide"===t.effect||"coverflow"===t.effect)&&e.css({width:this.virtualSize+t.spaceBetween+"px"}),t.setWrapperSize&&(this.isHorizontal()?e.css({width:this.virtualSize+t.spaceBetween+"px"}):e.css({height:this.virtualSize+t.spaceBetween+"px"})),1<t.slidesPerColumn&&(this.virtualSize=(T+t.spaceBetween)*x,this.virtualSize=Math.ceil(this.virtualSize/t.slidesPerColumn)-t.spaceBetween,this.isHorizontal()?e.css({width:this.virtualSize+t.spaceBetween+"px"}):e.css({height:this.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){S=[];for(var K=0;K<d.length;K+=1){var Q=d[K];t.roundLengths&&(Q=Math.floor(Q)),d[K]<this.virtualSize+d[0]&&S.push(Q)}d=S}if(!t.centeredSlides){S=[];for(var J=0;J<d.length;J+=1){var Z=d[J];t.roundLengths&&(Z=Math.floor(Z)),d[J]<=this.virtualSize-i&&S.push(Z)}d=S,1<Math.floor(this.virtualSize-i)-Math.floor(d[d.length-1])&&d.push(this.virtualSize-i)}if(0===d.length&&(d=[0]),0!==t.spaceBetween&&(this.isHorizontal()?s?a.filter(p).css({marginLeft:g+"px"}):a.filter(p).css({marginRight:g+"px"}):a.filter(p).css({marginBottom:g+"px"})),t.centeredSlides&&t.centeredSlidesBounds){var ee=0;c.forEach(function(e){ee+=e+(t.spaceBetween?t.spaceBetween:0)});var te=(ee-=t.spaceBetween)-i;d=d.map(function(e){return e<0?-u:te<e?te+f:e})}if(t.centerInsufficientSlides){var ie=0;if(c.forEach(function(e){ie+=e+(t.spaceBetween?t.spaceBetween:0)}),(ie-=t.spaceBetween)<i){var se=(i-ie)/2;d.forEach(function(e,t){d[t]=e-se}),h.forEach(function(e,t){h[t]=e+se})}}oe.extend(this,{slides:a,snapGrid:d,slidesGrid:h,slidesSizesGrid:c}),l!==r&&this.emit("slidesLengthChange"),d.length!==m&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),h.length!==v&&this.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=[],s=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&1<this.params.slidesPerView)if(this.params.centeredSlides)i.push.apply(i,this.visibleSlides);else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var n=this.activeIndex+t;if(n>this.slides.length)break;i.push(this.slides.eq(n)[0])}else i.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<i.length;t+=1)if(void 0!==i[t]){var o=i[t].offsetHeight;s=s<o?o:s}s&&this.$wrapperEl.css("height",s+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,s=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var n=-e;s&&(n=e),i.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var o=0;o<i.length;o+=1){var r=i[o],a=(n+(t.centeredSlides?this.minTranslate():0)-r.swiperSlideOffset)/(r.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight){var l=-(n-r.swiperSlideOffset),d=l+this.slidesSizesGrid[o];(0<=l&&l<this.size-1||1<d&&d<=this.size||l<=0&&d>=this.size)&&(this.visibleSlides.push(r),this.visibleSlidesIndexes.push(o),i.eq(o).addClass(t.slideVisibleClass))}r.progress=s?-a:a}this.visibleSlides=P(this.visibleSlides)}},updateProgress:function(e){if(void 0===e){var t=this.rtlTranslate?-1:1;e=this&&this.translate&&this.translate*t||0}var i=this.params,s=this.maxTranslate()-this.minTranslate(),n=this.progress,o=this.isBeginning,r=this.isEnd,a=o,l=r;r=0==s?o=!(n=0):(o=(n=(e-this.minTranslate())/s)<=0,1<=n),oe.extend(this,{progress:n,isBeginning:o,isEnd:r}),(i.watchSlidesProgress||i.watchSlidesVisibility||i.centeredSlides&&i.autoHeight)&&this.updateSlidesProgress(e),o&&!a&&this.emit("reachBeginning toEdge"),r&&!l&&this.emit("reachEnd toEdge"),(a&&!o||l&&!r)&&this.emit("fromEdge"),this.emit("progress",n)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,s=this.$wrapperEl,n=this.activeIndex,o=this.realIndex,r=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=r?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+n+'"]'):t.eq(n)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o+'"]').addClass(i.slideDuplicateActiveClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o+'"]').addClass(i.slideDuplicateActiveClass));var a=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===a.length&&(a=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(a.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+a.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+a.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtlTranslate?this.translate:-this.translate,s=this.slidesGrid,n=this.snapGrid,o=this.params,r=this.activeIndex,a=this.realIndex,l=this.snapIndex,d=e;if(void 0===d){for(var h=0;h<s.length;h+=1)void 0!==s[h+1]?i>=s[h]&&i<s[h+1]-(s[h+1]-s[h])/2?d=h:i>=s[h]&&i<s[h+1]&&(d=h+1):i>=s[h]&&(d=h);o.normalizeSlideIndex&&(d<0||void 0===d)&&(d=0)}if(0<=n.indexOf(i))t=n.indexOf(i);else{var c=Math.min(o.slidesPerGroupSkip,d);t=c+Math.floor((d-c)/o.slidesPerGroup)}if(t>=n.length&&(t=n.length-1),d!==r){var p=parseInt(this.slides.eq(d).attr("data-swiper-slide-index")||d,10);oe.extend(this,{snapIndex:t,realIndex:p,previousIndex:r,activeIndex:d}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),a!==p&&this.emit("realIndexChange"),(this.initialized||this.runCallbacksOnInit)&&this.emit("slideChange")}else t!==l&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=P(e.target).closest("."+t.slideClass)[0],s=!1;if(i)for(var n=0;n<this.slides.length;n+=1)this.slides[n]===i&&(s=!0);if(!i||!s)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(P(i).attr("data-swiper-slide-index"),10):this.clickedIndex=P(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},T={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,s=this.translate,n=this.$wrapperEl;if(t.virtualTranslate)return i?-s:s;if(t.cssMode)return s;var o=oe.getTranslate(n[0],e);return i&&(o=-o),o||0},setTranslate:function(e,t){var i=this.rtlTranslate,s=this.params,n=this.$wrapperEl,o=this.wrapperEl,r=this.progress,a=0,l=0;this.isHorizontal()?a=i?-e:e:l=e,s.roundLengths&&(a=Math.floor(a),l=Math.floor(l)),s.cssMode?o[this.isHorizontal()?"scrollLeft":"scrollTop"]=this.isHorizontal()?-a:-l:s.virtualTranslate||n.transform("translate3d("+a+"px, "+l+"px, 0px)"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?a:l;var d=this.maxTranslate()-this.minTranslate();(0==d?0:(e-this.minTranslate())/d)!==r&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,i,s,n){var o;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),void 0===s&&(s=!0);var r=this,a=r.params,l=r.wrapperEl;if(r.animating&&a.preventInteractionOnTransition)return!1;var d,h=r.minTranslate(),c=r.maxTranslate();if(d=s&&h<e?h:s&&e<c?c:e,r.updateProgress(d),a.cssMode){var p=r.isHorizontal();return 0!==t&&l.scrollTo?l.scrollTo(((o={})[p?"left":"top"]=-d,o.behavior="smooth",o)):l[p?"scrollLeft":"scrollTop"]=-d,!0}return 0===t?(r.setTransition(0),r.setTranslate(d),i&&(r.emit("beforeTransitionStart",t,n),r.emit("transitionEnd"))):(r.setTransition(t),r.setTranslate(d),i&&(r.emit("beforeTransitionStart",t,n),r.emit("transitionStart")),r.animating||(r.animating=!0,r.onTranslateToWrapperTransitionEnd||(r.onTranslateToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd),r.onTranslateToWrapperTransitionEnd=null,delete r.onTranslateToWrapperTransitionEnd,i&&r.emit("transitionEnd"))}),r.$wrapperEl[0].addEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd))),!0}},S={slideTo:function(e,t,i,s){var n;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var o=this,r=e;r<0&&(r=0);var a=o.params,l=o.snapGrid,d=o.slidesGrid,h=o.previousIndex,c=o.activeIndex,p=o.rtlTranslate,u=o.wrapperEl;if(o.animating&&a.preventInteractionOnTransition)return!1;var f=Math.min(o.params.slidesPerGroupSkip,r),m=f+Math.floor((r-f)/o.params.slidesPerGroup);m>=l.length&&(m=l.length-1),(c||a.initialSlide||0)===(h||0)&&i&&o.emit("beforeSlideChangeStart");var v,g=-l[m];if(o.updateProgress(g),a.normalizeSlideIndex)for(var y=0;y<d.length;y+=1)-Math.floor(100*g)>=Math.floor(100*d[y])&&(r=y);if(o.initialized&&r!==c){if(!o.allowSlideNext&&g<o.translate&&g<o.minTranslate())return!1;if(!o.allowSlidePrev&&g>o.translate&&g>o.maxTranslate()&&(c||0)!==r)return!1}if(v=c<r?"next":r<c?"prev":"reset",p&&-g===o.translate||!p&&g===o.translate)return o.updateActiveIndex(r),a.autoHeight&&o.updateAutoHeight(),o.updateSlidesClasses(),"slide"!==a.effect&&o.setTranslate(g),"reset"!=v&&(o.transitionStart(i,v),o.transitionEnd(i,v)),!1;if(a.cssMode){var b=o.isHorizontal();return 0!==t&&u.scrollTo?u.scrollTo(((n={})[b?"left":"top"]=-g,n.behavior="smooth",n)):u[b?"scrollLeft":"scrollTop"]=-g,!0}return 0===t?(o.setTransition(0),o.setTranslate(g),o.updateActiveIndex(r),o.updateSlidesClasses(),o.emit("beforeTransitionStart",t,s),o.transitionStart(i,v),o.transitionEnd(i,v)):(o.setTransition(t),o.setTranslate(g),o.updateActiveIndex(r),o.updateSlidesClasses(),o.emit("beforeTransitionStart",t,s),o.transitionStart(i,v),o.animating||(o.animating=!0,o.onSlideToWrapperTransitionEnd||(o.onSlideToWrapperTransitionEnd=function(e){o&&!o.destroyed&&e.target===this&&(o.$wrapperEl[0].removeEventListener("transitionend",o.onSlideToWrapperTransitionEnd),o.$wrapperEl[0].removeEventListener("webkitTransitionEnd",o.onSlideToWrapperTransitionEnd),o.onSlideToWrapperTransitionEnd=null,delete o.onSlideToWrapperTransitionEnd,o.transitionEnd(i,v))}),o.$wrapperEl[0].addEventListener("transitionend",o.onSlideToWrapperTransitionEnd),o.$wrapperEl[0].addEventListener("webkitTransitionEnd",o.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var n=e;return this.params.loop&&(n+=this.loopedSlides),this.slideTo(n,t,i,s)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,n=this.animating,o=this.activeIndex<s.slidesPerGroupSkip?1:s.slidesPerGroup;if(s.loop){if(n)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+o,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,n=this.animating,o=this.snapGrid,r=this.slidesGrid,a=this.rtlTranslate;if(s.loop){if(n)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,h=l(a?this.translate:-this.translate),c=o.map(function(e){return l(e)}),p=(r.map(function(e){return l(e)}),o[c.indexOf(h)],o[c.indexOf(h)-1]);return void 0===p&&s.cssMode&&o.forEach(function(e){!p&&e<=h&&(p=e)}),void 0!==p&&(d=r.indexOf(p))<0&&(d=this.activeIndex-1),this.slideTo(d,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i,s){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===s&&(s=.5);var n=this.activeIndex,o=Math.min(this.params.slidesPerGroupSkip,n),r=o+Math.floor((n-o)/this.params.slidesPerGroup),a=this.rtlTranslate?this.translate:-this.translate;if(a>=this.snapGrid[r]){var l=this.snapGrid[r];a-l>(this.snapGrid[r+1]-l)*s&&(n+=this.params.slidesPerGroup)}else{var d=this.snapGrid[r-1];a-d<=(this.snapGrid[r]-d)*s&&(n-=this.params.slidesPerGroup)}return n=Math.max(n,0),n=Math.min(n,this.slidesGrid.length-1),this.slideTo(n,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,s=t.$wrapperEl,n="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,o=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(P(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?o<t.loopedSlides-n/2||o>t.slides.length-t.loopedSlides+n/2?(t.loopFix(),o=s.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),oe.nextTick(function(){t.slideTo(o)})):t.slideTo(o):o>t.slides.length-n?(t.loopFix(),o=s.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),oe.nextTick(function(){t.slideTo(o)})):t.slideTo(o)}else t.slideTo(o)}},_={loopCreate:function(){var s=this,e=s.params,t=s.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var n=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var i=e.slidesPerGroup-n.length%e.slidesPerGroup;if(i!==e.slidesPerGroup){for(var o=0;o<i;o+=1){var r=P(m.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(r)}n=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=n.length),s.loopedSlides=Math.ceil(parseFloat(e.loopedSlides||e.slidesPerView,10)),s.loopedSlides+=e.loopAdditionalSlides,s.loopedSlides>n.length&&(s.loopedSlides=n.length);var a=[],l=[];n.each(function(e,t){var i=P(t);e<s.loopedSlides&&l.push(t),e<n.length&&e>=n.length-s.loopedSlides&&a.push(t),i.attr("data-swiper-slide-index",e)});for(var d=0;d<l.length;d+=1)t.append(P(l[d].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var h=a.length-1;0<=h;--h)t.prepend(P(a[h].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){this.emit("beforeLoopFix");var e,t=this.activeIndex,i=this.slides,s=this.loopedSlides,n=this.allowSlidePrev,o=this.allowSlideNext,r=this.snapGrid,a=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;var l=-r[t]-this.getTranslate();t<s?(e=i.length-3*s+t,e+=s,this.slideTo(e,0,!1,!0)&&0!=l&&this.setTranslate((a?-this.translate:this.translate)-l)):t>=i.length-s&&(e=-i.length+t+s,e+=s,this.slideTo(e,0,!1,!0)&&0!=l&&this.setTranslate((a?-this.translate:this.translate)-l)),this.allowSlidePrev=n,this.allowSlideNext=o,this.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}},k={setGrabCursor:function(e){if(!(C.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){C.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor="")}},E={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var s=0;s<e.length;s+=1)e[s]&&t.append(e[s]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&C.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&this.loopDestroy();var n=s+1;if("object"==typeof e&&"length"in e){for(var o=0;o<e.length;o+=1)e[o]&&i.prepend(e[o]);n=s+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&C.observer||this.update(),this.slideTo(n,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,s=this.params,n=this.activeIndex;s.loop&&(n-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+s.slideClass));var o=this.slides.length;if(e<=0)this.prependSlide(t);else if(o<=e)this.appendSlide(t);else{for(var r=e<n?n+1:n,a=[],l=o-1;e<=l;--l){var d=this.slides.eq(l);d.remove(),a.unshift(d)}if("object"==typeof t&&"length"in t){for(var h=0;h<t.length;h+=1)t[h]&&i.append(t[h]);r=e<n?n+t.length:n}else i.append(t);for(var c=0;c<a.length;c+=1)i.append(a[c]);s.loop&&this.loopCreate(),s.observer&&C.observer||this.update(),s.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&(s-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+t.slideClass));var n,o=s;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)n=e[r],this.slides[n]&&this.slides.eq(n).remove(),n<o&&--o;o=Math.max(o,0)}else n=e,this.slides[n]&&this.slides.eq(n).remove(),n<o&&--o,o=Math.max(o,0);t.loop&&this.loopCreate(),t.observer&&C.observer||this.update(),t.loop?this.slideTo(o+this.loopedSlides,0,!1):this.slideTo(o,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},$=(s=ne.navigator.platform,n=ne.navigator.userAgent,r={ios:!1,android:!1,androidChrome:!1,desktop:!1,iphone:!1,ipod:!1,ipad:!1,edge:!1,ie:!1,firefox:!1,macos:!1,windows:!1,cordova:!(!ne.cordova&&!ne.phonegap),phonegap:!(!ne.cordova&&!ne.phonegap),electron:!1},a=ne.screen.width,d=ne.screen.height,h=n.match(/(Android);?[\s\/]+([\d.]+)?/),c=n.match(/(iPad).*OS\s([\d_]+)/),p=n.match(/(iPod)(.*OS\s([\d_]+))?/),u=!c&&n.match(/(iPhone\sOS|iOS)\s([\d_]+)/),f=0<=n.indexOf("MSIE ")||0<=n.indexOf("Trident/"),v=0<=n.indexOf("Edge/"),g=0<=n.indexOf("Gecko/")&&0<=n.indexOf("Firefox/"),y="Win32"===s,b=0<=n.toLowerCase().indexOf("electron"),w="MacIntel"===s,!c&&w&&C.touch&&(1024===a&&1366===d||834===a&&1194===d||834===a&&1112===d||768===a&&1024===d)&&(c=n.match(/(Version)\/([\d.]+)/),w=!1),r.ie=f,r.edge=v,r.firefox=g,h&&!y&&(r.os="android",r.osVersion=h[2],r.android=!0,r.androidChrome=0<=n.toLowerCase().indexOf("chrome")),(c||u||p)&&(r.os="ios",r.ios=!0),u&&!p&&(r.osVersion=u[2].replace(/_/g,"."),r.iphone=!0),c&&(r.osVersion=c[2].replace(/_/g,"."),r.ipad=!0),p&&(r.osVersion=p[3]?p[3].replace(/_/g,"."):null,r.ipod=!0),r.ios&&r.osVersion&&0<=n.indexOf("Version/")&&"10"===r.osVersion.split(".")[0]&&(r.osVersion=n.toLowerCase().split("version/")[1].split(" ")[0]),r.webView=!(!(u||c||p)||!n.match(/.*AppleWebKit(?!.*Safari)/i)&&!ne.navigator.standalone)||ne.matchMedia&&ne.matchMedia("(display-mode: standalone)").matches,r.webview=r.webView,r.standalone=r.webView,r.desktop=!(r.ios||r.android)||b,r.desktop&&(r.electron=b,r.macos=w,r.windows=y,r.macos&&(r.os="macos"),r.windows&&(r.os="windows")),r.pixelRatio=ne.devicePixelRatio||1,r);function M(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,s=this.allowSlidePrev,n=this.snapGrid;this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),("auto"===e.slidesPerView||1<e.slidesPerView)&&this.isEnd&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=s,this.allowSlideNext=i,this.params.watchOverflow&&n!==this.snapGrid&&this.checkOverflow()}}var A=!1;function L(){}var z,D={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},O={update:x,translate:T,transition:{setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.params,n=this.previousIndex;if(!s.cssMode){s.autoHeight&&this.updateAutoHeight();var o=t;if(o=o||(n<i?"next":i<n?"prev":"reset"),this.emit("transitionStart"),e&&i!==n){if("reset"===o)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===o?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.previousIndex,n=this.params;if(this.animating=!1,!n.cssMode){this.setTransition(0);var o=t;if(o=o||(s<i?"next":i<s?"prev":"reset"),this.emit("transitionEnd"),e&&i!==s){if("reset"===o)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===o?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}}},slide:S,loop:_,grabCursor:k,manipulation:E,events:{attachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,s=this.wrapperEl;this.onTouchStart=function(e){var t=this.touchEventsData,i=this.params,s=this.touches;if(!this.animating||!i.preventInteractionOnTransition){var n=e;n.originalEvent&&(n=n.originalEvent);var o=P(n.target);if(("wrapper"!==i.touchEventsTarget||o.closest(this.wrapperEl).length)&&(t.isTouchEvent="touchstart"===n.type,(t.isTouchEvent||!("which"in n)||3!==n.which)&&!(!t.isTouchEvent&&"button"in n&&0<n.button||t.isTouched&&t.isMoved)))if(i.noSwiping&&o.closest(i.noSwipingSelector?i.noSwipingSelector:"."+i.noSwipingClass)[0])this.allowClick=!0;else if(!i.swipeHandler||o.closest(i.swipeHandler)[0]){s.currentX="touchstart"===n.type?n.targetTouches[0].pageX:n.pageX,s.currentY="touchstart"===n.type?n.targetTouches[0].pageY:n.pageY;var r=s.currentX,a=s.currentY,l=i.edgeSwipeDetection||i.iOSEdgeSwipeDetection,d=i.edgeSwipeThreshold||i.iOSEdgeSwipeThreshold;if(!l||!(r<=d||r>=ne.screen.width-d)){if(oe.extend(t,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),s.startX=r,s.startY=a,t.touchStartTime=oe.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,0<i.threshold&&(t.allowThresholdMove=!1),"touchstart"!==n.type){var h=!0;o.is(t.formElements)&&(h=!1),m.activeElement&&P(m.activeElement).is(t.formElements)&&m.activeElement!==o[0]&&m.activeElement.blur();var c=h&&this.allowTouchMove&&i.touchStartPreventDefault;(i.touchStartForcePreventDefault||c)&&n.preventDefault()}this.emit("touchStart",n)}}}}.bind(this),this.onTouchMove=function(e){var t=this.touchEventsData,i=this.params,s=this.touches,n=this.rtlTranslate,o=e;if(o.originalEvent&&(o=o.originalEvent),t.isTouched){if(!t.isTouchEvent||"mousemove"!==o.type){var r="touchmove"===o.type&&o.targetTouches&&(o.targetTouches[0]||o.changedTouches[0]),a="touchmove"===o.type?r.pageX:o.pageX,l="touchmove"===o.type?r.pageY:o.pageY;if(o.preventedByNestedSwiper)return s.startX=a,void(s.startY=l);if(!this.allowTouchMove)return this.allowClick=!1,void(t.isTouched&&(oe.extend(s,{startX:a,startY:l,currentX:a,currentY:l}),t.touchStartTime=oe.now()));if(t.isTouchEvent&&i.touchReleaseOnEdges&&!i.loop)if(this.isVertical()){if(l<s.startY&&this.translate<=this.maxTranslate()||l>s.startY&&this.translate>=this.minTranslate())return t.isTouched=!1,void(t.isMoved=!1)}else if(a<s.startX&&this.translate<=this.maxTranslate()||a>s.startX&&this.translate>=this.minTranslate())return;if(t.isTouchEvent&&m.activeElement&&o.target===m.activeElement&&P(o.target).is(t.formElements))return t.isMoved=!0,void(this.allowClick=!1);if(t.allowTouchCallbacks&&this.emit("touchMove",o),!(o.targetTouches&&1<o.targetTouches.length)){s.currentX=a,s.currentY=l;var d,h=s.currentX-s.startX,c=s.currentY-s.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(h,2)+Math.pow(c,2))<this.params.threshold))if(void 0===t.isScrolling&&(this.isHorizontal()&&s.currentY===s.startY||this.isVertical()&&s.currentX===s.startX?t.isScrolling=!1:25<=h*h+c*c&&(d=180*Math.atan2(Math.abs(c),Math.abs(h))/Math.PI,t.isScrolling=this.isHorizontal()?d>i.touchAngle:90-d>i.touchAngle)),t.isScrolling&&this.emit("touchMoveOpposite",o),void 0===t.startMoving&&(s.currentX===s.startX&&s.currentY===s.startY||(t.startMoving=!0)),t.isScrolling)t.isTouched=!1;else if(t.startMoving){this.allowClick=!1,i.cssMode||o.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&o.stopPropagation(),t.isMoved||(i.loop&&this.loopFix(),t.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),t.allowMomentumBounce=!1,!i.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",o)),this.emit("sliderMove",o),t.isMoved=!0;var p=this.isHorizontal()?h:c;s.diff=p,p*=i.touchRatio,n&&(p=-p),this.swipeDirection=0<p?"prev":"next",t.currentTranslate=p+t.startTranslate;var u=!0,f=i.resistanceRatio;if(i.touchReleaseOnEdges&&(f=0),0<p&&t.currentTranslate>this.minTranslate()?(u=!1,i.resistance&&(t.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+t.startTranslate+p,f))):p<0&&t.currentTranslate<this.maxTranslate()&&(u=!1,i.resistance&&(t.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-t.startTranslate-p,f))),u&&(o.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&t.currentTranslate<t.startTranslate&&(t.currentTranslate=t.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&t.currentTranslate>t.startTranslate&&(t.currentTranslate=t.startTranslate),0<i.threshold){if(!(Math.abs(p)>i.threshold||t.allowThresholdMove))return void(t.currentTranslate=t.startTranslate);if(!t.allowThresholdMove)return t.allowThresholdMove=!0,s.startX=s.currentX,s.startY=s.currentY,t.currentTranslate=t.startTranslate,void(s.diff=this.isHorizontal()?s.currentX-s.startX:s.currentY-s.startY)}i.followFinger&&!i.cssMode&&((i.freeMode||i.watchSlidesProgress||i.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),i.freeMode&&(0===t.velocities.length&&t.velocities.push({position:s[this.isHorizontal()?"startX":"startY"],time:t.touchStartTime}),t.velocities.push({position:s[this.isHorizontal()?"currentX":"currentY"],time:oe.now()})),this.updateProgress(t.currentTranslate),this.setTranslate(t.currentTranslate))}}}}else t.startMoving&&t.isScrolling&&this.emit("touchMoveOpposite",o)}.bind(this),this.onTouchEnd=function(e){var t=this,i=t.touchEventsData,s=t.params,n=t.touches,o=t.rtlTranslate,r=t.$wrapperEl,a=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",d),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&s.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);s.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var h,c=oe.now(),p=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap click",d),p<300&&c-i.lastClickTime<300&&t.emit("doubleTap doubleClick",d)),i.lastClickTime=oe.now(),oe.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===n.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,h=s.followFinger?o?t.translate:-t.translate:-i.currentTranslate,!s.cssMode)if(s.freeMode){if(h<-t.minTranslate())return void t.slideTo(t.activeIndex);if(h>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(s.freeModeMomentum){if(1<i.velocities.length){var u=i.velocities.pop(),f=i.velocities.pop(),m=u.position-f.position,v=u.time-f.time;t.velocity=m/v,t.velocity/=2,Math.abs(t.velocity)<s.freeModeMinimumVelocity&&(t.velocity=0),(150<v||300<oe.now()-u.time)&&(t.velocity=0)}else t.velocity=0;t.velocity*=s.freeModeMomentumVelocityRatio,i.velocities.length=0;var g=1e3*s.freeModeMomentumRatio,y=t.velocity*g,b=t.translate+y;o&&(b=-b);var w,x,T=!1,S=20*Math.abs(t.velocity)*s.freeModeMomentumBounceRatio;if(b<t.maxTranslate())s.freeModeMomentumBounce?(b+t.maxTranslate()<-S&&(b=t.maxTranslate()-S),w=t.maxTranslate(),T=!0,i.allowMomentumBounce=!0):b=t.maxTranslate(),s.loop&&s.centeredSlides&&(x=!0);else if(b>t.minTranslate())s.freeModeMomentumBounce?(b-t.minTranslate()>S&&(b=t.minTranslate()+S),w=t.minTranslate(),T=!0,i.allowMomentumBounce=!0):b=t.minTranslate(),s.loop&&s.centeredSlides&&(x=!0);else if(s.freeModeSticky){for(var _,C=0;C<l.length;C+=1)if(l[C]>-b){_=C;break}b=-(Math.abs(l[_]-b)<Math.abs(l[_-1]-b)||"next"===t.swipeDirection?l[_]:l[_-1])}if(x&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity){if(g=o?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity),s.freeModeSticky){var k=Math.abs((o?-b:b)-t.translate),E=t.slidesSizesGrid[t.activeIndex];g=k<E?s.speed:k<2*E?1.5*s.speed:2.5*s.speed}}else if(s.freeModeSticky)return void t.slideToClosest();s.freeModeMomentumBounce&&T?(t.updateProgress(w),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(s.speed),t.setTranslate(w),r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(b),t.setTransition(g),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(s.freeModeSticky)return void t.slideToClosest();(!s.freeModeMomentum||p>=s.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var $=0,M=t.slidesSizesGrid[0],P=0;P<a.length;P+=P<s.slidesPerGroupSkip?1:s.slidesPerGroup){var A=P<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;void 0!==a[P+A]?h>=a[P]&&h<a[P+A]&&(M=a[($=P)+A]-a[P]):h>=a[P]&&($=P,M=a[a.length-1]-a[a.length-2])}var L=(h-a[$])/M,z=$<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;if(p>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(L>=s.longSwipesRatio?t.slideTo($+z):t.slideTo($)),"prev"===t.swipeDirection&&(L>1-s.longSwipesRatio?t.slideTo($+z):t.slideTo($))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);!t.navigation||d.target!==t.navigation.nextEl&&d.target!==t.navigation.prevEl?("next"===t.swipeDirection&&t.slideTo($+z),"prev"===t.swipeDirection&&t.slideTo($)):d.target===t.navigation.nextEl?t.slideTo($+z):t.slideTo($)}}}.bind(this),e.cssMode&&(this.onScroll=function(){var e=this.wrapperEl;this.previousTranslate=this.translate,this.translate=this.isHorizontal()?-e.scrollLeft:-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses();var t=this.maxTranslate()-this.minTranslate();(0==t?0:(this.translate-this.minTranslate())/t)!==this.progress&&this.updateProgress(this.translate),this.emit("setTranslate",this.translate,!1)}.bind(this)),this.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(this);var n=!!e.nested;if(!C.touch&&C.pointerEvents)i.addEventListener(t.start,this.onTouchStart,!1),m.addEventListener(t.move,this.onTouchMove,n),m.addEventListener(t.end,this.onTouchEnd,!1);else{if(C.touch){var o=!("touchstart"!==t.start||!C.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};i.addEventListener(t.start,this.onTouchStart,o),i.addEventListener(t.move,this.onTouchMove,C.passiveListener?{passive:!1,capture:n}:n),i.addEventListener(t.end,this.onTouchEnd,o),t.cancel&&i.addEventListener(t.cancel,this.onTouchEnd,o),A||(m.addEventListener("touchstart",L),A=!0)}(e.simulateTouch&&!$.ios&&!$.android||e.simulateTouch&&!C.touch&&$.ios)&&(i.addEventListener("mousedown",this.onTouchStart,!1),m.addEventListener("mousemove",this.onTouchMove,n),m.addEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&i.addEventListener("click",this.onClick,!0),e.cssMode&&s.addEventListener("scroll",this.onScroll),e.updateOnWindowResize?this.on($.ios||$.android?"resize orientationchange observerUpdate":"resize observerUpdate",M,!0):this.on("observerUpdate",M,!0)},detachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,s=this.wrapperEl,n=!!e.nested;if(!C.touch&&C.pointerEvents)i.removeEventListener(t.start,this.onTouchStart,!1),m.removeEventListener(t.move,this.onTouchMove,n),m.removeEventListener(t.end,this.onTouchEnd,!1);else{if(C.touch){var o=!("onTouchStart"!==t.start||!C.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};i.removeEventListener(t.start,this.onTouchStart,o),i.removeEventListener(t.move,this.onTouchMove,n),i.removeEventListener(t.end,this.onTouchEnd,o),t.cancel&&i.removeEventListener(t.cancel,this.onTouchEnd,o)}(e.simulateTouch&&!$.ios&&!$.android||e.simulateTouch&&!C.touch&&$.ios)&&(i.removeEventListener("mousedown",this.onTouchStart,!1),m.removeEventListener("mousemove",this.onTouchMove,n),m.removeEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&i.removeEventListener("click",this.onClick,!0),e.cssMode&&s.removeEventListener("scroll",this.onScroll),this.off($.ios||$.android?"resize orientationchange observerUpdate":"resize observerUpdate",M)}},breakpoints:{setBreakpoint:function(){var e=this.activeIndex,t=this.initialized,i=this.loopedSlides;void 0===i&&(i=0);var s=this.params,n=this.$el,o=s.breakpoints;if(o&&(!o||0!==Object.keys(o).length)){var r=this.getBreakpoint(o);if(r&&this.currentBreakpoint!==r){var a=r in o?o[r]:void 0;a&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach(function(e){var t=a[e];void 0!==t&&(a[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")});var l=a||this.originalParams,d=1<s.slidesPerColumn,h=1<l.slidesPerColumn;d&&!h?n.removeClass(s.containerModifierClass+"multirow "+s.containerModifierClass+"multirow-column"):!d&&h&&(n.addClass(s.containerModifierClass+"multirow"),"column"===l.slidesPerColumnFill&&n.addClass(s.containerModifierClass+"multirow-column"));var c=l.direction&&l.direction!==s.direction,p=s.loop&&(l.slidesPerView!==s.slidesPerView||c);c&&t&&this.changeDirection(),oe.extend(this.params,l),oe.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=r,p&&t&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-i+this.loopedSlides,0,!1)),this.emit("breakpoint",l)}}},getBreakpoint:function(e){if(e){var t=!1,i=Object.keys(e).map(function(e){if("string"!=typeof e||0!==e.indexOf("@"))return{value:e,point:e};var t=parseFloat(e.substr(1));return{value:ne.innerHeight*t,point:e}});i.sort(function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)});for(var s=0;s<i.length;s+=1){var n=i[s],o=n.point;n.value<=ne.innerWidth&&(t=o)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,i=0<this.slides.length&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&i?this.isLocked=i<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,s=this.$el,n=[];n.push("initialized"),n.push(i.direction),i.freeMode&&n.push("free-mode"),i.autoHeight&&n.push("autoheight"),e&&n.push("rtl"),1<i.slidesPerColumn&&(n.push("multirow"),"column"===i.slidesPerColumnFill&&n.push("multirow-column")),$.android&&n.push("android"),$.ios&&n.push("ios"),i.cssMode&&n.push("css-mode"),n.forEach(function(e){t.push(i.containerModifierClass+e)}),s.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,s,n,o){var r;function a(){o&&o()}(!e.complete||!n)&&t?((r=new ne.Image).onload=a,r.onerror=a,s&&(r.sizes=s),i&&(r.srcset=i),t&&(r.src=t)):a()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var s=e.imagesToLoad[i];e.loadImage(s,s.currentSrc||s.getAttribute("src"),s.srcset||s.getAttribute("srcset"),s.sizes||s.getAttribute("sizes"),!0,t)}}}},I={},N=function(c){function p(){for(var e,n,t=[],i=arguments.length;i--;)t[i]=arguments[i];n=(n=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(e=t[0],t[1]))||{},n=oe.extend({},n),e&&!n.el&&(n.el=e),c.call(this,n),Object.keys(O).forEach(function(t){Object.keys(O[t]).forEach(function(e){p.prototype[e]||(p.prototype[e]=O[t][e])})});var o=this;void 0===o.modules&&(o.modules={}),Object.keys(o.modules).forEach(function(e){var t=o.modules[e];if(t.params){var i=Object.keys(t.params)[0],s=t.params[i];if("object"!=typeof s||null===s)return;if(!(i in n&&"enabled"in s))return;!0===n[i]&&(n[i]={enabled:!0}),"object"!=typeof n[i]||"enabled"in n[i]||(n[i].enabled=!0),n[i]||(n[i]={enabled:!1})}});var s=oe.extend({},D);o.useModulesParams(s),o.params=oe.extend({},s,I,n),o.originalParams=oe.extend({},o.params),o.passedParams=oe.extend({},n);var r=(o.$=P)(o.params.el);if(e=r[0]){if(1<r.length){var a=[];return r.each(function(e,t){var i=oe.extend({},n,{el:t});a.push(new p(i))}),a}var l,d,h;return e.swiper=o,r.data("swiper",o),e&&e.shadowRoot&&e.shadowRoot.querySelector?(l=P(e.shadowRoot.querySelector("."+o.params.wrapperClass))).children=function(e){return r.children(e)}:l=r.children("."+o.params.wrapperClass),oe.extend(o,{$el:r,el:e,$wrapperEl:l,wrapperEl:l[0],classNames:[],slides:P(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===o.params.direction},isVertical:function(){return"vertical"===o.params.direction},rtl:"rtl"===e.dir.toLowerCase()||"rtl"===r.css("direction"),rtlTranslate:"horizontal"===o.params.direction&&("rtl"===e.dir.toLowerCase()||"rtl"===r.css("direction")),wrongRTL:"-webkit-box"===l.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:o.params.allowSlideNext,allowSlidePrev:o.params.allowSlidePrev,touchEvents:(d=["touchstart","touchmove","touchend","touchcancel"],h=["mousedown","mousemove","mouseup"],C.pointerEvents&&(h=["pointerdown","pointermove","pointerup"]),o.touchEventsTouch={start:d[0],move:d[1],end:d[2],cancel:d[3]},o.touchEventsDesktop={start:h[0],move:h[1],end:h[2]},C.touch||!o.params.simulateTouch?o.touchEventsTouch:o.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:oe.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:o.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),o.useModules(),o.params.init&&o.init(),o}}c&&(p.__proto__=c);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((p.prototype=Object.create(c&&c.prototype)).constructor=p).prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,s=this.size,n=this.activeIndex,o=1;if(e.centeredSlides){for(var r,a=t[n].swiperSlideSize,l=n+1;l<t.length;l+=1)t[l]&&!r&&(o+=1,(a+=t[l].swiperSlideSize)>s&&(r=!0));for(var d=n-1;0<=d;--d)t[d]&&!r&&(o+=1,(a+=t[d].swiperSlideSize)>s&&(r=!0))}else for(var h=n+1;h<t.length;h+=1)i[h]-i[n]<s&&(o+=1);return o},p.prototype.update=function(){var i=this;if(i&&!i.destroyed){var e=i.snapGrid,t=i.params;t.breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(s(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||s(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update")}function s(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}},p.prototype.changeDirection=function(i,e){void 0===e&&(e=!0);var t=this.params.direction;return(i=i||("horizontal"===t?"vertical":"horizontal"))===t||"horizontal"!==i&&"vertical"!==i||(this.$el.removeClass(""+this.params.containerModifierClass+t).addClass(""+this.params.containerModifierClass+i),this.params.direction=i,this.slides.each(function(e,t){"vertical"===i?t.style.width="":t.style.height=""}),this.emit("changeDirection"),e&&this.update()),this},p.prototype.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},p.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,s=i.params,n=i.$el,o=i.$wrapperEl,r=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),n.removeAttr("style"),o.removeAttr("style"),r&&r.length&&r.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),oe.deleteProps(i)),i.destroyed=!0),null},p.extendDefaults=function(e){oe.extend(I,e)},e.extendedDefaults.get=function(){return I},e.defaults.get=function(){return D},e.Class.get=function(){return c},e.$.get=function(){return P},Object.defineProperties(p,e),p}(e),H={name:"device",proto:{device:$},static:{device:$}},j={name:"support",proto:{support:C},static:{support:C}},F={isEdge:!!ne.navigator.userAgent.match(/Edge/g),isSafari:0<=(z=ne.navigator.userAgent.toLowerCase()).indexOf("safari")&&z.indexOf("chrome")<0&&z.indexOf("android")<0,isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(ne.navigator.userAgent)},q={name:"browser",proto:{browser:F},static:{browser:F}},W={name:"resize",create:function(){var e=this;oe.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){ne.addEventListener("resize",this.resize.resizeHandler),ne.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){ne.removeEventListener("resize",this.resize.resizeHandler),ne.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},B={func:ne.MutationObserver||ne.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,s=new B.func(function(e){if(1!==e.length){var t=function(){i.emit("observerUpdate",e[0])};ne.requestAnimationFrame?ne.requestAnimationFrame(t):ne.setTimeout(t,0)}else i.emit("observerUpdate",e[0])});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){if(C.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},R={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){oe.extend(this,{observer:{init:B.init.bind(this),attach:B.attach.bind(this),destroy:B.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},G={update:function(e){var t=this,i=t.params,s=i.slidesPerView,n=i.slidesPerGroup,o=i.centeredSlides,r=t.params.virtual,a=r.addSlidesBefore,l=r.addSlidesAfter,d=t.virtual,h=d.from,c=d.to,p=d.slides,u=d.slidesGrid,f=d.renderSlide,m=d.offset;t.updateActiveIndex();var v,g,y,b=t.activeIndex||0;v=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",y=o?(g=Math.floor(s/2)+n+a,Math.floor(s/2)+n+l):(g=s+(n-1)+a,n+l);var w=Math.max((b||0)-y,0),x=Math.min((b||0)+g,p.length-1),T=(t.slidesGrid[w]||0)-(t.slidesGrid[0]||0);function S(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(oe.extend(t.virtual,{from:w,to:x,offset:T,slidesGrid:t.slidesGrid}),h===w&&c===x&&!e)return t.slidesGrid!==u&&T!==m&&t.slides.css(v,T+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:T,from:w,to:x,slides:function(){for(var e=[],t=w;t<=x;t+=1)e.push(p[t]);return e}()}),void S();var _=[],C=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var k=h;k<=c;k+=1)(k<w||x<k)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+k+'"]').remove();for(var E=0;E<p.length;E+=1)w<=E&&E<=x&&(void 0===c||e?C.push(E):(c<E&&C.push(E),E<h&&_.push(E)));C.forEach(function(e){t.$wrapperEl.append(f(p[e],e))}),_.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(p[e],e))}),t.$wrapperEl.children(".swiper-slide").css(v,T+"px"),S()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var s=i.renderSlide?P(i.renderSlide.call(this,e,t)):P('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return s.attr("data-swiper-slide-index")||s.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=s),s},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var t=this.activeIndex,i=t+1,s=1;if(Array.isArray(e)){for(var n=0;n<e.length;n+=1)e[n]&&this.virtual.slides.unshift(e[n]);i=t+e.length,s=e.length}else this.virtual.slides.unshift(e);if(this.params.virtual.cache){var o=this.virtual.cache,r={};Object.keys(o).forEach(function(e){var t=o[e],i=t.attr("data-swiper-slide-index");i&&t.attr("data-swiper-slide-index",parseInt(i,10)+1),r[parseInt(e,10)+s]=t}),this.virtual.cache=r}this.virtual.update(!0),this.slideTo(i,0)},removeSlide:function(e){if(null!=e){var t=this.activeIndex;if(Array.isArray(e))for(var i=e.length-1;0<=i;--i)this.virtual.slides.splice(e[i],1),this.params.virtual.cache&&delete this.virtual.cache[e[i]],e[i]<t&&--t,t=Math.max(t,0);else this.virtual.slides.splice(e,1),this.params.virtual.cache&&delete this.virtual.cache[e],e<t&&--t,t=Math.max(t,0);this.virtual.update(!0),this.slideTo(t,0)}},removeAllSlides:function(){this.virtual.slides=[],this.params.virtual.cache&&(this.virtual.cache={}),this.virtual.update(!0),this.slideTo(0,0)}},X={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,addSlidesBefore:0,addSlidesAfter:0}},create:function(){oe.extend(this,{virtual:{update:G.update.bind(this),appendSlide:G.appendSlide.bind(this),prependSlide:G.prependSlide.bind(this),removeSlide:G.removeSlide.bind(this),removeAllSlides:G.removeAllSlides.bind(this),renderSlide:G.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+"virtual");var e={watchSlidesProgress:!0};oe.extend(this.params,e),oe.extend(this.originalParams,e),this.params.initialSlide||this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},V={handle:function(e){var t=this.rtlTranslate,i=e;i.originalEvent&&(i=i.originalEvent);var s=i.keyCode||i.charCode;if(!this.allowSlideNext&&(this.isHorizontal()&&39===s||this.isVertical()&&40===s||34===s))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&37===s||this.isVertical()&&38===s||33===s))return!1;if(!(i.shiftKey||i.altKey||i.ctrlKey||i.metaKey||m.activeElement&&m.activeElement.nodeName&&("input"===m.activeElement.nodeName.toLowerCase()||"textarea"===m.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(33===s||34===s||37===s||39===s||38===s||40===s)){var n=!1;if(0<this.$el.parents("."+this.params.slideClass).length&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var o=ne.innerWidth,r=ne.innerHeight,a=this.$el.offset();t&&(a.left-=this.$el[0].scrollLeft);for(var l=[[a.left,a.top],[a.left+this.width,a.top],[a.left,a.top+this.height],[a.left+this.width,a.top+this.height]],d=0;d<l.length;d+=1){var h=l[d];0<=h[0]&&h[0]<=o&&0<=h[1]&&h[1]<=r&&(n=!0)}if(!n)return}this.isHorizontal()?(33!==s&&34!==s&&37!==s&&39!==s||(i.preventDefault?i.preventDefault():i.returnValue=!1),(34!==s&&39!==s||t)&&(33!==s&&37!==s||!t)||this.slideNext(),(33!==s&&37!==s||t)&&(34!==s&&39!==s||!t)||this.slidePrev()):(33!==s&&34!==s&&38!==s&&40!==s||(i.preventDefault?i.preventDefault():i.returnValue=!1),34!==s&&40!==s||this.slideNext(),33!==s&&38!==s||this.slidePrev()),this.emit("keyPress",s)}},enable:function(){this.keyboard.enabled||(P(m).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(P(m).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},Y={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){oe.extend(this,{keyboard:{enabled:!1,enable:V.enable.bind(this),disable:V.disable.bind(this),handle:V.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}},U={lastScrollTime:oe.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return-1<ne.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":function(){var e="onwheel"in m;if(!e){var t=m.createElement("div");t.setAttribute("onwheel","return;"),e="function"==typeof t.onwheel}return!e&&m.implementation&&m.implementation.hasFeature&&!0!==m.implementation.hasFeature("","")&&(e=m.implementation.hasFeature("Events.wheel","3.0")),e}()?"wheel":"mousewheel"},normalize:function(e){var t=0,i=0,s=0,n=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),s=10*t,n=10*i,"deltaY"in e&&(n=e.deltaY),"deltaX"in e&&(s=e.deltaX),e.shiftKey&&!s&&(s=n,n=0),(s||n)&&e.deltaMode&&(1===e.deltaMode?(s*=40,n*=40):(s*=800,n*=800)),s&&!t&&(t=s<1?-1:1),n&&!i&&(i=n<1?-1:1),{spinX:t,spinY:i,pixelX:s,pixelY:n}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,s=i.params.mousewheel;i.params.cssMode&&t.preventDefault();var n=i.$el;if("container"!==i.params.mousewheel.eventsTarged&&(n=P(i.params.mousewheel.eventsTarged)),!i.mouseEntered&&!n[0].contains(t.target)&&!s.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var o=0,r=i.rtlTranslate?-1:1,a=U.normalize(t);if(s.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(a.pixelX)>Math.abs(a.pixelY)))return!0;o=a.pixelX*r}else{if(!(Math.abs(a.pixelY)>Math.abs(a.pixelX)))return!0;o=a.pixelY}else o=Math.abs(a.pixelX)>Math.abs(a.pixelY)?-a.pixelX*r:-a.pixelY;if(0===o)return!0;if(s.invert&&(o=-o),i.params.freeMode){var l={time:oe.now(),delta:Math.abs(o),direction:Math.sign(o)},d=i.mousewheel.lastEventBeforeSnap,h=d&&l.time<d.time+500&&l.delta<=d.delta&&l.direction===d.direction;if(!h){i.mousewheel.lastEventBeforeSnap=void 0,i.params.loop&&i.loopFix();var c=i.getTranslate()+o*s.sensitivity,p=i.isBeginning,u=i.isEnd;if(c>=i.minTranslate()&&(c=i.minTranslate()),c<=i.maxTranslate()&&(c=i.maxTranslate()),i.setTransition(0),i.setTranslate(c),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!p&&i.isBeginning||!u&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky){clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=void 0;var f=i.mousewheel.recentWheelEvents;15<=f.length&&f.shift();var m=f.length?f[f.length-1]:void 0,v=f[0];if(f.push(l),m&&(l.delta>m.delta||l.direction!==m.direction))f.splice(0);else if(15<=f.length&&l.time-v.time<500&&1<=v.delta-l.delta&&l.delta<=6){var g=0<o?.8:.2;i.mousewheel.lastEventBeforeSnap=l,f.splice(0),i.mousewheel.timeout=oe.nextTick(function(){i.slideToClosest(i.params.speed,!0,void 0,g)},0)}i.mousewheel.timeout||(i.mousewheel.timeout=oe.nextTick(function(){i.mousewheel.lastEventBeforeSnap=l,f.splice(0),i.slideToClosest(i.params.speed,!0,void 0,.5)},500))}if(h||i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),c===i.minTranslate()||c===i.maxTranslate())return!0}}else{var y={time:oe.now(),delta:Math.abs(o),direction:Math.sign(o),raw:e},b=i.mousewheel.recentWheelEvents;2<=b.length&&b.shift();var w=b.length?b[b.length-1]:void 0;if(b.push(y),(!w||y.direction!==w.direction||y.delta>w.delta)&&i.mousewheel.animateSlider(y),i.mousewheel.releaseScroll(y))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){return 6<=e.delta&&oe.now()-this.mousewheel.lastScrollTime<60||(e.direction<0?this.isEnd&&!this.params.loop||this.animating||(this.slideNext(),this.emit("scroll",e.raw)):this.isBeginning&&!this.params.loop||this.animating||(this.slidePrev(),this.emit("scroll",e.raw)),this.mousewheel.lastScrollTime=(new ne.Date).getTime(),!1)},releaseScroll:function(e){var t=this.params.mousewheel;if(e.direction<0){if(this.isEnd&&!this.params.loop&&t.releaseOnEdges)return!0}else if(this.isBeginning&&!this.params.loop&&t.releaseOnEdges)return!0;return!1},enable:function(){var e=U.event();if(this.params.cssMode)return this.wrapperEl.removeEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(t=P(this.params.mousewheel.eventsTarged)),t.on("mouseenter",this.mousewheel.handleMouseEnter),t.on("mouseleave",this.mousewheel.handleMouseLeave),t.on(e,this.mousewheel.handle),this.mousewheel.enabled=!0},disable:function(){var e=U.event();if(this.params.cssMode)return this.wrapperEl.addEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(!this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(t=P(this.params.mousewheel.eventsTarged)),t.off(e,this.mousewheel.handle),!(this.mousewheel.enabled=!1)}},K={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,s=t.$prevEl;s&&0<s.length&&(this.isBeginning?s.addClass(e.disabledClass):s.removeClass(e.disabledClass),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&0<i.length&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=P(i.nextEl),this.params.uniqueNavElements&&"string"==typeof i.nextEl&&1<e.length&&1===this.$el.find(i.nextEl).length&&(e=this.$el.find(i.nextEl))),i.prevEl&&(t=P(i.prevEl),this.params.uniqueNavElements&&"string"==typeof i.prevEl&&1<t.length&&1===this.$el.find(i.prevEl).length&&(t=this.$el.find(i.prevEl))),e&&0<e.length&&e.on("click",this.navigation.onNextClick),t&&0<t.length&&t.on("click",this.navigation.onPrevClick),oe.extend(this.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click",this.navigation.onPrevClick),i.removeClass(this.params.navigation.disabledClass))}},Q={update:function(){var e=this.rtl,n=this.params.pagination;if(n.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var o,t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((o=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>t-1-2*this.loopedSlides&&(o-=t-2*this.loopedSlides),s-1<o&&(o-=s),o<0&&"bullets"!==this.params.paginationType&&(o=s+o)):o=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===n.type&&this.pagination.bullets&&0<this.pagination.bullets.length){var r,a,l,d=this.pagination.bullets;if(n.dynamicBullets&&(this.pagination.bulletSize=d.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),i.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(n.dynamicMainBullets+4)+"px"),1<n.dynamicMainBullets&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=o-this.previousIndex,this.pagination.dynamicBulletIndex>n.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=n.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),r=o-this.pagination.dynamicBulletIndex,l=((a=r+(Math.min(d.length,n.dynamicMainBullets)-1))+r)/2),d.removeClass(n.bulletActiveClass+" "+n.bulletActiveClass+"-next "+n.bulletActiveClass+"-next-next "+n.bulletActiveClass+"-prev "+n.bulletActiveClass+"-prev-prev "+n.bulletActiveClass+"-main"),1<i.length)d.each(function(e,t){var i=P(t),s=i.index();s===o&&i.addClass(n.bulletActiveClass),n.dynamicBullets&&(r<=s&&s<=a&&i.addClass(n.bulletActiveClass+"-main"),s===r&&i.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),s===a&&i.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next"))});else{var h=d.eq(o),c=h.index();if(h.addClass(n.bulletActiveClass),n.dynamicBullets){for(var p=d.eq(r),u=d.eq(a),f=r;f<=a;f+=1)d.eq(f).addClass(n.bulletActiveClass+"-main");if(this.params.loop)if(c>=d.length-n.dynamicMainBullets){for(var m=n.dynamicMainBullets;0<=m;--m)d.eq(d.length-m).addClass(n.bulletActiveClass+"-main");d.eq(d.length-n.dynamicMainBullets-1).addClass(n.bulletActiveClass+"-prev")}else p.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),u.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next");else p.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),u.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next")}}if(n.dynamicBullets){var v=Math.min(d.length,n.dynamicMainBullets+4),g=(this.pagination.bulletSize*v-this.pagination.bulletSize)/2-l*this.pagination.bulletSize,y=e?"right":"left";d.css(this.isHorizontal()?y:"top",g+"px")}}if("fraction"===n.type&&(i.find("."+n.currentClass).text(n.formatFractionCurrent(o+1)),i.find("."+n.totalClass).text(n.formatFractionTotal(s))),"progressbar"===n.type){var b;b=n.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical";var w=(o+1)/s,x=1,T=1;"horizontal"==b?x=w:T=w,i.find("."+n.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+x+") scaleY("+T+")").transition(this.params.speed)}"custom"===n.type&&n.renderCustom?(i.html(n.renderCustom(this,o+1,s)),this.emit("paginationRender",this,i[0])):this.emit("paginationUpdate",this,i[0]),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](n.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s="";if("bullets"===e.type){for(var n=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,o=0;o<n;o+=1)e.renderBullet?s+=e.renderBullet.call(this,o,e.bulletClass):s+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(s),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(s=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(s)),"progressbar"===e.type&&(s=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(s)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var i=this,e=i.params.pagination;if(e.el){var t=P(e.el);0!==t.length&&(i.params.uniqueNavElements&&"string"==typeof e.el&&1<t.length&&1===i.$el.find(e.el).length&&(t=i.$el.find(e.el)),"bullets"===e.type&&e.clickable&&t.addClass(e.clickableClass),t.addClass(e.modifierClass+e.type),"bullets"===e.type&&e.dynamicBullets&&(t.addClass(""+e.modifierClass+e.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&t.addClass(e.progressbarOppositeClass),e.clickable&&t.on("click","."+e.bulletClass,function(e){e.preventDefault();var t=P(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),oe.extend(i.pagination,{$el:t,el:t[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},J={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtlTranslate,i=this.progress,s=e.dragSize,n=e.trackSize,o=e.$dragEl,r=e.$el,a=this.params.scrollbar,l=s,d=(n-s)*i;t?0<(d=-d)?(l=s-d,d=0):n<-d+s&&(l=n+d):d<0?(l=s+d,d=0):n<d+s&&(l=n-d),this.isHorizontal()?(o.transform("translate3d("+d+"px, 0, 0)"),o[0].style.width=l+"px"):(o.transform("translate3d(0px, "+d+"px, 0)"),o[0].style.height=l+"px"),a.hide&&(clearTimeout(this.scrollbar.timeout),r[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){r[0].style.opacity=0,r.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var s,n=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,o=this.size/this.virtualSize,r=o*(n/this.size);s="auto"===this.params.scrollbar.dragSize?n*o:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=s+"px":t[0].style.height=s+"px",i[0].style.display=1<=o?"none":"",this.params.scrollbar.hide&&(i[0].style.opacity=0),oe.extend(e,{trackSize:n,divider:o,moveDivider:r,dragSize:s}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},getPointerPosition:function(e){return this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientX:e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientY:e.clientY},setDragPosition:function(e){var t,i=this.scrollbar,s=this.rtlTranslate,n=i.$el,o=i.dragSize,r=i.trackSize,a=i.dragStartPos;t=(i.getPointerPosition(e)-n.offset()[this.isHorizontal()?"left":"top"]-(null!==a?a:o/2))/(r-o),t=Math.max(Math.min(t,1),0),s&&(t=1-t);var l=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(l),this.setTranslate(l),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,n=i.$el,o=i.$dragEl;this.scrollbar.isTouched=!0,this.scrollbar.dragStartPos=e.target===o[0]||e.target===o?i.getPointerPosition(e)-e.target.getBoundingClientRect()[this.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),s.transition(100),o.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),n.transition(0),t.hide&&n.css("opacity",1),this.params.cssMode&&this.$wrapperEl.css("scroll-snap-type","none"),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,s=t.$el,n=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),s.transition(0),n.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,n=i.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,this.params.cssMode&&(this.$wrapperEl.css("scroll-snap-type",""),s.transition("")),t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=oe.nextTick(function(){n.css("opacity",0),n.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,s=this.params,n=e.$el[0],o=!(!C.passiveListener||!s.passiveListeners)&&{passive:!1,capture:!1},r=!(!C.passiveListener||!s.passiveListeners)&&{passive:!0,capture:!1};C.touch?(n.addEventListener(t.start,this.scrollbar.onDragStart,o),n.addEventListener(t.move,this.scrollbar.onDragMove,o),n.addEventListener(t.end,this.scrollbar.onDragEnd,r)):(n.addEventListener(i.start,this.scrollbar.onDragStart,o),m.addEventListener(i.move,this.scrollbar.onDragMove,o),m.addEventListener(i.end,this.scrollbar.onDragEnd,r))}},disableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,s=this.params,n=e.$el[0],o=!(!C.passiveListener||!s.passiveListeners)&&{passive:!1,capture:!1},r=!(!C.passiveListener||!s.passiveListeners)&&{passive:!0,capture:!1};C.touch?(n.removeEventListener(t.start,this.scrollbar.onDragStart,o),n.removeEventListener(t.move,this.scrollbar.onDragMove,o),n.removeEventListener(t.end,this.scrollbar.onDragEnd,r)):(n.removeEventListener(i.start,this.scrollbar.onDragStart,o),m.removeEventListener(i.move,this.scrollbar.onDragMove,o),m.removeEventListener(i.end,this.scrollbar.onDragEnd,r))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,s=P(i.el);this.params.uniqueNavElements&&"string"==typeof i.el&&1<s.length&&1===t.find(i.el).length&&(s=t.find(i.el));var n=s.find("."+this.params.scrollbar.dragClass);0===n.length&&(n=P('<div class="'+this.params.scrollbar.dragClass+'"></div>'),s.append(n)),oe.extend(e,{$el:s,el:s[0],$dragEl:n,dragEl:n[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},Z={setTransform:function(e,t){var i=this.rtl,s=P(e),n=i?-1:1,o=s.attr("data-swiper-parallax")||"0",r=s.attr("data-swiper-parallax-x"),a=s.attr("data-swiper-parallax-y"),l=s.attr("data-swiper-parallax-scale"),d=s.attr("data-swiper-parallax-opacity");if(r||a?(r=r||"0",a=a||"0"):this.isHorizontal()?(r=o,a="0"):(a=o,r="0"),r=0<=r.indexOf("%")?parseInt(r,10)*t*n+"%":r*t*n+"px",a=0<=a.indexOf("%")?parseInt(a,10)*t+"%":a*t+"px",null!=d){var h=d-(d-1)*(1-Math.abs(t));s[0].style.opacity=h}if(null==l)s.transform("translate3d("+r+", "+a+", 0px)");else{var c=l-(l-1)*(1-Math.abs(t));s.transform("translate3d("+r+", "+a+", 0px) scale("+c+")")}},setTranslate:function(){var s=this,e=s.$el,t=s.slides,n=s.progress,o=s.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){s.parallax.setTransform(t,n)}),t.each(function(e,t){var i=t.progress;1<s.params.slidesPerGroup&&"auto"!==s.params.slidesPerView&&(i+=Math.ceil(e/2)-n*(o.length-1)),i=Math.min(Math.max(i,-1),1),P(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){s.parallax.setTransform(t,i)})})},setTransition:function(n){void 0===n&&(n=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){var i=P(t),s=parseInt(i.attr("data-swiper-parallax-duration"),10)||n;0===n&&(s=0),i.transition(s)})}},ee={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,s=e.targetTouches[1].pageX,n=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(s-t,2)+Math.pow(n-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!C.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,s.scaleStart=ee.getDistanceBetweenTouches(e)}s.$slideEl&&s.$slideEl.length||(s.$slideEl=P(e.target).closest("."+this.params.slideClass),0===s.$slideEl.length&&(s.$slideEl=this.slides.eq(this.activeIndex)),s.$imageEl=s.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),s.$imageWrapEl=s.$imageEl.parent("."+t.containerClass),s.maxRatio=s.$imageWrapEl.attr("data-swiper-zoom")||t.maxRatio,0!==s.$imageWrapEl.length)?(s.$imageEl.transition(0),this.zoom.isScaling=!0):s.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!C.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=ee.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=C.gestures?e.scale*i.currentScale:s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!C.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!$.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,s.maxRatio),t.minRatio),s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,s=t.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||($.android&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,s=t.image,n=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=oe.getTranslate(i.$imageWrapEl[0],"x")||0,s.startY=oe.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(s.startX=-s.startX,s.startY=-s.startY));var o=s.width*t.scale,r=s.height*t.scale;if(!(o<i.slideWidth&&r<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-o/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-r/2,0),s.maxY=-s.minY,s.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),n.prevPositionX||(n.prevPositionX=s.touchesCurrent.x),n.prevPositionY||(n.prevPositionY=s.touchesCurrent.y),n.prevTime||(n.prevTime=Date.now()),n.x=(s.touchesCurrent.x-n.prevPositionX)/(Date.now()-n.prevTime)/2,n.y=(s.touchesCurrent.y-n.prevPositionY)/(Date.now()-n.prevTime)/2,Math.abs(s.touchesCurrent.x-n.prevPositionX)<2&&(n.x=0),Math.abs(s.touchesCurrent.y-n.prevPositionY)<2&&(n.y=0),n.prevPositionX=s.touchesCurrent.x,n.prevPositionY=s.touchesCurrent.y,n.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+s.currentX+"px, "+s.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,s=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var n=300,o=300,r=s.x*n,a=i.currentX+r,l=s.y*o,d=i.currentY+l;0!==s.x&&(n=Math.abs((a-i.currentX)/s.x)),0!==s.y&&(o=Math.abs((d-i.currentY)/s.y));var h=Math.max(n,o);i.currentX=a,i.currentY=d;var c=i.width*e.scale,p=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-c/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-p/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,s,n,o,r,a,l,d,h,c,p,u,f,m,v,g=this.zoom,y=this.params.zoom,b=g.gesture,w=g.image;b.$slideEl||(b.$slideEl=this.slides.eq(this.activeIndex),b.$imageEl=b.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),b.$imageWrapEl=b.$imageEl.parent("."+y.containerClass)),b.$imageEl&&0!==b.$imageEl.length&&(b.$slideEl.addClass(""+y.zoomedSlideClass),i=void 0===w.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=w.touchesStart.x,w.touchesStart.y),g.scale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,g.currentScale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,e?(m=b.$slideEl[0].offsetWidth,v=b.$slideEl[0].offsetHeight,s=b.$slideEl.offset().left+m/2-t,n=b.$slideEl.offset().top+v/2-i,a=b.$imageEl[0].offsetWidth,l=b.$imageEl[0].offsetHeight,d=a*g.scale,h=l*g.scale,u=-(c=Math.min(m/2-d/2,0)),f=-(p=Math.min(v/2-h/2,0)),(o=s*g.scale)<c&&(o=c),u<o&&(o=u),(r=n*g.scale)<p&&(r=p),f<r&&(r=f)):r=o=0,b.$imageWrapEl.transition(300).transform("translate3d("+o+"px, "+r+"px,0)"),b.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+g.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(i.$slideEl=this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this.zoom;if(!e.enabled){e.enabled=!0;var t=!("touchstart"!==this.touchEvents.start||!C.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!C.passiveListener||{passive:!1,capture:!0},s="."+this.params.slideClass;C.gestures?(this.$wrapperEl.on("gesturestart",s,e.onGestureStart,t),this.$wrapperEl.on("gesturechange",s,e.onGestureChange,t),this.$wrapperEl.on("gestureend",s,e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.on(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.on(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.on(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove,i)}},disable:function(){var e=this.zoom;if(e.enabled){this.zoom.enabled=!1;var t=!("touchstart"!==this.touchEvents.start||!C.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!C.passiveListener||{passive:!1,capture:!0},s="."+this.params.slideClass;C.gestures?(this.$wrapperEl.off("gesturestart",s,e.onGestureStart,t),this.$wrapperEl.off("gesturechange",s,e.onGestureChange,t),this.$wrapperEl.off("gestureend",s,e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.off(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.off(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove,i)}}},te={loadInSlide:function(e,l){void 0===l&&(l=!0);var d=this,h=d.params.lazy;if(void 0!==e&&0!==d.slides.length){var c=d.virtual&&d.params.virtual.enabled?d.$wrapperEl.children("."+d.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):d.slides.eq(e),t=c.find("."+h.elementClass+":not(."+h.loadedClass+"):not(."+h.loadingClass+")");!c.hasClass(h.elementClass)||c.hasClass(h.loadedClass)||c.hasClass(h.loadingClass)||(t=t.add(c[0])),0!==t.length&&t.each(function(e,t){var s=P(t);s.addClass(h.loadingClass);var n=s.attr("data-background"),o=s.attr("data-src"),r=s.attr("data-srcset"),a=s.attr("data-sizes");d.loadImage(s[0],o||n,r,a,!1,function(){if(null!=d&&d&&(!d||d.params)&&!d.destroyed){if(n?(s.css("background-image",'url("'+n+'")'),s.removeAttr("data-background")):(r&&(s.attr("srcset",r),s.removeAttr("data-srcset")),a&&(s.attr("sizes",a),s.removeAttr("data-sizes")),o&&(s.attr("src",o),s.removeAttr("data-src"))),s.addClass(h.loadedClass).removeClass(h.loadingClass),c.find("."+h.preloaderClass).remove(),d.params.loop&&l){var e=c.attr("data-swiper-slide-index");if(c.hasClass(d.params.slideDuplicateClass)){var t=d.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+d.params.slideDuplicateClass+")");d.lazy.loadInSlide(t.index(),!1)}else{var i=d.$wrapperEl.children("."+d.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');d.lazy.loadInSlide(i.index(),!1)}}d.emit("lazyImageReady",c[0],s[0]),d.params.autoHeight&&d.updateAutoHeight()}}),d.emit("lazyImageLoad",c[0],s[0])})}},load:function(){var s=this,t=s.$wrapperEl,i=s.params,n=s.slides,e=s.activeIndex,o=s.virtual&&i.virtual.enabled,r=i.lazy,a=i.slidesPerView;function l(e){if(o){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(n[e])return 1}function d(e){return o?P(e).attr("data-swiper-slide-index"):P(e).index()}if("auto"===a&&(a=0),s.lazy.initialImageLoaded||(s.lazy.initialImageLoaded=!0),s.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e,t){var i=o?P(t).attr("data-swiper-slide-index"):P(t).index();s.lazy.loadInSlide(i)});else if(1<a)for(var h=e;h<e+a;h+=1)l(h)&&s.lazy.loadInSlide(h);else s.lazy.loadInSlide(e);if(r.loadPrevNext)if(1<a||r.loadPrevNextAmount&&1<r.loadPrevNextAmount){for(var c=r.loadPrevNextAmount,p=a,u=Math.min(e+p+Math.max(c,p),n.length),f=Math.max(e-Math.max(p,c),0),m=e+a;m<u;m+=1)l(m)&&s.lazy.loadInSlide(m);for(var v=f;v<e;v+=1)l(v)&&s.lazy.loadInSlide(v)}else{var g=t.children("."+i.slideNextClass);0<g.length&&s.lazy.loadInSlide(d(g));var y=t.children("."+i.slidePrevClass);0<y.length&&s.lazy.loadInSlide(d(y))}}},ie={LinearSpline:function(e,t){var i,s,n,o,r;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(r=function(e,t){for(s=-1,i=e.length;1<i-s;)e[n=i+s>>1]<=t?s=n:i=n;return i}(this.x,e),o=r-1,(e-this.x[o])*(this.y[r]-this.y[o])/(this.x[r]-this.x[o])+this.y[o]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new ie.LinearSpline(this.slidesGrid,e.slidesGrid):new ie.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,s,n=this,o=n.controller.control;function r(e){var t=n.rtlTranslate?-n.translate:n.translate;"slide"===n.params.controller.by&&(n.controller.getInterpolateFunction(e),s=-n.controller.spline.interpolate(-t)),s&&"container"!==n.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(n.maxTranslate()-n.minTranslate()),s=(t-n.minTranslate())*i+e.minTranslate()),n.params.controller.inverse&&(s=e.maxTranslate()-s),e.updateProgress(s),e.setTranslate(s,n),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(o))for(var a=0;a<o.length;a+=1)o[a]!==t&&o[a]instanceof N&&r(o[a]);else o instanceof N&&t!==o&&r(o)},setTransition:function(t,e){var i,s=this,n=s.controller.control;function o(e){e.setTransition(t,s),0!==t&&(e.transitionStart(),e.params.autoHeight&&oe.nextTick(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){n&&(e.params.loop&&"slide"===s.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(n))for(i=0;i<n.length;i+=1)n[i]!==e&&n[i]instanceof N&&o(n[i]);else n instanceof N&&e!==n&&o(n)}},se={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=P(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is("."+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop&&this.navigation){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&0<i.length&&(this.isBeginning?this.a11y.disableEl(i):this.a11y.enableEl(i)),t&&0<t.length&&(this.isEnd?this.a11y.disableEl(t):this.a11y.enableEl(t))}},updatePagination:function(){var s=this,n=s.params.a11y;s.pagination&&s.params.pagination.clickable&&s.pagination.bullets&&s.pagination.bullets.length&&s.pagination.bullets.each(function(e,t){var i=P(t);s.a11y.makeElFocusable(i),s.a11y.addElRole(i,"button"),s.a11y.addElLabel(i,n.paginationBulletMessage.replace(/{{index}}/,i.index()+1))})},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&0<this.a11y.liveRegion.length&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},re={init:function(){if(this.params.history){if(!ne.history||!ne.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=re.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||ne.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||ne.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=re.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=ne.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),s=re.slugify(i.attr("data-history"));ne.location.pathname.includes(e)||(s=e+"/"+s);var n=ne.history.state;n&&n.value===s||(this.params.history.replaceState?ne.history.replaceState({value:s},null,s):ne.history.pushState({value:s},null,s))}},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var s=0,n=this.slides.length;s<n;s+=1){var o=this.slides.eq(s);if(re.slugify(o.attr("data-history"))===t&&!o.hasClass(this.params.slideDuplicateClass)){var r=o.index();this.slideTo(r,e,i)}}else this.slideTo(0,e,i)}},ae={onHashCange:function(){var e=m.location.hash.replace("#","");if(e!==this.slides.eq(this.activeIndex).attr("data-hash")){var t=this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index();if(void 0===t)return;this.slideTo(t)}},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&ne.history&&ne.history.replaceState)ne.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||"");else{var e=this.slides.eq(this.activeIndex),t=e.attr("data-hash")||e.attr("data-history");m.location.hash=t||""}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var e=m.location.hash.replace("#","");if(e)for(var t=0,i=this.slides.length;t<i;t+=1){var s=this.slides.eq(t);if((s.attr("data-hash")||s.attr("data-history"))===e&&!s.hasClass(this.params.slideDuplicateClass)){var n=s.index();this.slideTo(n,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&P(ne).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&P(ne).off("hashchange",this.hashNavigation.onHashCange)}},le={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=oe.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")),e.params.cssMode&&e.autoplay.running&&e.autoplay.run()},i)},start:function(){return void 0===this.autoplay.timeout&&!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0)},stop:function(){return!!this.autoplay.running&&void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0)},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))}},de={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),s=-i[0].swiperSlideOffset;this.params.virtualTranslate||(s-=this.translate);var n=0;this.isHorizontal()||(n=s,s=0);var o=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:o}).transform("translate3d("+s+"px, "+n+"px, 0px)")}},setTransition:function(e){var i=this,t=i.slides,s=i.$wrapperEl;if(t.transition(e),i.params.virtualTranslate&&0!==e){var n=!1;t.transitionEnd(function(){if(!n&&i&&!i.destroyed){n=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}})}}},he={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,s=this.slides,n=this.width,o=this.height,r=this.rtlTranslate,a=this.size,l=this.params.cubeEffect,d=this.isHorizontal(),h=this.virtual&&this.params.virtual.enabled,c=0;l.shadow&&(d?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=P('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:n+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=P('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var p=0;p<s.length;p+=1){var u=s.eq(p),f=p;h&&(f=parseInt(u.attr("data-swiper-slide-index"),10));var m=90*f,v=Math.floor(m/360);r&&(m=-m,v=Math.floor(-m/360));var g=Math.max(Math.min(u[0].progress,1),-1),y=0,b=0,w=0;f%4==0?(y=4*-v*a,w=0):(f-1)%4==0?(y=0,w=4*-v*a):(f-2)%4==0?(y=a+4*v*a,w=a):(f-3)%4==0&&(y=-a,w=3*a+4*a*v),r&&(y=-y),d||(b=y,y=0);var x="rotateX("+(d?0:-m)+"deg) rotateY("+(d?m:0)+"deg) translate3d("+y+"px, "+b+"px, "+w+"px)";if(g<=1&&-1<g&&(c=90*f+90*g,r&&(c=90*-f-90*g)),u.transform(x),l.slideShadows){var T=d?u.find(".swiper-slide-shadow-left"):u.find(".swiper-slide-shadow-top"),S=d?u.find(".swiper-slide-shadow-right"):u.find(".swiper-slide-shadow-bottom");0===T.length&&(T=P('<div class="swiper-slide-shadow-'+(d?"left":"top")+'"></div>'),u.append(T)),0===S.length&&(S=P('<div class="swiper-slide-shadow-'+(d?"right":"bottom")+'"></div>'),u.append(S)),T.length&&(T[0].style.opacity=Math.max(-g,0)),S.length&&(S[0].style.opacity=Math.max(g,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+a/2+"px","-moz-transform-origin":"50% 50% -"+a/2+"px","-ms-transform-origin":"50% 50% -"+a/2+"px","transform-origin":"50% 50% -"+a/2+"px"}),l.shadow)if(d)e.transform("translate3d(0px, "+(n/2+l.shadowOffset)+"px, "+-n/2+"px) rotateX(90deg) rotateZ(0deg) scale("+l.shadowScale+")");else{var _=Math.abs(c)-90*Math.floor(Math.abs(c)/90),C=1.5-(Math.sin(2*_*Math.PI/360)/2+Math.cos(2*_*Math.PI/360)/2),k=l.shadowScale,E=l.shadowScale/C,$=l.shadowOffset;e.transform("scale3d("+k+", 1, "+E+") translate3d(0px, "+(o/2+$)+"px, "+-o/2/E+"px) rotateX(-90deg)")}var M=F.isSafari||F.isUiWebView?-a/2:0;i.transform("translate3d(0px,0,"+M+"px) rotateX("+(this.isHorizontal()?0:c)+"deg) rotateY("+(this.isHorizontal()?-c:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},ce={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var s=e.eq(i),n=s[0].progress;this.params.flipEffect.limitRotation&&(n=Math.max(Math.min(s[0].progress,1),-1));var o=-180*n,r=0,a=-s[0].swiperSlideOffset,l=0;if(this.isHorizontal()?t&&(o=-o):(l=a,r=-o,o=a=0),s[0].style.zIndex=-Math.abs(Math.round(n))+e.length,this.params.flipEffect.slideShadows){var d=this.isHorizontal()?s.find(".swiper-slide-shadow-left"):s.find(".swiper-slide-shadow-top"),h=this.isHorizontal()?s.find(".swiper-slide-shadow-right"):s.find(".swiper-slide-shadow-bottom");0===d.length&&(d=P('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),s.append(d)),0===h.length&&(h=P('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),s.append(h)),d.length&&(d[0].style.opacity=Math.max(-n,0)),h.length&&(h[0].style.opacity=Math.max(n,0))}s.transform("translate3d("+a+"px, "+l+"px, 0px) rotateX("+r+"deg) rotateY("+o+"deg)")}},setTransition:function(e){var i=this,t=i.slides,s=i.activeIndex,n=i.$wrapperEl;if(t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),i.params.virtualTranslate&&0!==e){var o=!1;t.eq(s).transitionEnd(function(){if(!o&&i&&!i.destroyed){o=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)n.trigger(e[t])}})}}},pe={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,s=this.$wrapperEl,n=this.slidesSizesGrid,o=this.params.coverflowEffect,r=this.isHorizontal(),a=this.translate,l=r?e/2-a:t/2-a,d=r?o.rotate:-o.rotate,h=o.depth,c=0,p=i.length;c<p;c+=1){var u=i.eq(c),f=n[c],m=(l-u[0].swiperSlideOffset-f/2)/f*o.modifier,v=r?d*m:0,g=r?0:d*m,y=-h*Math.abs(m),b=o.stretch;"string"==typeof b&&-1!==b.indexOf("%")&&(b=parseFloat(o.stretch)/100*f);var w=r?0:b*m,x=r?b*m:0;Math.abs(x)<.001&&(x=0),Math.abs(w)<.001&&(w=0),Math.abs(y)<.001&&(y=0),Math.abs(v)<.001&&(v=0),Math.abs(g)<.001&&(g=0);var T="translate3d("+x+"px,"+w+"px,"+y+"px)  rotateX("+g+"deg) rotateY("+v+"deg)";if(u.transform(T),u[0].style.zIndex=1-Math.abs(Math.round(m)),o.slideShadows){var S=r?u.find(".swiper-slide-shadow-left"):u.find(".swiper-slide-shadow-top"),_=r?u.find(".swiper-slide-shadow-right"):u.find(".swiper-slide-shadow-bottom");0===S.length&&(S=P('<div class="swiper-slide-shadow-'+(r?"left":"top")+'"></div>'),u.append(S)),0===_.length&&(_=P('<div class="swiper-slide-shadow-'+(r?"right":"bottom")+'"></div>'),u.append(_)),S.length&&(S[0].style.opacity=0<m?m:0),_.length&&(_[0].style.opacity=0<-m?-m:0)}}(C.pointerEvents||C.prefixedPointerEvents)&&(s[0].style.perspectiveOrigin=l+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},ue={init:function(){var e=this.params.thumbs,t=this.constructor;e.swiper instanceof t?(this.thumbs.swiper=e.swiper,oe.extend(this.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),oe.extend(this.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):oe.isObject(e.swiper)&&(this.thumbs.swiper=new t(oe.extend({},e.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),this.thumbs.swiperCreated=!0),this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass),this.thumbs.swiper.on("tap",this.thumbs.onThumbClick)},onThumbClick:function(){var e=this.thumbs.swiper;if(e){var t=e.clickedIndex,i=e.clickedSlide;if(!(i&&P(i).hasClass(this.params.thumbs.slideThumbActiveClass)||null==t)){var s;if(s=e.params.loop?parseInt(P(e.clickedSlide).attr("data-swiper-slide-index"),10):t,this.params.loop){var n=this.activeIndex;this.slides.eq(n).hasClass(this.params.slideDuplicateClass)&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,n=this.activeIndex);var o=this.slides.eq(n).prevAll('[data-swiper-slide-index="'+s+'"]').eq(0).index(),r=this.slides.eq(n).nextAll('[data-swiper-slide-index="'+s+'"]').eq(0).index();s=void 0===o||void 0!==r&&r-n<n-o?r:o}this.slideTo(s)}}},update:function(e){var t=this.thumbs.swiper;if(t){var i="auto"===t.params.slidesPerView?t.slidesPerViewDynamic():t.params.slidesPerView;if(this.realIndex!==t.realIndex){var s,n=t.activeIndex;if(t.params.loop){t.slides.eq(n).hasClass(t.params.slideDuplicateClass)&&(t.loopFix(),t._clientLeft=t.$wrapperEl[0].clientLeft,n=t.activeIndex);var o=t.slides.eq(n).prevAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),r=t.slides.eq(n).nextAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index();s=void 0===o?r:void 0===r?o:r-n==n-o?n:r-n<n-o?r:o}else s=this.realIndex;t.visibleSlidesIndexes&&t.visibleSlidesIndexes.indexOf(s)<0&&(t.params.centeredSlides?s=n<s?s-Math.floor(i/2)+1:s+Math.floor(i/2)-1:n<s&&(s=s-i+1),t.slideTo(s,e?0:void 0))}var a=1,l=this.params.thumbs.slideThumbActiveClass;if(1<this.params.slidesPerView&&!this.params.centeredSlides&&(a=this.params.slidesPerView),this.params.thumbs.multipleActiveThumbs||(a=1),a=Math.floor(a),t.slides.removeClass(l),t.params.loop||t.params.virtual&&t.params.virtual.enabled)for(var d=0;d<a;d+=1)t.$wrapperEl.children('[data-swiper-slide-index="'+(this.realIndex+d)+'"]').addClass(l);else for(var h=0;h<a;h+=1)t.slides.eq(this.realIndex+h).addClass(l)}}},fe=[H,j,q,W,R,X,Y,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){oe.extend(this,{mousewheel:{enabled:!1,enable:U.enable.bind(this),disable:U.disable.bind(this),handle:U.handle.bind(this),handleMouseEnter:U.handleMouseEnter.bind(this),handleMouseLeave:U.handleMouseLeave.bind(this),animateSlider:U.animateSlider.bind(this),releaseScroll:U.releaseScroll.bind(this),lastScrollTime:oe.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[]}})},on:{init:function(){!this.params.mousewheel.enabled&&this.params.cssMode&&this.mousewheel.disable(),this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.params.cssMode&&this.mousewheel.enable(),this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){oe.extend(this,{navigation:{init:K.init.bind(this),update:K.update.bind(this),destroy:K.destroy.bind(this),onNextClick:K.onNextClick.bind(this),onPrevClick:K.onPrevClick.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t,i=this.navigation,s=i.$nextEl,n=i.$prevEl;!this.params.navigation.hideOnClick||P(e.target).is(n)||P(e.target).is(s)||(s?t=s.hasClass(this.params.navigation.hiddenClass):n&&(t=n.hasClass(this.params.navigation.hiddenClass)),!0===t?this.emit("navigationShow",this):this.emit("navigationHide",this),s&&s.toggleClass(this.params.navigation.hiddenClass),n&&n.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){oe.extend(this,{pagination:{init:Q.init.bind(this),render:Q.render.bind(this),update:Q.update.bind(this),destroy:Q.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){!this.params.loop&&void 0!==this.snapIndex||this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&0<this.pagination.$el.length&&!P(e.target).hasClass(this.params.pagination.bulletClass)&&(!0===this.pagination.$el.hasClass(this.params.pagination.hiddenClass)?this.emit("paginationShow",this):this.emit("paginationHide",this),this.pagination.$el.toggleClass(this.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){oe.extend(this,{scrollbar:{init:J.init.bind(this),destroy:J.destroy.bind(this),updateSize:J.updateSize.bind(this),setTranslate:J.setTranslate.bind(this),setTransition:J.setTransition.bind(this),enableDraggable:J.enableDraggable.bind(this),disableDraggable:J.disableDraggable.bind(this),setDragPosition:J.setDragPosition.bind(this),getPointerPosition:J.getPointerPosition.bind(this),onDragStart:J.onDragStart.bind(this),onDragMove:J.onDragMove.bind(this),onDragEnd:J.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){oe.extend(this,{parallax:{setTransform:Z.setTransform.bind(this),setTranslate:Z.setTranslate.bind(this),setTransition:Z.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},init:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax.enabled&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var s=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){t[e]=ee[e].bind(s)}),oe.extend(s,{zoom:t});var n=1;Object.defineProperty(s.zoom,"scale",{get:function(){return n},set:function(e){if(n!==e){var t=s.zoom.gesture.$imageEl?s.zoom.gesture.$imageEl[0]:void 0,i=s.zoom.gesture.$slideEl?s.zoom.gesture.$slideEl[0]:void 0;s.emit("zoomChange",e,t,i)}n=e}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()},slideChange:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.params.cssMode&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){oe.extend(this,{lazy:{initialImageLoaded:!1,load:te.load.bind(this),loadInSlide:te.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()},slideChange:function(){this.params.lazy.enabled&&this.params.cssMode&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){oe.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:ie.getInterpolateFunction.bind(this),setTranslate:ie.setTranslate.bind(this),setTransition:ie.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;oe.extend(t,{a11y:{liveRegion:P('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(se).forEach(function(e){t.a11y[e]=se[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){oe.extend(this,{history:{init:re.init.bind(this),setHistory:re.setHistory.bind(this),setHistoryPopState:re.setHistoryPopState.bind(this),scrollToSlide:re.scrollToSlide.bind(this),destroy:re.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)},slideChange:function(){this.history.initialized&&this.params.cssMode&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){oe.extend(this,{hashNavigation:{initialized:!1,init:ae.init.bind(this),destroy:ae.destroy.bind(this),setHash:ae.setHash.bind(this),onHashCange:ae.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()},slideChange:function(){this.hashNavigation.initialized&&this.params.cssMode&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;oe.extend(t,{autoplay:{running:!1,paused:!1,run:le.run.bind(t),start:le.start.bind(t),stop:le.stop.bind(t),pause:le.pause.bind(t),onVisibilityChange:function(){"hidden"===document.visibilityState&&t.autoplay.running&&t.autoplay.pause(),"visible"===document.visibilityState&&t.autoplay.paused&&(t.autoplay.run(),t.autoplay.paused=!1)},onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&(this.autoplay.start(),document.addEventListener("visibilitychange",this.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},touchEnd:function(){this.params.cssMode&&this.autoplay.paused&&!this.params.autoplay.disableOnInteraction&&this.autoplay.run()},destroy:function(){this.autoplay.running&&this.autoplay.stop(),document.removeEventListener("visibilitychange",this.autoplay.onVisibilityChange)}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){oe.extend(this,{fadeEffect:{setTranslate:de.setTranslate.bind(this),setTransition:de.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};oe.extend(this.params,e),oe.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){oe.extend(this,{cubeEffect:{setTranslate:he.setTranslate.bind(this),setTransition:he.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};oe.extend(this.params,e),oe.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){oe.extend(this,{flipEffect:{setTranslate:ce.setTranslate.bind(this),setTransition:ce.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};oe.extend(this.params,e),oe.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){oe.extend(this,{coverflowEffect:{setTranslate:pe.setTranslate.bind(this),setTransition:pe.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}},{name:"thumbs",params:{thumbs:{multipleActiveThumbs:!0,swiper:null,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){oe.extend(this,{thumbs:{swiper:null,init:ue.init.bind(this),update:ue.update.bind(this),onThumbClick:ue.onThumbClick.bind(this)}})},on:{beforeInit:function(){var e=this.params.thumbs;e&&e.swiper&&(this.thumbs.init(),this.thumbs.update(!0))},slideChange:function(){this.thumbs.swiper&&this.thumbs.update()},update:function(){this.thumbs.swiper&&this.thumbs.update()},resize:function(){this.thumbs.swiper&&this.thumbs.update()},observerUpdate:function(){this.thumbs.swiper&&this.thumbs.update()},setTransition:function(e){var t=this.thumbs.swiper;t&&t.setTransition(e)},beforeDestroy:function(){var e=this.thumbs.swiper;e&&this.thumbs.swiperCreated&&e&&e.destroy()}}}];return void 0===N.use&&(N.use=N.Class.use,N.installModule=N.Class.installModule),N.use(fe),N}),function(e,t){if("function"==typeof define&&define.amd)define(["module","exports"],t);else if("undefined"!=typeof exports)t(module,exports);else{var i={exports:{}};t(i,i.exports),e.WOW=i.exports}}(this,function(e,t){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var s=function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e};function n(e,t){for(var i=0;i<t.length;i++){var s=t[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}function o(e,t){return 0<=t.indexOf(e)}function r(e,t,i){null!=e.addEventListener?e.addEventListener(t,i,!1):null!=e.attachEvent?e.attachEvent("on"+t,i):e[t]=i}function a(e,t,i){null!=e.removeEventListener?e.removeEventListener(t,i,!1):null!=e.detachEvent?e.detachEvent("on"+t,i):delete e[t]}var l=window.WeakMap||window.MozWeakMap||(s(d,[{key:"get",value:function(e){for(var t=0;t<this.keys.length;t++)if(this.keys[t]===e)return this.values[t]}},{key:"set",value:function(e,t){for(var i=0;i<this.keys.length;i++)if(this.keys[i]===e)return this.values[i]=t,this;return this.keys.push(e),this.values.push(t),this}}]),d);function d(){i(this,d),this.keys=[],this.values=[]}var h=window.MutationObserver||window.WebkitMutationObserver||window.MozMutationObserver||(s(c,[{key:"observe",value:function(){}}]),c.notSupported=!0,c);function c(){i(this,c),"undefined"!=typeof console&&null!==console&&(console.warn("MutationObserver is not supported by your browser."),console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content."))}var p=window.getComputedStyle||function(i){var s=/(\-([a-z]){1})/g;return{getPropertyValue:function(e){"float"===e&&(e="styleFloat"),s.test(e)&&e.replace(s,function(e,t){return t.toUpperCase()});var t=i.currentStyle;return(null!=t?t[e]:void 0)||null}}},u=(s(f,[{key:"init",value:function(){this.element=window.document.documentElement,o(document.readyState,["interactive","complete"])?this.start():r(document,"DOMContentLoaded",this.start),this.finished=[]}},{key:"start",value:function(){var o=this;if(this.stopped=!1,this.boxes=[].slice.call(this.element.querySelectorAll("."+this.config.boxClass)),this.all=this.boxes.slice(0),this.boxes.length)if(this.disabled())this.resetStyle();else for(var e=0;e<this.boxes.length;e++){var t=this.boxes[e];this.applyStyle(t,!0)}this.disabled()||(r(this.config.scrollContainer||window,"scroll",this.scrollHandler),r(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live&&new h(function(e){for(var t=0;t<e.length;t++)for(var i=e[t],s=0;s<i.addedNodes.length;s++){var n=i.addedNodes[s];o.doSync(n)}}).observe(document.body,{childList:!0,subtree:!0})}},{key:"stop",value:function(){this.stopped=!0,a(this.config.scrollContainer||window,"scroll",this.scrollHandler),a(window,"resize",this.scrollHandler),null!=this.interval&&clearInterval(this.interval)}},{key:"sync",value:function(){h.notSupported&&this.doSync(this.element)}},{key:"doSync",value:function(e){if(null==e&&(e=this.element),1===e.nodeType)for(var t=(e=e.parentNode||e).querySelectorAll("."+this.config.boxClass),i=0;i<t.length;i++){var s=t[i];o(s,this.all)||(this.boxes.push(s),this.all.push(s),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(s,!0),this.scrolled=!0)}}},{key:"show",value:function(e){var t,i;return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(e),t=e,i=this.wowEvent,null!=t.dispatchEvent?t.dispatchEvent(i):i in(null!=t)?t[i]():"on"+i in(null!=t)&&t["on"+i](),r(e,"animationend",this.resetAnimation),r(e,"oanimationend",this.resetAnimation),r(e,"webkitAnimationEnd",this.resetAnimation),r(e,"MSAnimationEnd",this.resetAnimation),e}},{key:"applyStyle",value:function(e,t){var i=this,s=e.getAttribute("data-wow-duration"),n=e.getAttribute("data-wow-delay"),o=e.getAttribute("data-wow-iteration");return this.animate(function(){return i.customStyle(e,t,s,n,o)})}},{key:"resetStyle",value:function(){for(var e=0;e<this.boxes.length;e++)this.boxes[e].style.visibility="visible"}},{key:"resetAnimation",value:function(e){if(0<=e.type.toLowerCase().indexOf("animationend")){var t=e.target||e.srcElement;t.className=t.className.replace(this.config.animateClass,"").trim()}}},{key:"customStyle",value:function(e,t,i,s,n){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),s&&this.vendorSet(e.style,{animationDelay:s}),n&&this.vendorSet(e.style,{animationIterationCount:n}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e}},{key:"vendorSet",value:function(e,t){for(var i in t)if(t.hasOwnProperty(i)){var s=t[i];e[""+i]=s;for(var n=0;n<this.vendors.length;n++)e[""+this.vendors[n]+i.charAt(0).toUpperCase()+i.substr(1)]=s}}},{key:"vendorCSS",value:function(e,t){for(var i=p(e),s=i.getPropertyCSSValue(t),n=0;n<this.vendors.length;n++){var o=this.vendors[n];s=s||i.getPropertyCSSValue("-"+o+"-"+t)}return s}},{key:"animationName",value:function(t){var i=void 0;try{i=this.vendorCSS(t,"animation-name").cssText}catch(e){i=p(t).getPropertyValue("animation-name")}return"none"===i?"":i}},{key:"cacheAnimationName",value:function(e){return this.animationNameCache.set(e,this.animationName(e))}},{key:"cachedAnimationName",value:function(e){return this.animationNameCache.get(e)}},{key:"scrollHandler",value:function(){this.scrolled=!0}},{key:"scrollCallback",value:function(){if(this.scrolled){this.scrolled=!1;for(var e=[],t=0;t<this.boxes.length;t++){var i=this.boxes[t];if(i){if(this.isVisible(i)){this.show(i);continue}e.push(i)}}this.boxes=e,this.boxes.length||this.config.live||this.stop()}}},{key:"offsetTop",value:function(e){for(;void 0===e.offsetTop;)e=e.parentNode;for(var t=e.offsetTop;e.offsetParent;)t+=(e=e.offsetParent).offsetTop;return t}},{key:"isVisible",value:function(e){var t=e.getAttribute("data-wow-offset")||this.config.offset,i=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset,s=i+Math.min(this.element.clientHeight,"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight)-t,n=this.offsetTop(e),o=n+e.clientHeight;return n<=s&&i<=o}},{key:"disabled",value:function(){return!this.config.mobile&&(e=navigator.userAgent,/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e));var e}}]),f);function f(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];i(this,f),this.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null},this.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},this.vendors=["moz","webkit"],this.start=this.start.bind(this),this.resetAnimation=this.resetAnimation.bind(this),this.scrollHandler=this.scrollHandler.bind(this),this.scrollCallback=this.scrollCallback.bind(this),this.scrolled=!0,this.config=function(e,t){for(var i in t)if(null==e[i]){var s=t[i];e[i]=s}return e}(e,this.defaults),null!=e.scrollContainer&&(this.config.scrollContainer=document.querySelector(e.scrollContainer)),this.animationNameCache=new l,this.wowEvent=function(e,t,i,s){var n=!(arguments.length<=1||void 0===t)&&t,o=!(arguments.length<=2||void 0===i)&&i,r=arguments.length<=3||void 0===s?null:s,a=void 0;return null!=document.createEvent?(a=document.createEvent("CustomEvent")).initCustomEvent(e,n,o,r):null!=document.createEventObject?(a=document.createEventObject()).eventType=e:a.eventName=e,a}(this.config.boxClass)}t.default=u,e.exports=t.default});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
